{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"borderColor\", \"backgroundColor\", \"pointHoverBackgroundColor\", \"dataPoints\", \"label\", \"pointed\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\charts\\\\ChartLineSimple.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getColor, deepObjectsMerge } from '@coreui/utils';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChartLineSimple = function ChartLineSimple(props) {\n  var borderColor = props.borderColor,\n      backgroundColor = props.backgroundColor,\n      pointHoverBackgroundColor = props.pointHoverBackgroundColor,\n      dataPoints = props.dataPoints,\n      label = props.label,\n      pointed = props.pointed,\n      attributes = _objectWithoutProperties(props, _excluded);\n\n  var pointHoverColor = function () {\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor;\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor;\n    }\n\n    return borderColor;\n  }();\n\n  var defaultDatasets = function () {\n    return [{\n      data: dataPoints,\n      borderColor: getColor(borderColor),\n      backgroundColor: getColor(backgroundColor),\n      pointBackgroundColor: getColor(pointHoverColor),\n      pointHoverBackgroundColor: getColor(pointHoverColor),\n      label: label\n    }];\n  }();\n\n  var pointedOptions = function () {\n    return {\n      scales: {\n        xAxes: [{\n          offset: true,\n          gridLines: {\n            color: 'transparent',\n            zeroLineColor: 'transparent'\n          },\n          ticks: {\n            fontSize: 2,\n            fontColor: 'transparent'\n          }\n        }],\n        yAxes: [{\n          display: false,\n          ticks: {\n            display: false,\n            min: Math.min.apply(Math, dataPoints) - 5,\n            max: Math.max.apply(Math, dataPoints) + 5,\n            callback: function callback(value, index, values) {\n              return value.toLocaleString();\n            }\n          }\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(tooltipItems, data) {\n            return data.labels[tooltipItems.index] + \": \" + data.datasets[0].data[tooltipItems.index].toLocaleString();\n          }\n        }\n      }\n    };\n  }();\n\n  var straightOptions = function () {\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(tooltipItems, data) {\n            return data.labels[tooltipItems.index] + \": \" + data.datasets[0].data[tooltipItems.index].toLocaleString();\n          }\n        }\n      }\n    };\n  }();\n\n  var defaultOptions = function () {\n    var options = pointed ? pointedOptions : straightOptions;\n    return Object.assign({}, options, {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      }\n    });\n  }();\n\n  var computedDatasets = function () {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {});\n  }();\n\n  var computedOptions = function () {\n    return deepObjectsMerge(defaultOptions, attributes.options || {});\n  }(); // render\n\n\n  return /*#__PURE__*/_jsxDEV(CChartLine, _objectSpread(_objectSpread({}, attributes), {}, {\n    datasets: computedDatasets,\n    options: computedOptions,\n    labels: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ChartLineSimple;\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\nexport default ChartLineSimple;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLineSimple\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/charts/ChartLineSimple.js"],"names":["React","PropTypes","getColor","deepObjectsMerge","CChartLine","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","callback","value","index","values","toLocaleString","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","tooltips","callbacks","tooltipItems","labels","datasets","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","computedOptions","propTypes","tag","oneOfType","func","string","className","array","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5,\r\n              callback: function(value, index, values) {\r\n                return value.toLocaleString();\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function(tooltipItems, data) {\r\n            return data.labels[tooltipItems.index] + \": \" + data.datasets[0].data[tooltipItems.index].toLocaleString();\r\n          }\r\n        }\r\n      },\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function(tooltipItems, data) {\r\n            return data.labels[tooltipItems.index] + \": \" + data.datasets[0].data[tooltipItems.index].toLocaleString();\r\n          }\r\n        }\r\n      },\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n"]},"metadata":{},"sourceType":"module"}