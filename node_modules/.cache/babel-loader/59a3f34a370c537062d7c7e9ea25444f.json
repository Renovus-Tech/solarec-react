{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\solarec2\\\\renovusUnicef\\\\ui_web\\\\src\\\\views\\\\pages\\\\energy\\\\trends.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, getDateLabel, round, colors } from '../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../helpers/sessionCookie.js';\nimport { CCard, CCardBody, CCardHeader, CRow, CCol, CButton, CSpinner } from '@coreui/react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Trends = function Trends() {\n  _s();\n\n  var _useState = useState('y'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateRange = _useState2[0],\n      setDateRange = _useState2[1];\n\n  var _useState3 = useState('hour'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataLoaded = _useState6[0],\n      setDataLoaded = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataLoadError = _useState8[0],\n      setDataLoadError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      generatorsLoaded = _useState12[0],\n      setGeneratorsLoaded = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedGenerators = _useState14[0],\n      setSelectedGenerators = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filterSubmitted = _useState16[0],\n      setFilterSubmitted = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      generators = _useState18[0],\n      setGenerators = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      generatorColors = _useState20[0],\n      setGeneratorColors = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      generatorsSelected = _useState22[0],\n      setGeneratorsSelected = _useState22[1];\n\n  var _useState23 = useState(true),\n      _useState24 = _slicedToArray(_useState23, 2),\n      allSelected = _useState24[0],\n      setAllSelected = _useState24[1];\n\n  var _useState25 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      lineChartOneData = _useState26[0],\n      setLineChartOneData = _useState26[1];\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData(period) {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    body.generators = selectedGenerators;\n    DataAPI({\n      'endpoint': 'solar/climate',\n      'method': 'POST',\n      'body': body\n    }).then(function (responseData) {\n      if (responseData.error && responseData.error.message) {\n        setDataLoadError(true);\n        alert(responseData.error.message);\n      }\n\n      setLoading(false);\n      var labels = responseData.data.map(function (rD, index) {\n        var label = \"\".concat(rD.from);\n        return label;\n      });\n      var graphData1 = {\n        labels: labels,\n        datasets: []\n      };\n\n      if (allSelected) {\n        var datasetTotalACProductionMwh = {\n          label: 'Total AC Production',\n          yAxisID: 'yACProduction',\n          borderColor: '#0400ff',\n          pointBackgroundColor: 'transparent',\n          pointBorderColor: 'transparent',\n          backgroundColor: 'transparent',\n          order: 0,\n          type: 'line',\n          data: responseData.data.map(function (x, i) {\n            return x.totalACProductionMwh;\n          })\n        };\n        graphData1.datasets.push(datasetTotalACProductionMwh);\n      }\n\n      responseData.data[0].genData.forEach(function (gen) {\n        var datasetACProduction = {\n          label: gen.code,\n          borderColor: generatorColors[gen.code],\n          pointBackgroundColor: 'transparent',\n          pointBorderColor: 'transparent',\n          backgroundColor: 'transparent',\n          yAxisID: 'yACProduction',\n          data: responseData.data.map(function (rD, index) {\n            return rD.genData.filter(function (rGen) {\n              return rGen.code == gen.code;\n            }).map(function (rGen, index2) {\n              return rGen.acProductionMwh;\n            })[0];\n          })\n        };\n        graphData1.datasets.push(datasetACProduction);\n      });\n      var datasetIrradiance = {\n        label: 'Irradiance',\n        yAxisID: 'yIrradiance',\n        borderColor: 'red',\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        data: responseData.data.map(function (x, i) {\n          return x.totalIrradiationKwhM2;\n        })\n      };\n      graphData1.datasets.push(datasetIrradiance);\n      setLineChartOneData(graphData1);\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if (!dataLoaded && response && !response.error) {\n        if (response.generators != null) {\n          setGenerators(response.generators); // setSelectedGenerators(response.generators.map((gen) => (gen.id)));\n\n          var colorIndex = 0;\n          response.generators.forEach(function (gen) {\n            generatorColors[gen.code] = colors[colorIndex % colors.length];\n            setGeneratorColors(generatorColors);\n            colorIndex++;\n          });\n        }\n\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  var selectGenerator = function selectGenerator(id) {\n    var newSelected = selectedGenerators;\n    newSelected = newSelected.includes(id) ? newSelected.filter(function (i) {\n      return i !== id;\n    }) // remove item\n    : [].concat(_toConsumableArray(newSelected), [id]); // add item\n\n    setSelectedGenerators(newSelected.sort());\n  };\n\n  var filterGenerators = function filterGenerators() {\n    setDataLoaded(false);\n    setGeneratorsSelected(false);\n    setFilterSubmitted(true);\n\n    if (selectedGenerators.length > 0) {\n      setLoading(true);\n      setGeneratorsSelected(true);\n      fetchData(dateRange);\n    }\n  };\n\n  var options = {\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: true\n    },\n    elements: {\n      line: {\n        tension: .4\n      }\n    }\n  };\n\n  var options1 = _objectSpread(_objectSpread({}, options), {}, {\n    scales: {\n      yACProduction: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        beginAtZero: false\n      },\n      yIrradiance: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        grid: {\n          drawOnChartArea: false // only want the grid lines for one axis to show up\n\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var decimals = 3;\n            var unit = ' MWh';\n\n            if (tooltipItem.dataset.label == 'Irradiance') {\n              decimals = 2;\n              unit = ' Kwh/m2';\n            }\n\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, decimals) + unit;\n          }\n        }\n      }\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Climate - Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"8\",\n          className: \"text-right d-flex flex-center flex-justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 1.2\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        className: \"py-3 mb-4 mx-0 bg-light\",\n        style: {\n          borderRadius: \"3px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"10\",\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mx-2 my-2 pt-1\",\n            style: {\n              lineHeight: 1.2,\n              minWidth: '110px'\n            },\n            children: \"Select inverter:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, _this), generatorsLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              style: {\n                backgroundColor: '#0400ff',\n                color: 'white'\n              },\n              className: (allSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n              onClick: function onClick() {\n                return setAllSelected(!allSelected);\n              },\n              children: \"ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, _this), generators.map(function (gen, index) {\n              return /*#__PURE__*/_jsxDEV(CButton, {\n                style: {\n                  backgroundColor: generatorColors[gen.code],\n                  color: 'white'\n                },\n                className: (selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n                onClick: function onClick() {\n                  return selectGenerator(gen.id);\n                },\n                id: gen.id,\n                children: gen.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(CSpinner, {\n            size: \"sm\",\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"2\",\n          className: \"text-right d-flex flex-end flex-justify-end \",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            className: \"mx-2 mb-1\",\n            onClick: function onClick() {\n              return filterGenerators();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, _this), generatorsSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Production and Irradiance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-left\",\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"MWh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"Kwh/m2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartOneData,\n                options: options1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filterSubmitted && /*#__PURE__*/_jsxDEV(CRow, {\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            className: \"text-center\",\n            children: \"Select one or more inverters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(Trends, \"iq4Umewch0neT33SEQk433hL8kM=\");\n\n_c = Trends;\nexport default Trends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trends\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/src/views/pages/energy/trends.js"],"names":["React","useEffect","useState","DataAPI","DateFilter","getDateLabel","round","colors","setCookie","getCookie","CCard","CCardBody","CCardHeader","CRow","CCol","CButton","CSpinner","Line","Trends","dateRange","setDateRange","groupBy","setGroupBy","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","generatorsLoaded","setGeneratorsLoaded","selectedGenerators","setSelectedGenerators","filterSubmitted","setFilterSubmitted","generators","setGenerators","generatorColors","setGeneratorColors","generatorsSelected","setGeneratorsSelected","allSelected","setAllSelected","labels","datasets","lineChartOneData","setLineChartOneData","loadGenerators","fetchData","period","body","location","split","length","from","to","then","responseData","error","message","alert","data","map","rD","index","label","graphData1","datasetTotalACProductionMwh","yAxisID","borderColor","pointBackgroundColor","pointBorderColor","backgroundColor","order","type","x","i","totalACProductionMwh","push","genData","forEach","gen","datasetACProduction","code","filter","rGen","index2","acProductionMwh","datasetIrradiance","totalIrradiationKwhM2","response","window","reload","colorIndex","selectGenerator","id","newSelected","includes","sort","filterGenerators","options","responsive","animation","duration","tooltips","enabled","elements","line","tension","options1","scales","yACProduction","display","position","beginAtZero","yIrradiance","grid","drawOnChartArea","plugins","tooltip","callbacks","tooltipItem","decimals","unit","dataset","raw","lineHeight","value","borderRadius","minWidth","color","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, getDateLabel, round, colors} from '../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../helpers/sessionCookie.js'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSpinner,\r\n} from '@coreui/react'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Trends = () => {\r\n\r\n  const [dateRange, setDateRange] = useState('y');\r\n  const [groupBy, setGroupBy] = useState('hour');\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [selectedGenerators, setSelectedGenerators] = useState([]);\r\n  const [filterSubmitted, setFilterSubmitted] = useState(false);\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorColors, setGeneratorColors] = useState([]);\r\n  const [generatorsSelected, setGeneratorsSelected] = useState(false);\r\n  const [allSelected, setAllSelected] = useState(true);\r\n\r\n  const [lineChartOneData, setLineChartOneData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n  \r\n\r\n  const fetchData = (period) => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.location = getCookie('location');\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy;\r\n    body.generators = selectedGenerators;\r\n    \r\n    DataAPI(\r\n      {\r\n      'endpoint': 'solar/climate',\r\n      'method': 'POST',\r\n      'body': body\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        if (responseData.error && responseData.error.message) {\r\n          setDataLoadError(true)\r\n          alert(responseData.error.message)\r\n        } \r\n\r\n        setLoading(false);\r\n\r\n          const labels = responseData.data.map((rD, index) => {\r\n            const label = `${rD.from}`\r\n            return label\r\n          })\r\n\r\n          const graphData1 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n\r\n          if (allSelected) {\r\n\r\n            const datasetTotalACProductionMwh = {\r\n              label: 'Total AC Production',\r\n              yAxisID: 'yACProduction',\r\n              borderColor: '#0400ff',\r\n              pointBackgroundColor: 'transparent',\r\n              pointBorderColor: 'transparent',\r\n              backgroundColor: 'transparent',\r\n              order: 0,\r\n              type: 'line',\r\n              data: responseData.data.map( (x,i) => {\r\n                        return x.totalACProductionMwh;\r\n                      }),\r\n            }\r\n            graphData1.datasets.push(datasetTotalACProductionMwh)\r\n          }\r\n\r\n          responseData.data[0].genData.forEach((gen) => {\r\n            const datasetACProduction = {\r\n              label:  gen.code,\r\n              borderColor: generatorColors[gen.code],\r\n              pointBackgroundColor: 'transparent',\r\n              pointBorderColor: 'transparent',\r\n              backgroundColor: 'transparent',\r\n              yAxisID: 'yACProduction',\r\n              data: responseData.data.map((rD, index) => {\r\n                return rD.genData.filter(rGen => rGen.code == gen.code).map((rGen, index2) => rGen.acProductionMwh)[0]\r\n              }),\r\n            };\r\n            graphData1.datasets.push(datasetACProduction);\r\n          });\r\n\r\n          const datasetIrradiance = {\r\n            label: 'Irradiance',\r\n            yAxisID: 'yIrradiance',\r\n            borderColor: 'red',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            data: responseData.data.map( (x,i) => {\r\n                    return x.totalIrradiationKwhM2;\r\n                  }),\r\n          }\r\n          graphData1.datasets.push(datasetIrradiance)\r\n\r\n          setLineChartOneData(graphData1)\r\n\r\n      });\r\n\r\n  }\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (response && response.error) {\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n        }\r\n        else if (!dataLoaded && response  && !response.error) {\r\n\r\n          if (response.generators != null) {\r\n            setGenerators(response.generators);\r\n            // setSelectedGenerators(response.generators.map((gen) => (gen.id)));\r\n            let colorIndex = 0\r\n            response.generators.forEach((gen) => {\r\n              generatorColors[gen.code] = colors[colorIndex%colors.length];\r\n              setGeneratorColors(generatorColors);\r\n              colorIndex++\r\n            });\r\n          }\r\n\r\n          setGeneratorsLoaded(true);\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const selectGenerator = (id) => {\r\n\r\n    let newSelected = selectedGenerators;\r\n    newSelected = newSelected.includes(id)\r\n                          ? newSelected.filter(i => i !== id) // remove item\r\n                          : [ ...newSelected, id ]; // add item\r\n    setSelectedGenerators(newSelected.sort());\r\n  }\r\n\r\n  const filterGenerators = () => {\r\n\r\n    setDataLoaded(false);\r\n    setGeneratorsSelected(false);\r\n    setFilterSubmitted(true);\r\n    if (selectedGenerators.length > 0) {\r\n      setLoading(true);\r\n      setGeneratorsSelected(true);\r\n      fetchData(dateRange);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const options =  {\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: true\r\n    },\r\n    elements: {\r\n      line: {\r\n          tension: .4\r\n      }\r\n    },\r\n  }\r\n\r\n  const options1 = {\r\n    ...options,\r\n    scales: {\r\n      yACProduction: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'left',\r\n        beginAtZero: false,\r\n      },\r\n      yIrradiance: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'right',\r\n        grid: {\r\n          drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            let decimals = 3\r\n            let unit = ' MWh'\r\n            if (tooltipItem.dataset.label == 'Irradiance') {\r\n              decimals = 2\r\n              unit = ' Kwh/m2'\r\n            }\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,decimals) + unit;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n      <CCard>\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"4\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Climate - Trends\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n\r\n            <CCol sm=\"8\" className=\"text-right d-flex flex-center flex-justify-end\">\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:1.2}}>Period</h6>\r\n              <DateFilter options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); }} />\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n          <CRow className={\"py-3 mb-4 mx-0 bg-light\"} style={{borderRadius:\"3px\"}}>\r\n            <CCol sm=\"10\" className={\"d-flex \"} >\r\n              <h6 className=\"mx-2 my-2 pt-1\" style={{lineHeight:1.2,minWidth:'110px'}}>Select inverter:</h6>   \r\n              {generatorsLoaded ? \r\n                <div>\r\n                  <CButton \r\n                    style={{backgroundColor:'#0400ff',color: 'white'}} \r\n                    className={(allSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                    onClick={() => setAllSelected(!allSelected)}\r\n                    >\r\n                    ALL\r\n                  </CButton>\r\n                  { generators.map((gen, index) => (  \r\n                    <CButton \r\n                      style={{backgroundColor:generatorColors[gen.code],color: 'white'}} \r\n                      className={(selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                      onClick={() => selectGenerator(gen.id)} \r\n                      id={gen.id}\r\n                      >\r\n                        {gen.code}\r\n                    </CButton>\r\n                  )) }\r\n                </div>\r\n                :\r\n                <CSpinner \r\n                  size=\"sm\"\r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              }\r\n            </CCol>\r\n            <CCol sm=\"2\" className=\"text-right d-flex flex-end flex-justify-end \">\r\n              <CButton color=\"primary\" className=\"mx-2 mb-1\" onClick={() => filterGenerators()} >Submit</CButton>\r\n            </CCol>\r\n        </CRow>\r\n\r\n        { generatorsSelected ?\r\n\r\n          <div>\r\n\r\n            {!loading || dataLoadError ? \r\n\r\n              <div>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Production and Irradiance</h4>\r\n                    <div className='d-flex'>\r\n                      <div className=\"text-left\" style={{width: '50%'}}>MWh</div>\r\n                      <div className=\"text-right\" style={{width: '50%'}}>Kwh/m2</div>\r\n                    </div>\r\n                    <Line\r\n                      data={lineChartOneData}\r\n                      options={options1}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n\r\n          </div>\r\n\r\n        :\r\n\r\n        <div>\r\n          { filterSubmitted &&\r\n            <CRow>\r\n              <CCol className=\"text-center\">\r\n                Select one or more inverters\r\n              </CCol>\r\n            </CRow>\r\n          }\r\n        </div>\r\n\r\n}\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n  )\r\n}\r\n\r\nexport default Trends\r\n"]},"metadata":{},"sourceType":"module"}