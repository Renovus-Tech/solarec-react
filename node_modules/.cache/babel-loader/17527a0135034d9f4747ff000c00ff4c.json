{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\solarec2\\\\renovusUnicef\\\\ui_web\\\\src\\\\views\\\\pages\\\\client\\\\settings.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CButton, CCard, CCardHeader, CCardBody, CCol, CForm, CFormGroup, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useTranslation } from 'react-i18next';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { setCookie } from 'src/helpers/sessionCookie.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Settings = function Settings() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dRecsSoldPorcentage = _useState4[0],\n      setDRecsSoldPorcentage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dRecsPrice = _useState6[0],\n      setDRecsPrice = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clientPreferencesChanged = _useState8[0],\n      setClientPreferencesChanged = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      clientPreferencesSaved = _useState10[0],\n      setClientPreferencesSaved = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientResponse = _useState12[0],\n      setClientResponse = _useState12[1];\n\n  useEffect(function () {\n    loadUser();\n  }, []);\n\n  var loadUser = function loadUser() {\n    setLoading(true);\n    DataAPI({\n      'endpoint': 'admin/clients/current',\n      'method': 'GET'\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setClientResponse(response);\n      response.settings.forEach(function (setting) {\n        if (setting.name === \"dRecsSoldPorcentage\") {\n          setDRecsSoldPorcentage(setting.value);\n          setCookie('dRecsSoldPorcentage', setting.value);\n        } else if (setting.name === \"dRecsPrice\") {\n          setDRecsPrice(setting.value);\n          setCookie('dRecsPrice', setting.value);\n        }\n      });\n    });\n  };\n\n  var saveClientPreferences = function saveClientPreferences() {\n    if (clientPreferencesChanged) savePreferences();\n  };\n\n  var savePreferences = function savePreferences() {\n    setClientPreferencesChanged(false);\n    var body = {};\n    body.settings = [{\n      \"name\": \"dRecsSoldPorcentage\",\n      \"value\": dRecsSoldPorcentage\n    }, {\n      \"name\": \"dRecsPrice\",\n      \"value\": dRecsPrice\n    }];\n    DataAPI({\n      'endpoint': 'admin/clients/current',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setClientPreferencesSaved(true);\n      setCookie('dRecsSoldPorcentage', dRecsSoldPorcentage);\n      setCookie('dRecsPrice', dRecsPrice);\n    });\n  };\n\n  var handleDRecsSoldPorcentageChange = function handleDRecsSoldPorcentageChange(value) {\n    setClientPreferencesChanged(true);\n    if (value >= 0 && value <= 100) setDRecsSoldPorcentage(value);\n  };\n\n  var handleDRecsPriceChange = function handleDRecsPriceChange(value) {\n    setClientPreferencesChanged(true);\n    if (value >= 0) setDRecsPrice(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          sm: \"7\",\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CRow, {\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"settings\",\n                  className: \"card-title mb-0\",\n                  children: [t('total'), \"Client Settings\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            className: 'px-md-5 pb-md-5 pt-md-4',\n            children: [/*#__PURE__*/_jsxDEV(CRow, {\n              className: \"mb-0\",\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                md: \"3\",\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(CForm, {\n                  children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(CInputGroup, {\n                      className: 'mb-2',\n                      children: [/*#__PURE__*/_jsxDEV(CInputGroupPrepend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: [t('total'), \"Select dRecs Sold Porcentage\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(CInput, {\n                        type: \"number\",\n                        min: \"0\",\n                        max: \"100\",\n                        custom: true,\n                        value: dRecsSoldPorcentage,\n                        onChange: function onChange(ev) {\n                          handleDRecsSoldPorcentageChange(ev.target.value);\n                        },\n                        name: \"dRecsSoldPorcentage\",\n                        id: \"dRecsSoldPorcentage\",\n                        className: \"input-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInputGroupPrepend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: [t('total'), \"Select dRecs Price\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(CInput, {\n                        type: \"number\",\n                        min: \"0\",\n                        custom: true,\n                        value: dRecsPrice,\n                        onChange: function onChange(ev) {\n                          handleDRecsPriceChange(ev.target.value);\n                        },\n                        name: \"dRecsPrice\",\n                        id: \"dRecsPrice\",\n                        className: \"input-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                children: /*#__PURE__*/_jsxDEV(CForm, {\n                  children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    className: \"mt-4\",\n                    children: [/*#__PURE__*/_jsxDEV(CButton, {\n                      onClick: function onClick() {\n                        saveClientPreferences();\n                      },\n                      color: \"primary\",\n                      className: \"px-4 mr-3\",\n                      disabled: !clientPreferencesChanged,\n                      children: [t('total'), \"Save Preferences\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, _this), clientPreferencesSaved && !clientPreferencesChanged && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-success d-inline-block\",\n                      style: {\n                        fontWeight: \"500\"\n                      },\n                      children: \"Saved!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Settings, \"ka7IqmRqghxrvYOIPVjv53pgZN8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/src/views/pages/client/settings.js"],"names":["React","useState","useEffect","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CFormGroup","CInput","CInputGroup","CInputGroupPrepend","CInputGroupText","CRow","CIcon","useTranslation","DataAPI","setCookie","Settings","t","i18n","loading","setLoading","dRecsSoldPorcentage","setDRecsSoldPorcentage","dRecsPrice","setDRecsPrice","clientPreferencesChanged","setClientPreferencesChanged","clientPreferencesSaved","setClientPreferencesSaved","clientResponse","setClientResponse","loadUser","then","response","error","message","alert","settings","forEach","setting","name","value","saveClientPreferences","savePreferences","body","handleDRecsSoldPorcentageChange","handleDRecsPriceChange","ev","target","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport { setCookie } from 'src/helpers/sessionCookie.js'\r\n\r\n\r\nconst Settings = () => {\r\n  const {t, i18n} = useTranslation()\r\n  const [loading, setLoading] = useState(false);\r\n  const [dRecsSoldPorcentage , setDRecsSoldPorcentage ] = useState([]);\r\n  const [dRecsPrice , setDRecsPrice ] = useState(false);\r\n  const [clientPreferencesChanged, setClientPreferencesChanged] = useState(false);\r\n  const [clientPreferencesSaved, setClientPreferencesSaved] = useState(false);\r\n  const [clientResponse, setClientResponse] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n\r\n  const loadUser = () => {\r\n\r\n    setLoading(true);\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/clients/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        setClientResponse(response)\r\n        response.settings.forEach(setting => {\r\n          if (setting.name === \"dRecsSoldPorcentage\") {\r\n            setDRecsSoldPorcentage(setting.value)\r\n            setCookie('dRecsSoldPorcentage',setting.value)\r\n          } else if (setting.name === \"dRecsPrice\") {\r\n            setDRecsPrice(setting.value)\r\n            setCookie('dRecsPrice',setting.value)\r\n          } \r\n        });\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const saveClientPreferences = () => {\r\n    if (clientPreferencesChanged) savePreferences()\r\n  }\r\n\r\n  const savePreferences = () => {\r\n    \r\n    setClientPreferencesChanged(false)\r\n\r\n    const body = {}\r\n    body.settings = [\r\n      {\r\n        \"name\":\"dRecsSoldPorcentage\",\r\n        \"value\":dRecsSoldPorcentage\r\n      },\r\n      {\r\n        \"name\":\"dRecsPrice\",\r\n        \"value\":dRecsPrice\r\n      }\r\n    ]\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/clients/current',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n           if (response.error.message) {\r\n            return(alert(response.error.message))\r\n           } else {\r\n            return(alert(response.error)) \r\n           }\r\n        }     \r\n        \r\n        setClientPreferencesSaved(true)\r\n        setCookie('dRecsSoldPorcentage',dRecsSoldPorcentage)\r\n        setCookie('dRecsPrice',dRecsPrice)\r\n          \r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const handleDRecsSoldPorcentageChange = (value) => {\r\n    setClientPreferencesChanged(true);\r\n    if (value>=0 && value<=100)\r\n      setDRecsSoldPorcentage(value)\r\n  };\r\n\r\n  const handleDRecsPriceChange = (value) => {\r\n    setClientPreferencesChanged(true);\r\n    if (value>=0)\r\n      setDRecsPrice(value)\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard sm=\"7\" className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                  <h3 id=\"settings\" className=\"card-title mb-0\">\r\n                    {t('total')}Client Settings\r\n                  </h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n      \r\n            <CCardBody className={'px-md-5 pb-md-5 pt-md-4'}>\r\n\r\n              {/* <CRow className={'pb-2 mb-3 border-bottom'}>\r\n                <CCol sm=\"6\">\r\n                  <h5 id=\"settings\" className=\"card-title mb-0 row\">\r\n                    Fiscal Year settings\r\n                  </h5>\r\n                </CCol>\r\n              </CRow> */}\r\n\r\n              <CRow className=\"mb-0\">\r\n                <CCol md=\"3\" sm=\"6\" >\r\n                  <CForm>\r\n                    <CFormGroup>\r\n                      <CInputGroup className={'mb-2'}>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText >\r\n                          {t('total')}Select dRecs Sold Porcentage\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type='number' min='0' max='100' custom value={dRecsSoldPorcentage} onChange={(ev) => { handleDRecsSoldPorcentageChange(ev.target.value)}} name=\"dRecsSoldPorcentage\" id=\"dRecsSoldPorcentage\" className={\"input-sm\"} >\r\n                        </CInput>\r\n                      </CInputGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText >\r\n                          {t('total')}Select dRecs Price\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type='number' min='0' custom value={dRecsPrice} onChange={(ev) => { handleDRecsPriceChange(ev.target.value)}} name=\"dRecsPrice\" id=\"dRecsPrice\" className={\"input-sm\"} >\r\n                        </CInput>\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCol>\r\n              </CRow>\r\n\r\n\r\n              <CRow className=\"mb-4\">\r\n                <CCol>\r\n                  <CForm>\r\n                    <CFormGroup className={\"mt-4\"}>\r\n                      <CButton onClick={() => {saveClientPreferences();} } color=\"primary\" className=\"px-4 mr-3\" disabled={!clientPreferencesChanged}>{t('total')}Save Preferences</CButton>\r\n                      { clientPreferencesSaved && !clientPreferencesChanged &&\r\n                        <div className=\"text-success d-inline-block\" style={{fontWeight:\"500\"}}>Saved!</div> \r\n                      }\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCol>\r\n              </CRow>\r\n\r\n\r\n            </CCardBody>\r\n\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}