{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\data-availability\\\\data-availability.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CSelect, CSpinner } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport usersData from '../../users/UsersData';\nimport { formatDate, DateFilter, getDateLabel, round } from '../../../helpers/utils.js';\nimport ChartLoading from '../../others/ChartLoading.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['from', 'to', 'metMastWindSpeed', 'temperature', 'metMastWindDirection', 'turbineStatus', 'turbineAlarmCode', 'turbineWindDirection', 'turbineWindPower', 'turbineWindSpeed'];\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableData = _useState4[0],\n      setTableData = _useState4[1];\n\n  var _useState5 = useState('y'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateRange = _useState6[0],\n      setDateRange = _useState6[1];\n\n  var _useState7 = useState('week'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      groupBy = _useState8[0],\n      setGroupBy = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      generators = _useState10[0],\n      setGenerators = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      generator = _useState12[0],\n      setGenerator = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataLoaded = _useState14[0],\n      setDataLoaded = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataLoadError = _useState16[0],\n      setDataLoadError = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      loading = _useState18[0],\n      setLoading = _useState18[1];\n\n  var fetchData = function fetchData() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        groupBy = options.groupBy,\n        generator = options.generator;\n    setLoading(true);\n    var body = {};\n    if (generator && generator !== '0') body.generators = [generator];\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    DataAPI({\n      'endpoint': 'chart/dataAvailability',\n      'body': body,\n      'method': 'POST'\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var tableData = [];\n\n      if (response && response.data) {\n        response.data.table.forEach(function (row) {\n          tableData.push({\n            from: formatDate(row.from),\n            to: formatDate(row.to),\n            metMastWindDirection: round(row.metMast.direction) + '%',\n            metMastWindSpeed: round(row.metMast.speed) + '%',\n            temperature: round(row.metMast.temperature) + '%',\n            turbineAlarmCode: round(row.turbineState.alarm) + '%',\n            turbineStatus: round(row.turbineState.state) + '%',\n            turbineWindDirection: round(row.windAverages.direction) + '%',\n            turbineWindPower: round(row.windAverages.powerAverage) + '%',\n            turbineWindSpeed: round(row.windAverages.speed) + '%'\n          });\n        });\n        setTableData(tableData);\n        setDataLoaded(true);\n      }\n    }).catch(function (e) {\n      setLoading(false);\n      alert(e);\n    });\n  };\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerators(response.generators);\n        fetchData({\n          period: dateRange,\n          groupBy: groupBy\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CRow, {\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                sm: \"5\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"traffic\",\n                  className: \"card-title mb-0\",\n                  children: \"Data Availability\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small text-medium-emphasis\",\n                  children: getDateLabel(dateRange)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 15\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n                sm: \"7\",\n                className: \"text-right d-flex px-2 flex-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"mr-2 ml-4 m-0\",\n                  style: {\n                    lineHeight: 2.4,\n                    minWidth: '64px'\n                  },\n                  children: \"Generator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n                  disabled: loading,\n                  onChange: function onChange(ev) {\n                    setGenerator(ev.target.value);\n                    fetchData({\n                      period: dateRange,\n                      groupBy: groupBy,\n                      generator: ev.target.value\n                    });\n                  },\n                  custom: true,\n                  name: \"generator\",\n                  id: \"generator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"All generators\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 17\n                  }, _this), generators.map(function (oGenerator) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: oGenerator.id,\n                      children: oGenerator.code\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 35\n                    }, _this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"mr-2 ml-4 m-0\",\n                  style: {\n                    lineHeight: 2.4,\n                    minWidth: '60px'\n                  },\n                  children: \"Group by\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n                  value: groupBy,\n                  disabled: loading,\n                  onChange: function onChange(ev) {\n                    setGroupBy(ev.target.value);\n                    fetchData({\n                      period: dateRange,\n                      groupBy: ev.target.value,\n                      generator: generator\n                    });\n                  },\n                  custom: true,\n                  name: \"period\",\n                  id: \"period\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"day\",\n                    children: \"Day\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"week\",\n                    selected: true,\n                    children: \"Week\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"month\",\n                    children: \"Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 17\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"mr-2 ml-4\",\n                  style: {\n                    lineHeight: 2.4\n                  },\n                  children: \"Period\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n                  value: dateRange,\n                  options: ['y', 'cm', 'cy', '12w', '12m', 'x', 'xx'],\n                  disabled: loading,\n                  onChange: function onChange(value) {\n                    setDateRange(value);\n                    fetchData({\n                      generator: generator,\n                      period: value,\n                      groupBy: groupBy\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 15\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 13\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'right'\n              },\n              children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n                items: tableData,\n                fields: fields,\n                striped: true,\n                itemsPerPage: 50,\n                pagination: true,\n                scopedSlots: {\n                  'status': function status(item) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(CBadge, {\n                        color: getBadge(item.status),\n                        children: item.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 27\n                    }, _this);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Charts, \"M1MmZBn6QpFlydiv0EVf1URgd8w=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/data-availability/data-availability.js"],"names":["React","useEffect","useState","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CSelect","CSpinner","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","DataAPI","usersData","formatDate","DateFilter","getDateLabel","round","ChartLoading","getBadge","status","fields","Charts","data","setData","tableData","setTableData","dateRange","setDateRange","groupBy","setGroupBy","generators","setGenerators","generator","setGenerator","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","fetchData","options","period","body","split","length","from","to","then","response","error","message","alert","table","forEach","row","push","metMastWindDirection","metMast","direction","metMastWindSpeed","speed","temperature","turbineAlarmCode","turbineState","alarm","turbineStatus","state","turbineWindDirection","windAverages","turbineWindPower","powerAverage","turbineWindSpeed","catch","e","loadGenerators","lineHeight","minWidth","ev","target","value","map","oGenerator","id","code","textAlign","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CSelect,\r\n  CSpinner\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport usersData from '../../users/UsersData'\r\n\r\nimport {formatDate, DateFilter, getDateLabel, round} from '../../../helpers/utils.js'\r\n\r\nimport ChartLoading from '../../others/ChartLoading.js'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst fields = [\r\n  'from',\r\n  'to',\r\n  'metMastWindSpeed',\r\n  'temperature',\r\n  'metMastWindDirection',\r\n  'turbineStatus',\r\n  'turbineAlarmCode',\r\n  'turbineWindDirection',\r\n  'turbineWindPower',\r\n  'turbineWindSpeed'\r\n]\r\n\r\n\r\n\r\n\r\nconst Charts = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  \r\n  const [dateRange, setDateRange] = useState('y');\r\n  const [groupBy, setGroupBy] = useState('week');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generator, setGenerator] = useState(null);\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n   const fetchData = (options = {}) => {\r\n\r\n    const {period, groupBy, generator} = options\r\n\r\n    setLoading(true);\r\n\r\n\r\n    const body = {}\r\n\r\n    if (generator && generator !== '0') body.generators = [generator];\r\n\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/dataAvailability',\r\n      'body': body,\r\n      'method': 'POST'\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n           if (response.error.message) {\r\n            return(alert(response.error.message))\r\n           } else {\r\n            return(alert(response.error)) \r\n           }\r\n        }\r\n\r\n          const tableData = [];\r\n        if (response && response.data){\r\n\r\n          response.data.table.forEach(\r\n            row => {\r\n              tableData.push({\r\n                from: formatDate(row.from),\r\n                to: formatDate(row.to),\r\n                metMastWindDirection: round(row.metMast.direction)+'%',\r\n                metMastWindSpeed: round(row.metMast.speed)+'%',\r\n                temperature: round(row.metMast.temperature)+'%',\r\n                turbineAlarmCode: round(row.turbineState.alarm)+'%',\r\n                turbineStatus: round(row.turbineState.state)+'%',\r\n                turbineWindDirection: round(row.windAverages.direction)+'%',\r\n                turbineWindPower: round(row.windAverages.powerAverage)+'%',\r\n                turbineWindSpeed: round(row.windAverages.speed)+'%',\r\n              })\r\n            }\r\n          );\r\n\r\n          setTableData(tableData);\r\n          setDataLoaded(true);\r\n        }\r\n      }\r\n    ).catch(\r\n      e => {\r\n        setLoading(false);\r\n        alert(e);\r\n\r\n      }\r\n    );\r\n\r\n   }\r\n\r\n\r\n   useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n   const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerators(response.generators);\r\n\r\n          fetchData({period: dateRange, groupBy: groupBy});\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  return (\r\n          <>\r\n          \r\n\r\n      <CRow>\r\n\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            \r\n\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Data Availability\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n              </CCol>\r\n            \r\n            <CCol sm=\"7\" className=\"text-right d-flex px-2 flex-center\">\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Generator</h6>\r\n              <CSelect disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); fetchData({period: dateRange, groupBy: groupBy, generator: ev.target.value});}} custom name=\"generator\" id=\"generator\">\r\n                <option value=\"0\">All generators</option>\r\n              {generators.map((oGenerator) => (\r\n                                  <option value={oGenerator.id}>\r\n                                    {oGenerator.code}\r\n                                  </option>\r\n                                ))}</CSelect>\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n              <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); fetchData({period: dateRange, groupBy: ev.target.value, generator: generator});}} custom name=\"period\" id=\"period\">\r\n                <option value=\"day\">Day</option>\r\n                <option value=\"week\" selected>Week</option>\r\n                <option value=\"month\">Month</option>\r\n              </CSelect>\r\n\r\n              <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','12w','12m','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); fetchData({generator: generator, period: value, groupBy: groupBy });}} />\r\n            </CCol>\r\n                            </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n\r\n            <CCardBody>\r\n\r\n            <div style={{textAlign: 'right'}}>\r\n\r\n            {dataLoaded || dataLoadError\r\n                    ? \r\n                  <CDataTable\r\n                    items={tableData}\r\n                    fields={fields}\r\n                    striped\r\n                    itemsPerPage={50}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                      'status':\r\n                        (item)=>(\r\n                          <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                              {item.status}\r\n                            </CBadge>\r\n                          </td>\r\n                        )\r\n\r\n                    }}\r\n                  />\r\n                  : \r\n                  <ChartLoading/>\r\n            }\r\n            </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}