{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\data-availability\\\\data-availability.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CSelect, CSpinner, CButton } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { formatDate, DateFilter, getDateLabel, round } from '../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../helpers/sessionCookie.js';\nimport ChartLoading from '../../others/ChartLoading.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['from', 'to', 'metMastWindSpeed', 'temperature', 'metMastWindDirection', 'turbineStatus', 'turbineAlarmCode', 'turbineWindDirection', 'turbineWindPower', 'turbineWindSpeed'];\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableData = _useState4[0],\n      setTableData = _useState4[1];\n\n  var _useState5 = useState('y'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      period = _useState6[0],\n      setPeriod = _useState6[1];\n\n  var _useState7 = useState('week'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      groupBy = _useState8[0],\n      setGroupBy = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      generators = _useState10[0],\n      setGenerators = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      generator = _useState12[0],\n      setGenerator = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      generatorsLoaded = _useState14[0],\n      setGeneratorsLoaded = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataLoaded = _useState16[0],\n      setDataLoaded = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dataLoadError = _useState18[0],\n      setDataLoadError = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loading = _useState20[0],\n      setLoading = _useState20[1];\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n    if (generator && generator !== '0') body.generators = [generator];\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    DataAPI({\n      'endpoint': 'chart/dataAvailability',\n      'body': body,\n      'method': 'POST'\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var tableData = [];\n\n      if (response && response.data) {\n        response.data.table.forEach(function (row) {\n          tableData.push({\n            from: formatDate(row.from),\n            to: formatDate(row.to),\n            metMastWindDirection: round(row.metMast.direction) + '%',\n            metMastWindSpeed: round(row.metMast.speed) + '%',\n            temperature: round(row.metMast.temperature) + '%',\n            turbineAlarmCode: round(row.turbineState.alarm) + '%',\n            turbineStatus: round(row.turbineState.state) + '%',\n            turbineWindDirection: round(row.windAverages.direction) + '%',\n            turbineWindPower: round(row.windAverages.powerAverage) + '%',\n            turbineWindSpeed: round(row.windAverages.speed) + '%'\n          });\n        });\n        setTableData(tableData);\n        setDataLoaded(true);\n      }\n    }).catch(function (e) {\n      setLoading(false);\n      alert(e);\n    });\n  };\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if (!dataLoaded && response && !response.error) {\n        setGenerators(response.generators);\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: /*#__PURE__*/_jsxDEV(CCol, {\n      xs: \"12\",\n      lg: \"12\",\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                id: \"traffic\",\n                className: \"card-title mb-0\",\n                children: \"Data Availability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-medium-emphasis\",\n                children: getDateLabel(period)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"7\",\n              className: \"text-right d-flex px-2 flex-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mr-2 ml-4 m-0\",\n                style: {\n                  lineHeight: 2.4,\n                  minWidth: '64px'\n                },\n                children: \"Turbine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n                disabled: loading,\n                onChange: function onChange(ev) {\n                  setGenerator(ev.target.value);\n                },\n                custom: true,\n                name: \"generator\",\n                id: \"generator\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"All turbines\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, _this), generators.map(function (oGenerator) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: oGenerator.id,\n                    children: oGenerator.code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 39\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mr-2 ml-4 m-0\",\n                style: {\n                  lineHeight: 2.4,\n                  minWidth: '60px'\n                },\n                children: \"Group by\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n                value: groupBy,\n                disabled: loading,\n                onChange: function onChange(ev) {\n                  setGroupBy(ev.target.value);\n                },\n                custom: true,\n                name: \"groupby\",\n                id: \"groupby\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"day\",\n                  children: \"Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"week\",\n                  selected: true,\n                  children: \"Week\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"month\",\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mr-2 ml-4 m-0\",\n                style: {\n                  lineHeight: 2.4\n                },\n                children: \"Period\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n                value: period,\n                options: ['y', 'cm', 'cy', '12w', '12m', 'x', 'xx'],\n                disabled: loading,\n                onChange: function onChange(value) {\n                  setPeriod(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                disabled: loading || !generatorsLoaded,\n                className: \"mr-2 ml-3\",\n                onClick: function onClick() {\n                  fetchData();\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: (loading || dataLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData,\n              fields: fields,\n              striped: true,\n              itemsPerPage: 50,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 33\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 31\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 23\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(Charts, \"zro9dEzXu5HCd37DgwDt5xZ+5DM=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/data-availability/data-availability.js"],"names":["React","useEffect","useState","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CSelect","CSpinner","CButton","DocsLink","DataAPI","formatDate","DateFilter","getDateLabel","round","setCookie","getCookie","ChartLoading","getBadge","status","fields","Charts","data","setData","tableData","setTableData","period","setPeriod","groupBy","setGroupBy","generators","setGenerators","generator","setGenerator","generatorsLoaded","setGeneratorsLoaded","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","fetchData","body","location","split","length","from","to","then","response","error","message","alert","table","forEach","row","push","metMastWindDirection","metMast","direction","metMastWindSpeed","speed","temperature","turbineAlarmCode","turbineState","alarm","turbineStatus","state","turbineWindDirection","windAverages","turbineWindPower","powerAverage","turbineWindSpeed","catch","e","loadGenerators","window","reload","lineHeight","minWidth","ev","target","value","map","oGenerator","id","code","textAlign","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CSelect,\r\n  CSpinner,\r\n  CButton\r\n} from '@coreui/react'\r\n\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {formatDate, DateFilter, getDateLabel, round} from '../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../helpers/sessionCookie.js'\r\n\r\nimport ChartLoading from '../../others/ChartLoading.js'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst fields = [\r\n  'from',\r\n  'to',\r\n  'metMastWindSpeed',\r\n  'temperature',\r\n  'metMastWindDirection',\r\n  'turbineStatus',\r\n  'turbineAlarmCode',\r\n  'turbineWindDirection',\r\n  'turbineWindPower',\r\n  'turbineWindSpeed'\r\n]\r\n\r\n\r\n\r\n\r\nconst Charts = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  \r\n  const [period, setPeriod] = useState('y');\r\n  const [groupBy, setGroupBy] = useState('week');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generator, setGenerator] = useState(null);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n   const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n\r\n    const body = {}\r\n    body.location = getCookie('location');\r\n    if (generator && generator !== '0') body.generators = [generator];\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/dataAvailability',\r\n      'body': body,\r\n      'method': 'POST'\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n           if (response.error.message) {\r\n            return(alert(response.error.message))\r\n           } else {\r\n            return(alert(response.error)) \r\n           }\r\n        }\r\n\r\n          const tableData = [];\r\n        if (response && response.data){\r\n\r\n          response.data.table.forEach(\r\n            row => {\r\n              tableData.push({\r\n                from: formatDate(row.from),\r\n                to: formatDate(row.to),\r\n                metMastWindDirection: round(row.metMast.direction)+'%',\r\n                metMastWindSpeed: round(row.metMast.speed)+'%',\r\n                temperature: round(row.metMast.temperature)+'%',\r\n                turbineAlarmCode: round(row.turbineState.alarm)+'%',\r\n                turbineStatus: round(row.turbineState.state)+'%',\r\n                turbineWindDirection: round(row.windAverages.direction)+'%',\r\n                turbineWindPower: round(row.windAverages.powerAverage)+'%',\r\n                turbineWindSpeed: round(row.windAverages.speed)+'%',\r\n              })\r\n            }\r\n          );\r\n\r\n          setTableData(tableData);\r\n          setDataLoaded(true);\r\n        }\r\n      }\r\n    ).catch(\r\n      e => {\r\n        setLoading(false);\r\n        alert(e);\r\n\r\n      }\r\n    );\r\n\r\n   }\r\n\r\n\r\n   useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n   const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (response && response.error) {\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n        }\r\n        else if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerators(response.generators);\r\n          setGeneratorsLoaded(true)\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  return (\r\n\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm=\"5\">\r\n                  <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                    Data Availability\r\n                  </h3>\r\n                  <div className=\"small text-medium-emphasis\">{getDateLabel(period)}</div>\r\n                  </CCol>\r\n                \r\n                <CCol sm=\"7\" className=\"text-right d-flex px-2 flex-center\">\r\n                  <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Turbine</h6>\r\n                  <CSelect disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); }} custom name=\"generator\" id=\"generator\">\r\n                    <option value=\"0\">All turbines</option>\r\n                  {generators.map((oGenerator) => (\r\n                                      <option value={oGenerator.id}>\r\n                                        {oGenerator.code}\r\n                                      </option>\r\n                                    ))}</CSelect>\r\n                  <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n                  <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); }} custom name=\"groupby\" id=\"groupby\">\r\n                    <option value=\"day\">Day</option>\r\n                    <option value=\"week\" selected>Week</option>\r\n                    <option value=\"month\">Month</option>\r\n                  </CSelect>\r\n\r\n                  <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n                  <DateFilter value={period} options={['y','cm','cy','12w','12m','x','xx']} disabled={loading} onChange={(value) => { setPeriod(value);}} />\r\n                  <CButton color=\"primary\" disabled={loading || !generatorsLoaded} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n\r\n            <CCardBody>\r\n\r\n                { (loading || dataLoaded) &&\r\n\r\n                <div style={{textAlign: 'right'}}>\r\n\r\n                  { dataLoaded || dataLoadError\r\n                        ? \r\n                      <CDataTable\r\n                        items={tableData}\r\n                        fields={fields}\r\n                        striped\r\n                        itemsPerPage={50}\r\n                        pagination\r\n                        scopedSlots = {{\r\n                          'status':\r\n                            (item)=>(\r\n                              <td>\r\n                                <CBadge color={getBadge(item.status)}>\r\n                                  {item.status}\r\n                                </CBadge>\r\n                              </td>\r\n                            )\r\n\r\n                        }}\r\n                      />\r\n                      : \r\n                      <ChartLoading/>\r\n                }\r\n                </div>\r\n              }\r\n              </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  </CRow>\r\n\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}