{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\ai-analytics\\\\energy-generation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardHeader, CRow, CCol, CButton, CSelect, CDataTable, CBadge, CSpinner, CImg } from '@coreui/react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { formatNumber, formatDate2, round, getDateLabel, DateFilter } from '../../../helpers/utils.js';\nimport { setCookie } from '../../../helpers/sessionCookie.js';\nimport { Line } from 'react-chartjs-2';\nimport ChartLoading from '../../others/ChartLoading.js';\nimport img from '../../../assets/img-energy-generation.png';\nimport res from './res.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EnergyGeneration = function EnergyGeneration() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      generator = _useState2[0],\n      setGenerator = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generators = _useState4[0],\n      setGenerators = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generatorsLoaded = _useState6[0],\n      setGeneratorsLoaded = _useState6[1];\n\n  var _useState7 = useState('cm'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dateRange = _useState8[0],\n      setDateRange = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataLoadError = _useState12[0],\n      setDataLoadError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      graphData = _useState16[0],\n      setGraphData = _useState16[1];\n\n  useEffect(function () {\n    loadStaticData();\n  }, []);\n\n  var loadStaticData = function loadStaticData() {\n    var data = res.data;\n    var graphData = {\n      labels: data.evolution.map(function (point, i) {\n        return point.x;\n      }),\n      datasets: [{\n        label: 'Data',\n        data: data.evolution.map(function (point, i) {\n          return point.y * 100;\n        }),\n        borderColor: '#bc5090',\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        borderWidth: 1\n      }, {\n        label: 'Outlier Limit Top',\n        data: data.evolution.map(function (point, i) {\n          return 80;\n        }),\n        borderColor: 'red',\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        borderWidth: 1.5\n      }, {\n        label: 'Outlier Limit Bottom',\n        data: data.evolution.map(function (point, i) {\n          return 20;\n        }),\n        borderColor: 'red',\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        borderWidth: 1\n      }, {\n        label: 'Median Perfocrmance',\n        data: data.evolution.map(function (point, i) {\n          return 50;\n        }),\n        borderColor: 'green',\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        borderWidth: 1\n      }]\n    };\n    setGraphData(graphData);\n  };\n\n  var options = {\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    scales: {\n      y: {\n        suggestedMin: 10,\n        suggestedMax: 90\n      }\n    },\n    tooltips: {\n      enabled: true\n    },\n    elements: {\n      line: {\n        tension: .4\n      }\n    },\n    plugins: {\n      tooltip: {\n        mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return 'Percentile of performance: ' + round(tooltipItem.raw, 1) + \" %\";\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"diagnostics\",\n            className: \"card-title mb-0\",\n            children: \"AI Analytics - Energy Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"pb-2 mb-4 text-center\",\n            children: \"Wind Turbines for investigation/resolution: 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Percentile of performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Line, {\n            data: graphData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(EnergyGeneration, \"2GNuWOKGRw6J2QODcqMPVEaS+Gk=\");\n\n_c = EnergyGeneration;\nexport default EnergyGeneration;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnergyGeneration\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/ai-analytics/energy-generation.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardHeader","CRow","CCol","CButton","CSelect","CDataTable","CBadge","CSpinner","CImg","DataAPI","formatNumber","formatDate2","round","getDateLabel","DateFilter","setCookie","Line","ChartLoading","img","res","EnergyGeneration","generator","setGenerator","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","dateRange","setDateRange","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","labels","datasets","graphData","setGraphData","loadStaticData","data","evolution","map","point","i","x","label","y","borderColor","pointBackgroundColor","pointBorderColor","backgroundColor","borderWidth","options","responsive","animation","duration","scales","suggestedMin","suggestedMax","tooltips","enabled","elements","line","tension","plugins","tooltip","mode","callbacks","tooltipItem","raw"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAGA,SACEC,KADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,OANF,EAOEC,OAPF,EAQEC,UARF,EASEC,MATF,EAUEC,QAVF,EAWEC,IAXF,QAYO,eAZP;AAcA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAmCC,KAAnC,EAA0CC,YAA1C,EAAwDC,UAAxD,QAAyE,2BAAzE;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAOC,GAAP,MAAgB,2CAAhB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAE7B,kBAAkCxB,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOyB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAoC1B,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO2B,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgD5B,QAAQ,CAAC,KAAD,CAAxD;AAAA;AAAA,MAAO6B,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAAkC9B,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAO+B,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAoChC,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOiC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAA0ClC,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOmC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAA8BpC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOqC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAAkCtC,QAAQ,CAAC;AACzCuC,IAAAA,MAAM,EAAE,EADiC;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAKAzC,EAAAA,SAAS,CAAC,YAAM;AACd0C,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB,QAAMC,IAAI,GAAGrB,GAAG,CAACqB,IAAjB;AACA,QAAMH,SAAS,GAAG;AAChBF,MAAAA,MAAM,EAAEK,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAAE,eAAOD,KAAK,CAACE,CAAb;AAAgB,OAAnD,CADQ;AAEhBT,MAAAA,QAAQ,EAAE,CACR;AACEU,QAAAA,KAAK,EAAE,MADT;AAEEN,QAAAA,IAAI,EAAEA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAAE,iBAAOD,KAAK,CAACI,CAAN,GAAU,GAAjB;AAAsB,SAAzD,CAFR;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,oBAAoB,EAAE,aAJxB;AAKEC,QAAAA,gBAAgB,EAAE,aALpB;AAMEC,QAAAA,eAAe,EAAE,aANnB;AAOEC,QAAAA,WAAW,EAAE;AAPf,OADQ,EAUR;AACEN,QAAAA,KAAK,EAAE,mBADT;AAEEN,QAAAA,IAAI,EAAEA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAAE,iBAAO,EAAP;AAAW,SAA9C,CAFR;AAGEI,QAAAA,WAAW,EAAE,KAHf;AAIEC,QAAAA,oBAAoB,EAAE,aAJxB;AAKEC,QAAAA,gBAAgB,EAAE,aALpB;AAMEC,QAAAA,eAAe,EAAE,aANnB;AAOEC,QAAAA,WAAW,EAAE;AAPf,OAVQ,EAmBR;AACEN,QAAAA,KAAK,EAAE,sBADT;AAEEN,QAAAA,IAAI,EAAEA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAAE,iBAAO,EAAP;AAAW,SAA9C,CAFR;AAGEI,QAAAA,WAAW,EAAE,KAHf;AAIEC,QAAAA,oBAAoB,EAAE,aAJxB;AAKEC,QAAAA,gBAAgB,EAAE,aALpB;AAMEC,QAAAA,eAAe,EAAE,aANnB;AAOEC,QAAAA,WAAW,EAAE;AAPf,OAnBQ,EA4BR;AACEN,QAAAA,KAAK,EAAE,qBADT;AAEEN,QAAAA,IAAI,EAAEA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAAE,iBAAO,EAAP;AAAW,SAA9C,CAFR;AAGEI,QAAAA,WAAW,EAAE,OAHf;AAIEC,QAAAA,oBAAoB,EAAE,aAJxB;AAKEC,QAAAA,gBAAgB,EAAE,aALpB;AAMEC,QAAAA,eAAe,EAAE,aANnB;AAOEC,QAAAA,WAAW,EAAE;AAPf,OA5BQ;AAFM,KAAlB;AAyCAd,IAAAA,YAAY,CAACD,SAAD,CAAZ;AAEH,GA9CD;;AAkDA,MAAMgB,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,QAAQ,EAAEvB,OAAO,GAAG,CAAH,GAAO;AAAzB,KAFG;AAGdwB,IAAAA,MAAM,EAAE;AACNV,MAAAA,CAAC,EACC;AACEW,QAAAA,YAAY,EAAE,EADhB;AAEEC,QAAAA,YAAY,EAAE;AAFhB;AAFI,KAHM;AAUdC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE;AADD,KAVI;AAadC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAE;AADP;AADE,KAbI;AAkBdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,SAAS,EAAE;AACTtB,UAAAA,KAAK,EAAE,eAASuB,WAAT,EAAsB7B,IAAtB,EAA4B;AAC/B,mBAAO,gCAAgC5B,KAAK,CAACyD,WAAW,CAACC,GAAb,EAAiB,CAAjB,CAArC,GAA2D,IAAlE;AACH;AAHQ;AAFJ;AADF;AAlBK,GAAhB;AA+BA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA,4BAEA,QAAC,WAAD;AAAA,6BACI,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE;AAAI,YAAA,EAAE,EAAC,aAAP;AAAqB,YAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFA,eAcE,QAAC,SAAD;AAAA,6BAGA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE,QAAC,IAAD;AACE,YAAA,IAAI,EAAEjC,SADR;AAEE,YAAA,OAAO,EAAEgB;AAFX;AAAA;AAAA;AAAA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA+CD,CAnJD;;GAAMjC,gB;;KAAAA,gB;AAqJN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSpinner,\r\n  CImg,\r\n} from '@coreui/react'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {formatNumber, formatDate2, round, getDateLabel, DateFilter} from '../../../helpers/utils.js'\r\nimport {setCookie} from '../../../helpers/sessionCookie.js'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport ChartLoading from '../../others/ChartLoading.js'\r\n\r\nimport img from '../../../assets/img-energy-generation.png'\r\n\r\nimport res from './res.json';\r\n\r\n\r\nconst EnergyGeneration = () => {\r\n\r\n  const [generator, setGenerator] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadStaticData();\r\n  }, []);\r\n\r\n\r\n  const loadStaticData = () => {\r\n\r\n      const data = res.data;\r\n      const graphData = {\r\n        labels: data.evolution.map((point, i) => { return point.x }),\r\n        datasets: [\r\n          {\r\n            label: 'Data',\r\n            data: data.evolution.map((point, i) => { return point.y * 100 }),\r\n            borderColor: '#bc5090',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            borderWidth: 1\r\n          },\r\n          {\r\n            label: 'Outlier Limit Top',\r\n            data: data.evolution.map((point, i) => { return 80 }),\r\n            borderColor: 'red',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            borderWidth: 1.5\r\n          },\r\n          {\r\n            label: 'Outlier Limit Bottom',\r\n            data: data.evolution.map((point, i) => { return 20 }),\r\n            borderColor: 'red',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            borderWidth: 1\r\n          },\r\n          {\r\n            label: 'Median Perfocrmance',\r\n            data: data.evolution.map((point, i) => { return 50 }),\r\n            borderColor: 'green',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            borderWidth: 1\r\n          }\r\n        ],\r\n      }\r\n      setGraphData(graphData);\r\n\r\n  }\r\n\r\n\r\n\r\n  const options = {\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    scales: {\r\n      y:\r\n        {\r\n          suggestedMin: 10,\r\n          suggestedMax: 90,\r\n        }\r\n    },\r\n    tooltips: {\r\n      enabled: true\r\n    },\r\n    elements: {\r\n      line: {\r\n          tension: .4\r\n      }\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        mode: 'index',\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n              return 'Percentile of performance: ' + round(tooltipItem.raw,1) + \" %\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n      <CCard className=\"mb-4\">\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n              <h3 id=\"diagnostics\" className=\"card-title mb-0\">\r\n                AI Analytics - Energy Generation\r\n              </h3>\r\n              {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n            </CCol>            \r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n              \r\n        <CRow className=\"mb-4\">\r\n          <CCol>\r\n            <h4 className=\"pb-2 mb-4 text-center\" >Wind Turbines for investigation/resolution: 3</h4>\r\n            <div>Percentile of performance</div>\r\n            <Line\r\n              data={graphData}\r\n              options={options}\r\n            />\r\n\r\n\r\n\r\n            {/* <CImg\r\n              width={'100%'}\r\n              src={img}\r\n              alt=\"\"\r\n              className={'mt-3'}\r\n            /> */}\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n          \r\n        </CCardBody>\r\n\r\n      </CCard>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default EnergyGeneration\r\n"]},"metadata":{},"sourceType":"module"}