{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\helpers\\\\utils.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CSelect, CButton, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle } from '@coreui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var formatDate = function formatDate(date) {\n  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!date) return date;\n  var dateArr = date.split(' ')[0].split('-');\n\n  if (flags.includes('noyear')) {\n    return \"\".concat(dateArr[2], \"/\").concat(dateArr[1]);\n  } else if (flags.includes('time')) {\n    return \"\".concat(dateArr[2], \"/\").concat(dateArr[1], \"/\").concat(dateArr[0], \" \").concat(dateArr[3]);\n  } else {\n    return \"\".concat(dateArr[2], \"/\").concat(dateArr[1], \"/\").concat(dateArr[0]);\n  }\n};\nexport var formatDate2 = function formatDate2(sourceDate) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var dateArr = sourceDate.split(' ');\n  var date = dateArr[0].split('-');\n  var time = dateArr[1];\n  var timeArr = time.split(':');\n  var hours = timeArr[0];\n  var minutes = timeArr[1];\n  return \"\".concat(date[2], \"/\").concat(date[1], \"/\").concat(date[0], \" \").concat(hours, \":\").concat(minutes);\n};\nexport function getCurrentDateNDaysBefore() {\n  var separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var daysBefore = arguments.length > 1 ? arguments[1] : undefined;\n  var today = new Date();\n  var yesterday = new Date();\n  yesterday.setDate(today.getDate() - daysBefore);\n  var date = yesterday.getDate();\n  var month = yesterday.getMonth() + 1;\n  var year = yesterday.getFullYear();\n  return \"\".concat(year).concat(separator).concat(month < 10 ? \"0\".concat(month) : \"\".concat(month)).concat(separator).concat(date < 10 ? \"0\".concat(date) : \"\".concat(date));\n}\nexport var round = function round(number) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (!number) return number;\n  return (+(Math.round(number + \"e+\" + decimals) + \"e-\" + decimals)).toFixed(decimals);\n};\nexport var formatNumber = function formatNumber(number) {\n  if (!number) return number;\n  return number.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\nexport var getDateLabel = function getDateLabel(dateValue, from, to) {\n  switch (dateValue) {\n    case 'y':\n      return 'Yesterday';\n      break;\n\n    case '30d':\n      return '30 days';\n      break;\n\n    case '12w':\n      return '12 weeks';\n      break;\n\n    case '12m':\n      return '12 month';\n      break;\n\n    case 'cy':\n      return 'Current year';\n      break;\n\n    case 'cm':\n      return 'Current month';\n      break;\n\n    case 'cw':\n      return 'Current week';\n      break;\n\n    case 'x':\n      return 'Custom range';\n      break;\n\n    case 'xx':\n      return from + ' - ' + to;\n      break;\n\n    default:\n      return \"{\".concat(dateValue, \"}\");\n      break;\n  }\n};\nexport var DateFilter = function DateFilter(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1]; // const [disabled, setDisabled] = useState(props.disabled);\n\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      from = _useState4[0],\n      setFrom = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      to = _useState6[0],\n      setTo = _useState6[1];\n\n  var _useState7 = useState(props.value),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var options = [];\n\n  if (props.options) {\n    options = props.options;\n  } else {\n    options = 'y,cw,cm,cy,12m,x,xx'.split(',');\n  }\n\n  var setDate = function setDate(x) {\n    alert(x);\n  };\n\n  var changeListener = function changeListener(ev) {\n    if (ev.target.value == 'x') {\n      setModal(true);\n    } else {\n      props.onChange(ev.target.value);\n      setValue(ev.target.value);\n    }\n  };\n\n  var applyCustomRange = function applyCustomRange(value) {\n    if (modal) {\n      var sdate = \"\";\n      var edate = \"\";\n\n      if (startDate !== null) {\n        sdate = \"\".concat(startDate.getFullYear(), \"-\").concat((\"0\" + (startDate.getMonth() + 1)).slice(-2), \"-\").concat((\"0\" + startDate.getDate()).slice(-2));\n      }\n\n      if (endDate !== null) {\n        edate = \"\".concat(endDate.getFullYear(), \"-\").concat((\"0\" + (endDate.getMonth() + 1)).slice(-2), \"-\").concat((\"0\" + endDate.getDate()).slice(-2));\n      }\n\n      props.onChange(\"\".concat(sdate, \"--\").concat(edate));\n      setModal(false);\n      setFrom(sdate);\n      setTo(edate);\n      setValue('xx');\n    } else {\n      props.onChange(value);\n    }\n  }; // const [dateRange, setDateRange] = useState([null, null]);\n  // const [startDate, endDate] = dateRange;\n\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startDate = _useState10[0],\n      setStartDate = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      endDate = _useState12[0],\n      setEndDate = _useState12[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CModal, {\n      show: modal,\n      onClose: setModal,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n          children: \"Select Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          dateFormat: \"yyyy-MM-dd\",\n          selectsRange: true,\n          startDate: startDate,\n          endDate: endDate,\n          maxDate: new Date(),\n          onChange: function onChange(dates) {\n            // setDateRange(update);\n            var _dates = _slicedToArray(dates, 2),\n                start = _dates[0],\n                end = _dates[1];\n\n            setStartDate(start);\n            setEndDate(end);\n          },\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(CButton, {\n          color: \"primary\",\n          onClick: applyCustomRange,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, _this), ' ', /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            return setModal(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n      value: value,\n      style: {},\n      disabled: props.disabled,\n      onChange: changeListener,\n      custom: true,\n      name: \"period\",\n      id: \"period\",\n      children: options.map(function (option) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: props.selected == option,\n          value: option,\n          onClick: changeListener,\n          children: getDateLabel(option, from, to)\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 24\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(DateFilter, \"VjIhU9Vg7lwXbf17Mw7Q2HjZ01Q=\");\n\n_c = DateFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateFilter\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/helpers/utils.js"],"names":["React","useState","CSelect","CButton","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","DatePicker","formatDate","date","flags","dateArr","split","includes","formatDate2","sourceDate","options","time","timeArr","hours","minutes","getCurrentDateNDaysBefore","separator","daysBefore","today","Date","yesterday","setDate","getDate","month","getMonth","year","getFullYear","round","number","decimals","Math","toFixed","formatNumber","replace","getDateLabel","dateValue","from","to","DateFilter","props","modal","setModal","setFrom","setTo","value","setValue","x","alert","changeListener","ev","target","onChange","applyCustomRange","sdate","edate","startDate","slice","endDate","setStartDate","setEndDate","dates","start","end","disabled","map","option","selected"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport {CSelect,\r\n  CButton,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n\r\nexport const formatDate = (date, flags = '') => {\r\n\r\n  if (!date) return date;\r\n\r\n\tconst dateArr = date.split(' ')[0].split('-');\r\n\r\n  if (flags.includes('noyear')){\r\n    return `${dateArr[2]}/${dateArr[1]}`; \r\n  }else if (flags.includes('time')){\r\n    return `${dateArr[2]}/${dateArr[1]}/${dateArr[0]} ${dateArr[3]}`;\r\n  } else {\r\n    return `${dateArr[2]}/${dateArr[1]}/${dateArr[0]}`;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const formatDate2 = (sourceDate, options = '') => {\r\n\r\n  const dateArr = sourceDate.split(' ');\r\n  const date = dateArr[0].split('-');\r\n  const time = dateArr[1];\r\n\r\n  const timeArr = time.split(':');\r\n\r\n  const hours = timeArr[0];\r\n  const minutes = timeArr[1];\r\n\r\n\r\n  return `${date[2]}/${date[1]}/${date[0]} ${hours}:${minutes}`;\r\n\r\n  \r\n\r\n}\r\n\r\n\r\nexport function getCurrentDateNDaysBefore(separator='',daysBefore){\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - daysBefore);\r\n  let date = yesterday.getDate();\r\n  let month = yesterday.getMonth() + 1;\r\n  let year = yesterday.getFullYear();\r\n  \r\n  return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date<10?`0${date}`:`${date}`}`\r\n}\r\n\r\nexport const round = (number,decimals=1) => {\r\n\r\n  if (!number) return number;\r\n\r\n  return (+(Math.round(number + \"e+\" + decimals) + \"e-\" + decimals )).toFixed(decimals);\r\n\r\n}\r\n\r\nexport const formatNumber = (number) => {\r\n\r\n  if (!number) return number;\r\n\r\n  return number.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n}\r\n\r\n\r\n\r\nexport const getDateLabel = (dateValue,from,to) => {\r\n\r\n  switch(dateValue) {\r\n    case 'y' : return 'Yesterday'; break;\r\n    case '30d' : return '30 days'; break;\r\n    case '12w' : return '12 weeks'; break;\r\n    case '12m' : return '12 month'; break;\r\n    case 'cy' : return 'Current year'; break;\r\n    case 'cm' : return 'Current month'; break;\r\n    case 'cw' : return 'Current week'; break;\r\n    case 'x' : return 'Custom range'; break;\r\n    case 'xx' : return from+' - '+to; break;\r\n    default : return `{${dateValue}}`; break;\r\n  }\r\n\r\n}\r\n\r\nexport const DateFilter = (props) => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n  // const [disabled, setDisabled] = useState(props.disabled);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [value, setValue] = useState(props.value);\r\n\r\n  let options = [];\r\n\r\n  if(props.options) {\r\n\r\n    options = props.options;\r\n\r\n  } else {\r\n\r\n    options = 'y,cw,cm,cy,12m,x,xx'.split(',');\r\n\r\n  }\r\n\r\n\r\n  const setDate = (x) => {\r\n    alert(x);\r\n  }\r\n\r\n  const changeListener = (ev) => {\r\n\r\n    if (ev.target.value == 'x') {\r\n      setModal(true);\r\n    } else {\r\n      props.onChange(ev.target.value);\r\n      setValue(ev.target.value)\r\n    }\r\n\r\n  }\r\n\r\n  const applyCustomRange = (value) => {\r\n\r\n    if (modal) {\r\n      let sdate = \"\";\r\n      let edate = \"\";\r\n      if (startDate !== null) {\r\n        sdate =  `${startDate.getFullYear()}-${(\"0\" + (startDate.getMonth() + 1)).slice(-2)}-${(\"0\" + startDate.getDate()).slice(-2)}`;\r\n      }\r\n      if (endDate !== null) {\r\n        edate =  `${endDate.getFullYear()}-${(\"0\" + (endDate.getMonth() + 1)).slice(-2)}-${(\"0\" + endDate.getDate()).slice(-2)}`;\r\n      }\r\n      props.onChange(`${sdate}--${edate}`);\r\n      setModal(false);\r\n      setFrom(sdate);\r\n      setTo(edate);\r\n      setValue('xx');\r\n\r\n    } else {\r\n      props.onChange(value);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // const [dateRange, setDateRange] = useState([null, null]);\r\n  // const [startDate, endDate] = dateRange;\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  \r\n  \r\n\r\n\treturn (<>\r\n\r\n\r\n\r\n\r\n\r\n            <CModal \r\n              show={modal} \r\n              onClose={setModal}\r\n              size=\"sm\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Select Period</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody className={\"text-center\"}>\r\n                \r\n                {/* <p>Seleccionar el intervalo temporal para filtrar los datos, utlizando el formato \"YYYY-MM-DD\".</p>\r\n\r\n                {props.warning && <p><strong>{props.warning}</strong></p>}\r\n\r\n                <CInputGroup className=\"mb-3\">\r\n                  <CInput placeholder=\"Desde\" onChange={(ev) => { setFrom(ev.target.value) }} aria-label=\"Username\" />\r\n                  &nbsp;\r\n                  <CInput placeholder=\"Hasta\" onChange={(ev) => { setTo(ev.target.value) }} aria-label=\"Server\" />\r\n                </CInputGroup> */}\r\n\r\n                <DatePicker\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  selectsRange={true}\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  maxDate={new Date()}\r\n                  onChange={(dates) => {\r\n                    // setDateRange(update);\r\n                    const [start, end] = dates;\r\n                    setStartDate(start)\r\n                    setEndDate(end)\r\n                  }}\r\n                  inline\r\n                  \r\n                />\r\n\r\n\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\"  onClick={applyCustomRange} >Submit</CButton>{' '}\r\n                <CButton \r\n                  color=\"secondary\" \r\n                  onClick={() => setModal(false)}\r\n                >Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n\r\n      <CSelect value={value} style={{}} disabled={props.disabled} onChange={changeListener} custom name=\"period\" id=\"period\">{options.map((option) => {\r\n\r\n                return <option key={option} selected={props.selected==option} value={option} onClick={changeListener}>\r\n                  {getDateLabel(option,from,to)}\r\n                </option>\r\n              })}</CSelect>\r\n\r\n\r\n\r\n             \r\n              \r\n\r\n              </>)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}