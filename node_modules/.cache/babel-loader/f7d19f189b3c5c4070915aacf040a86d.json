{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getCookie } from '../helpers/sessionCookie.js';\nexport function DataAPI() {\n  return _DataAPI.apply(this, arguments);\n}\n_c2 = DataAPI;\n\nfunction _DataAPI() {\n  _DataAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var options,\n        _options$endpoint,\n        endpoint,\n        _options$method,\n        method,\n        _options$body,\n        body,\n        fetchOptions,\n        staging,\n        APIResponse,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _options$endpoint = options.endpoint, endpoint = _options$endpoint === void 0 ? {} : _options$endpoint, _options$method = options.method, method = _options$method === void 0 ? 'POST' : _options$method, _options$body = options.body, body = _options$body === void 0 ? {} : _options$body;\n            fetchOptions = {}; //  body.location = getCookie('location');\n\n            staging = process.env.REACT_APP_API_URL == '/data';\n            fetchOptions.method = staging ? 'GET' : method;\n            fetchOptions.headers = {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'credentials': 'include',\n              'Origin': window.location.href,\n              'Access-Control-Request-Method': staging ? 'GET' : method\n            };\n            fetchOptions.credentials = 'include'; // fetchOptions.mode = 'no-cors';\n            // JSESSIONID\n\n            if (body && !staging && method != 'GET') fetchOptions.body = JSON.stringify(body);\n            console.log(\"Calling DataAPI to \".concat(process.env.REACT_APP_API_URL, \"/\").concat(endpoint, \" with options:\"), options);\n            _context.next = 11;\n            return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/\").concat(endpoint), fetchOptions).then(function (response) {\n              return response.json();\n            }).catch(function (er) {\n              if (endpoint == 'admin/locations/current') {\n                setCookie('lastTimeStamp', '');\n                setCookie('name', '');\n                window.location.reload();\n              }\n\n              console.log('APIError!', er, \"\".concat(process.env.REACT_APP_API_URL, \"/\").concat(endpoint));\n              alert('APIError');\n            });\n\n          case 11:\n            APIResponse = _context.sent;\n            console.log('fetchOptions for', endpoint, fetchOptions);\n            console.log('APIResponse for', endpoint, APIResponse);\n            if (APIResponse.chart && APIResponse.chart.resultCode == 404) alert(APIResponse.chart.resultText);\n            return _context.abrupt(\"return\", APIResponse);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _DataAPI.apply(this, arguments);\n}\n\n_c = DataAPI;\nexport default DataAPI;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataAPI\");\n$RefreshReg$(_c2, \"DataAPI\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/helpers/DataAPI.js"],"names":["getCookie","DataAPI","options","endpoint","method","body","fetchOptions","staging","process","env","REACT_APP_API_URL","headers","window","location","href","credentials","JSON","stringify","console","log","fetch","then","response","json","catch","er","setCookie","reload","alert","APIResponse","chart","resultCode","resultText"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,6BAAxB;AAEA,gBAAsBC,OAAtB;AAAA;AAAA;MAAsBA,O;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuBC,YAAAA,OAAvB,2DAAiC,EAAjC;AAAA,gCAMFA,OANE,CAGJC,QAHI,EAGJA,QAHI,kCAGO,EAHP,wCAMFD,OANE,CAIHE,MAJG,EAIHA,MAJG,gCAIM,MAJN,oCAMFF,OANE,CAKHG,IALG,EAKHA,IALG,8BAKI,EALJ;AAQEC,YAAAA,YARF,GAQiB,EARjB,EAUL;;AAEOC,YAAAA,OAZF,GAYaC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,IAAiC,OAZ9C;AAcLJ,YAAAA,YAAY,CAACF,MAAb,GAAsBG,OAAO,GAAG,KAAH,GAAWH,MAAxC;AACAE,YAAAA,YAAY,CAACK,OAAb,GAAuB;AACrB,8BAAgB,kBADK;AAErB,wBAAU,kBAFW;AAGrB,6BAAe,SAHM;AAIrB,wBAAUC,MAAM,CAACC,QAAP,CAAgBC,IAJL;AAKrB,+CAAkCP,OAAO,GAAG,KAAH,GAAWH;AAL/B,aAAvB;AAOAE,YAAAA,YAAY,CAACS,WAAb,GAA2B,SAA3B,CAtBK,CAuBL;AAGF;;AAEE,gBAAIV,IAAI,IAAI,CAACE,OAAT,IAAoBH,MAAM,IAAI,KAAlC,EAAyCE,YAAY,CAACD,IAAb,GAAoBW,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAApB;AAEzCa,YAAAA,OAAO,CAACC,GAAR,8BAAkCX,OAAO,CAACC,GAAR,CAAYC,iBAA9C,cAAmEP,QAAnE,qBAA6FD,OAA7F;AA9BK;AAAA,mBAgCqBkB,KAAK,WAE1BZ,OAAO,CAACC,GAAR,CAAYC,iBAFc,cAEOP,QAFP,GAEmBG,YAFnB,CAAL,CAEsCe,IAFtC,CAE2C,UAAUC,QAAV,EAAoB;AACnF,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,aAJqB,EAInBC,KAJmB,CAKpB,UAAAC,EAAE,EAAI;AAEJ,kBAAItB,QAAQ,IAAI,yBAAhB,EAA2C;AACzCuB,gBAAAA,SAAS,CAAC,eAAD,EAAkB,EAAlB,CAAT;AACAA,gBAAAA,SAAS,CAAC,MAAD,EAAS,EAAT,CAAT;AACAd,gBAAAA,MAAM,CAACC,QAAP,CAAgBc,MAAhB;AACD;;AAEDT,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,EAAzB,YAAgCjB,OAAO,CAACC,GAAR,CAAYC,iBAA5C,cAAiEP,QAAjE;AACAyB,cAAAA,KAAK,CAAC,UAAD,CAAL;AACD,aAfmB,CAhCrB;;AAAA;AAgCCC,YAAAA,WAhCD;AAkDHX,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgChB,QAAhC,EAA0CG,YAA1C;AACAY,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BhB,QAA/B,EAAyC0B,WAAzC;AAEA,gBAAIA,WAAW,CAACC,KAAZ,IAAqBD,WAAW,CAACC,KAAZ,CAAkBC,UAAlB,IAA8B,GAAvD,EAA4DH,KAAK,CAACC,WAAW,CAACC,KAAZ,CAAkBE,UAAnB,CAAL;AArDzD,6CAuDIH,WAvDJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAe5B,O;AA6DtB,eAAeA,OAAf","sourcesContent":["import {getCookie} from '../helpers/sessionCookie.js'\r\n\r\nexport async function DataAPI(options = {}) {\r\n\r\n\tconst {\r\n\t  endpoint = {},\r\n    method = 'POST',\r\n    body = {}\r\n\t} = options;\r\n\r\n   const fetchOptions = {};\r\n\r\n  //  body.location = getCookie('location');\r\n\r\n   const staging = (process.env.REACT_APP_API_URL == '/data');\r\n\r\n  fetchOptions.method = staging ? 'GET' : method;\r\n  fetchOptions.headers = {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n    'credentials': 'include',\r\n    'Origin': window.location.href,\r\n    'Access-Control-Request-Method' : staging ? 'GET' : method\r\n  };\r\n  fetchOptions.credentials = 'include';\r\n  // fetchOptions.mode = 'no-cors';\r\n\r\n\r\n// JSESSIONID\r\n\r\n  if (body && !staging && method != 'GET') fetchOptions.body = JSON.stringify(body);\r\n\r\n  console.log(`Calling DataAPI to ${process.env.REACT_APP_API_URL}/${endpoint} with options:`, options)\r\n\r\n  const APIResponse = await fetch(\r\n\r\n    `${process.env.REACT_APP_API_URL}/${endpoint}`, fetchOptions).then(function (response) {\r\n        return response.json();\r\n      }).catch(\r\n        er => {\r\n\r\n          if (endpoint == 'admin/locations/current') {\r\n            setCookie('lastTimeStamp', '');\r\n            setCookie('name', '');\r\n            window.location.reload();\r\n          }\r\n          \r\n          console.log('APIError!', er, `${process.env.REACT_APP_API_URL}/${endpoint}`);\r\n          alert('APIError');\r\n        }\r\n      );\r\n\r\n    console.log('fetchOptions for', endpoint, fetchOptions);\r\n    console.log('APIResponse for', endpoint, APIResponse);\r\n\r\n    if (APIResponse.chart && APIResponse.chart.resultCode==404) alert(APIResponse.chart.resultText)\r\n\r\n    return APIResponse;\r\n\r\n  }\r\n\r\n\r\n\r\nexport default DataAPI"]},"metadata":{},"sourceType":"module"}