{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\solarec2\\\\renovusUnicef\\\\ui_web\\\\src\\\\views\\\\pages\\\\energy\\\\overview.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { lazy, useEffect, useState } from 'react';\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CSpinner, CWidgetDropdown, CCardTitle, CCardText } from '@coreui/react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, round, getDateLabel, getCurrentDateNDaysBefore } from '../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../helpers/sessionCookie.js';\nimport { useTranslation } from 'react-i18next';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Overview = function Overview() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var langauge = i18n.language;\n  i18n.changeLanguage(getCookie('language'));\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataLoaded = _useState4[0],\n      setDataLoaded = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataLoaded2 = _useState6[0],\n      setDataLoaded2 = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      generators = _useState8[0],\n      setGenerators = _useState8[1];\n\n  var _useState9 = useState('y'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      user = _useState12[0],\n      setUser = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      region = _useState14[0],\n      setRegion = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      country = _useState16[0],\n      setCountry = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      capacity = _useState18[0],\n      setCapacity = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      totalACProductionMwh = _useState20[0],\n      setTotalACProductionMwh = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      irradiationKwhM2 = _useState22[0],\n      setIrradiationKwhM2 = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      avgAmbientTemp = _useState24[0],\n      setAvgAmbientTemp = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      timeAvailability = _useState26[0],\n      setTimeAvailability = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      performanceRatio = _useState28[0],\n      setPerformanceRatio = _useState28[1];\n\n  var _useState29 = useState({\n    datasets: [],\n    labels: []\n  }),\n      _useState30 = _slicedToArray(_useState29, 2),\n      timeAvailabilityChartData = _useState30[0],\n      setTimeAvailabilityChartData = _useState30[1];\n\n  var _useState31 = useState({\n    datasets: [],\n    labels: []\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      performanceChartData = _useState32[0],\n      setPerformanceChartData = _useState32[1];\n\n  useEffect(function () {\n    loadGenerators();\n    refreshChart(period);\n  }, []);\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if ((!dataLoaded || !dataLoaded2) && response && !response.error) {\n        var gen = [];\n\n        if (response.generators != null) {\n          response.generators.forEach(function (generator) {\n            gen.push(generator.id);\n          });\n          setGenerators(gen);\n        }\n      }\n    });\n  };\n\n  var fetchData = function fetchData(period) {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    DataAPI({\n      'endpoint': 'solar/overview',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var chartData = response.data && response.data[0];\n\n      if (chartData) {\n        var _timeAvailability = round(chartData.timeBasedAvailability);\n\n        var _performanceRatio = round(chartData.performanceRatio);\n\n        var _totalACProductionMwh = round(chartData.productionMwh);\n\n        var _irradiationKwhM = round(chartData.irradiationKwhM2);\n\n        var _avgAmbientTemp = round(chartData.avgAmbientTemp);\n\n        var timeAvailabilityDataset = {\n          clip: true,\n          labels: [t('Time-based Availability')],\n          datasets: [{\n            borderWidth: 0,\n            data: [_timeAvailability, 100 - _timeAvailability],\n            backgroundColor: ['#0a58ca', '#052c65']\n          }]\n        };\n        var performanceDataset = {\n          clip: true,\n          labels: [t('Performance Ratio')],\n          datasets: [{\n            borderWidth: 0,\n            data: [_performanceRatio, 100 - _performanceRatio],\n            backgroundColor: ['#722595', '#380a4e']\n          }]\n        };\n        setTimeAvailability(\"\".concat(_timeAvailability, \"%\"));\n        setPerformanceRatio(\"\".concat(_performanceRatio, \"%\"));\n        setTotalACProductionMwh(_totalACProductionMwh);\n        setIrradiationKwhM2(_irradiationKwhM);\n        setAvgAmbientTemp(_avgAmbientTemp);\n        setTimeAvailabilityChartData(timeAvailabilityDataset);\n        setPerformanceChartData(performanceDataset);\n        setDataLoaded(true);\n      }\n    });\n  };\n\n  var refreshChart = function refreshChart(period) {\n    fetchData(period);\n  };\n\n  var filterData = function filterData(date) {\n    setPeriod(date);\n    fetchData(date);\n  };\n\n  var options = {\n    animation: {\n      duration: loading ? 0 : 1000\n    }\n  };\n\n  var optionsBar = _objectSpread(_objectSpread({}, options), {}, {\n    responsive: true,\n    aspectRatio: 1,\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        ticks: {\n          color: \"#ffffff\",\n          beginAtZero: true\n        },\n        grid: {\n          display: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: '#ffffff'\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem) {\n            return round(tooltipItem.raw, 1) + ' MWh/MW';\n          }\n        }\n      }\n    }\n  });\n\n  var optionsDoughnut = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      legend: {\n        labels: {\n          color: '#ffffff'\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem) {\n            return round(tooltipItem.raw, 1) + ' %';\n          }\n        }\n      }\n    }\n  });\n\n  var bodyOpacity = loading ? .7 : 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          children: [/*#__PURE__*/_jsxDEV(CCol, {\n            sm: \"9\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"traffic\",\n              className: \"card-title mb-0\",\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small text-medium-emphasis\",\n              children: getDateLabel(period)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n            sm: \"3\",\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(DateFilter, {\n              warning: \"Seleccionar un rango máximo de 31 días\",\n              options: ['y', 'cm', 'cy', 'x', 'xx'],\n              disabled: loading,\n              onChange: function onChange(value) {\n                filterData(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            opacity: {\n              bodyOpacity: bodyOpacity\n            }\n          },\n          children: [false && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              zIndex: 999,\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgba(255,255,255,.7)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CSpinner, {\n              style: {\n                position: 'absolute'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 143\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"3\",\n              className: \"px-2 pb-3\",\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                color: \"gradient-warning\",\n                textColor: \"white\",\n                style: {\n                  opacity: loading ? 0.7 : 1\n                },\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n                    children: t('PLANT CHARACTERISTICS')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(CCardText, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('User') + ':', \" \", user != undefined ? user : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('Region') + ':', \" \", region != undefined ? region : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('Country') + ':', \" \", country != undefined ? country : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('Capacity') + ':', \" \", capacity != undefined ? round(capacity) + ' KW' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"3\",\n              className: \"px-2 pb-3\",\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                color: \"success\",\n                textColor: \"white\",\n                style: {\n                  opacity: loading ? 0.7 : 1\n                },\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n                    children: t('PRODUCTION AND CLIMATE')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(CCardText, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('Production') + ':', \" \", totalACProductionMwh != undefined ? round(totalACProductionMwh) + ' MWh' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('Irradiation') + ':', \"  \", irradiationKwhM2 != undefined ? round(irradiationKwhM2) + ' Kwh/m2' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [t('Average Ambient Temperature') + ':', \" \", avgAmbientTemp != undefined ? round(avgAmbientTemp) + ' °C' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"3\",\n              className: \"px-2 pb-3\",\n              children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n                color: \"gradient-info\",\n                header: t('TIME-BASED AVAILABILITY') + \"(%)\",\n                text: timeAvailability,\n                className: \"h-100 overview-box\",\n                style: {\n                  opacity: loading ? 0.7 : 1\n                },\n                footerSlot: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-lg-3 pb-lg-3 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-inline-block w-100\",\n                    style: {\n                      maxWidth: '300px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n                      data: timeAvailabilityChartData,\n                      options: optionsDoughnut\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"3\",\n              className: \"px-2 pb-3\",\n              children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n                color: \"gradient-purple\",\n                header: t('PERFORMANCE RATIO') + '(%)',\n                text: performanceRatio,\n                className: \"h-100 overview-box\",\n                style: {\n                  opacity: loading ? 0.7 : 1\n                },\n                footerSlot: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-lg-3 pb-lg-3 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-inline-block w-100\",\n                    style: {\n                      maxWidth: '300px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n                      data: performanceChartData,\n                      options: optionsDoughnut\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Overview, \"nECU5p4gU5gZLBmAv0oE7OmQoKU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Overview;\nexport default Overview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/src/views/pages/energy/overview.js"],"names":["React","lazy","useEffect","useState","CCard","CCardBody","CCardHeader","CCol","CRow","CSpinner","CWidgetDropdown","CCardTitle","CCardText","DataAPI","DateFilter","round","getDateLabel","getCurrentDateNDaysBefore","setCookie","getCookie","useTranslation","Bar","Doughnut","Overview","t","i18n","langauge","language","changeLanguage","loading","setLoading","dataLoaded","setDataLoaded","dataLoaded2","setDataLoaded2","generators","setGenerators","period","setPeriod","user","setUser","region","setRegion","country","setCountry","capacity","setCapacity","totalACProductionMwh","setTotalACProductionMwh","irradiationKwhM2","setIrradiationKwhM2","avgAmbientTemp","setAvgAmbientTemp","timeAvailability","setTimeAvailability","performanceRatio","setPerformanceRatio","datasets","labels","timeAvailabilityChartData","setTimeAvailabilityChartData","performanceChartData","setPerformanceChartData","loadGenerators","refreshChart","then","response","error","window","location","reload","gen","forEach","generator","push","id","fetchData","body","split","length","from","to","message","alert","chartData","data","timeBasedAvailability","productionMwh","timeAvailabilityDataset","clip","borderWidth","backgroundColor","performanceDataset","filterData","date","options","animation","duration","optionsBar","responsive","aspectRatio","scales","x","grid","display","y","ticks","color","beginAtZero","plugins","legend","position","tooltip","callbacks","label","tooltipItem","raw","optionsDoughnut","bodyOpacity","value","opacity","zIndex","width","height","undefined","maxWidth"],"mappings":"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","sourcesContent":["import React, { lazy, useEffect, useState } from 'react'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CSpinner,\r\n  CWidgetDropdown,\r\n  CCardTitle,\r\n  CCardText\r\n} from '@coreui/react'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, round, getDateLabel, getCurrentDateNDaysBefore} from '../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../helpers/sessionCookie.js'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\nconst Overview = () => {\r\n  const { t, i18n } = useTranslation()\r\n  const langauge = i18n.language\r\n  i18n.changeLanguage(getCookie('language'))\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoaded2, setDataLoaded2] = useState(false);\r\n  const [generators, setGenerators] = useState([]);\r\n  \r\n  const [period, setPeriod] = useState('y');\r\n\r\n  const [user, setUser] = useState();\r\n  const [region, setRegion] = useState();\r\n  const [country, setCountry] = useState();\r\n  const [capacity, setCapacity] = useState();\r\n\r\n  const [totalACProductionMwh, setTotalACProductionMwh] = useState();\r\n  const [irradiationKwhM2, setIrradiationKwhM2] = useState();\r\n  const [avgAmbientTemp, setAvgAmbientTemp] = useState();\r\n\r\n  const [timeAvailability, setTimeAvailability] = useState('');\r\n  const [performanceRatio, setPerformanceRatio] = useState('');\r\n\r\n  const [timeAvailabilityChartData, setTimeAvailabilityChartData] = useState(\r\n    {\r\n      datasets: [],\r\n      labels: []\r\n    }\r\n  );\r\n  const [performanceChartData, setPerformanceChartData] = useState(\r\n    {\r\n      datasets: [],\r\n      labels: []\r\n    }\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n    refreshChart(period);\r\n  }, []);\r\n\r\nconst loadGenerators = () => {\r\n\r\n  DataAPI({\r\n    'endpoint': 'admin/locations/current',\r\n    'method': 'GET'\r\n  }).then(\r\n    response => {\r\n      \r\n      if (response && response.error) {\r\n        setCookie('lastTimeStamp', '');\r\n        setCookie('name', '');\r\n        window.location.reload();\r\n      }\r\n      else if ((!dataLoaded || !dataLoaded2) && response && !response.error) {\r\n        let gen = [];\r\n        if (response.generators != null) {\r\n          response.generators.forEach(\r\n            generator => { \r\n              gen.push(generator.id)\r\n            })\r\n          setGenerators(gen);\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n\r\n}\r\n\r\nconst fetchData = (period) => {\r\n\r\n  setLoading(true);\r\n  \r\n  const body = {}\r\n  body.location = getCookie('location')\r\n  if (period && period.split('--').length==2) {\r\n    body.from = period.split('--')[0]\r\n    body.to = period.split('--')[1]\r\n  } else {\r\n    body.period = period\r\n  }\r\n\r\n  DataAPI({\r\n    'endpoint': 'solar/overview',\r\n    'method': 'POST',\r\n    'body': body\r\n  }).then(\r\n    response => {\r\n\r\n\r\n      setLoading(false);\r\n\r\n      if (response.error) {\r\n          if (response.error.message) {\r\n          return(alert(response.error.message))\r\n          } else {\r\n          return(alert(response.error)) \r\n          }\r\n      }\r\n\r\n      let chartData = response.data && response.data[0];\r\n\r\n      if (chartData) {\r\n\r\n        const timeAvailability = round(chartData.timeBasedAvailability);\r\n        const performanceRatio = round(chartData.performanceRatio)\r\n        const totalACProductionMwh = round(chartData.productionMwh);\r\n        const irradiationKwhM2 = round(chartData.irradiationKwhM2);\r\n        const avgAmbientTemp = round(chartData.avgAmbientTemp);\r\n\r\n        const timeAvailabilityDataset = {\r\n          clip:true,\r\n          labels: [t('Time-based Availability')],\r\n          datasets: [{\r\n            borderWidth: 0,\r\n            data: [timeAvailability,100-timeAvailability],\r\n            backgroundColor: ['#0a58ca', '#052c65']\r\n          }\r\n        ]}\r\n\r\n        const performanceDataset = {\r\n          clip:true,\r\n          labels: [t('Performance Ratio')],\r\n          datasets: [{\r\n            borderWidth: 0,\r\n            data: [performanceRatio,100-performanceRatio],\r\n            backgroundColor: ['#722595', '#380a4e']\r\n          }\r\n        ]}\r\n      \r\n        setTimeAvailability(`${timeAvailability}%`)\r\n        setPerformanceRatio(`${performanceRatio}%`)\r\n\r\n        setTotalACProductionMwh(totalACProductionMwh)\r\n        setIrradiationKwhM2(irradiationKwhM2)\r\n        setAvgAmbientTemp(avgAmbientTemp)\r\n        \r\n        setTimeAvailabilityChartData(timeAvailabilityDataset)\r\n        setPerformanceChartData(performanceDataset)\r\n        \r\n        setDataLoaded(true)\r\n\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n  const refreshChart = (period) => {\r\n    fetchData(period);\r\n  }\r\n\r\n  const filterData = (date) => {\r\n    setPeriod(date);\r\n    fetchData(date);\r\n  }\r\n\r\n  const options = {\r\n    animation: { duration: loading ? 0 : 1000 },\r\n  };\r\n\r\n  const optionsBar = {\r\n    ...options,\r\n    responsive: true,\r\n    aspectRatio: 1,\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          color: \"#ffffff\",\r\n          beginAtZero: true,\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem) {\r\n            return round(tooltipItem.raw,1) + ' MWh/MW'\r\n          }\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  const optionsDoughnut = {\r\n    ...options,\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem) {\r\n            return round(tooltipItem.raw,1) + ' %'\r\n          }\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  const bodyOpacity = loading?.7:1\r\n\r\n  return (\r\n    <>\r\n      \r\n      <CCard>\r\n        <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"9\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Overview\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(period)}</div>\r\n            </CCol>\r\n            <CCol sm=\"3\" className=\"text-right\">\r\n              <DateFilter warning={\"Seleccionar un rango máximo de 31 días\"} options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { filterData(value); }} />\r\n            </CCol>\r\n          </CRow>\r\n        </CCardHeader>\r\n        \r\n        <CCardBody>\r\n          <div style={{opacity:{bodyOpacity}}} >\r\n\r\n            {false && <div style={{zIndex: 999, position: 'absolute', width: '100%', height: '100%', backgroundColor:'rgba(255,255,255,.7)'}}><CSpinner style={{position: 'absolute'}} /></div>}\r\n          \r\n            <CRow>\r\n\r\n              \r\n            <CCol sm=\"6\" lg=\"3\" className=\"px-2 pb-3\">\r\n                <CCard\r\n                  color={\"gradient-warning\"}\r\n                  textColor={\"white\"}\r\n                  style={{opacity: loading ? 0.7 : 1}}\r\n                >\r\n                  <CCardBody>\r\n                    <CCardTitle>{t('PLANT CHARACTERISTICS')}</CCardTitle>\r\n                    <CCardText>\r\n                      <p class=\"h6\">{t('User')+':'} {user!=undefined?user:''}</p>\r\n                      <p class=\"h6\">{t('Region')+':'} {region!=undefined?region:''}</p>\r\n                      <p class=\"h6\">{t('Country')+':'} {country!=undefined?country:''}</p>\r\n                      <p class=\"h6\">{t('Capacity')+':'} {capacity!=undefined?round(capacity)+' KW':''}</p>\r\n                    </CCardText>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n\r\n              <CCol sm=\"6\" lg=\"3\" className=\"px-2 pb-3\">\r\n                <CCard\r\n                  color={\"success\"}\r\n                  textColor={\"white\"}\r\n                  style={{opacity: loading ? 0.7 : 1}}\r\n                >\r\n                  <CCardBody>\r\n                    <CCardTitle>{t('PRODUCTION AND CLIMATE')}</CCardTitle>\r\n                    <CCardText>\r\n                      <p class=\"h6\">{t('Production')+':'} {totalACProductionMwh!=undefined?round(totalACProductionMwh )+' MWh':''}</p>\r\n                      <p class=\"h6\">{t('Irradiation')+':'}  {irradiationKwhM2!=undefined?round(irradiationKwhM2)+' Kwh/m2':''}</p>\r\n                      <p class=\"h6\">{t('Average Ambient Temperature')+':'} {avgAmbientTemp!=undefined?round(avgAmbientTemp)+' °C':''}</p>\r\n                    </CCardText>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n\r\n\r\n              <CCol sm=\"6\" lg=\"3\" className=\"px-2 pb-3\">\r\n                <CWidgetDropdown\r\n                  color=\"gradient-info\"\r\n                  header={t('TIME-BASED AVAILABILITY')+\"(%)\"}\r\n                  text={timeAvailability}\r\n                  className=\"h-100 overview-box\"\r\n                  style={{opacity: loading ? 0.7 : 1}}\r\n                  footerSlot={\r\n                    <div className=\"px-lg-3 pb-lg-3 text-center\">\r\n                      <div className=\"d-inline-block w-100\" style={{maxWidth:'300px'}}>\r\n                        <Doughnut\r\n                          data={timeAvailabilityChartData}\r\n                          options={optionsDoughnut}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                >\r\n                </CWidgetDropdown>\r\n              </CCol>\r\n\r\n              <CCol sm=\"6\" lg=\"3\" className=\"px-2 pb-3\">\r\n                <CWidgetDropdown\r\n                  color=\"gradient-purple\"\r\n                  header={t('PERFORMANCE RATIO') + '(%)'}\r\n                  text={performanceRatio}\r\n                  className=\"h-100 overview-box\"\r\n                  style={{opacity: loading ? 0.7 : 1}}\r\n                  footerSlot={\r\n                    <div className=\"px-lg-3 pb-lg-3 text-center\">\r\n                      <div className=\"d-inline-block w-100\" style={{maxWidth:'300px'}}>\r\n                        <Doughnut\r\n                          data={performanceChartData}\r\n                          options={optionsDoughnut}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                >\r\n                </CWidgetDropdown>\r\n              </CCol>\r\n\r\n            </CRow>\r\n          </div>\r\n          \r\n        </CCardBody>\r\n\r\n      </CCard>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Overview\r\n"]},"metadata":{},"sourceType":"module"}