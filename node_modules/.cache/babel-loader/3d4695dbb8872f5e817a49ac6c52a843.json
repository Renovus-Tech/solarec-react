{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\ai-analytics\\\\energy-generation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardHeader, CRow, CCol, CButton, CSelect, CDataTable, CBadge, CSpinner, CImg } from '@coreui/react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { formatNumber, formatDate2, round, getDateLabel, DateFilter } from '../../../helpers/utils.js';\nimport { setCookie } from '../../../helpers/sessionCookie.js';\nimport { Line } from 'react-chartjs-2';\nimport ChartLoading from '../../others/ChartLoading.js';\nimport img from '../../../assets/img-energy-generation.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EnergyGeneration = function EnergyGeneration() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      generator = _useState2[0],\n      setGenerator = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generators = _useState4[0],\n      setGenerators = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generatorsLoaded = _useState6[0],\n      setGeneratorsLoaded = _useState6[1];\n\n  var _useState7 = useState('cm'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dateRange = _useState8[0],\n      setDateRange = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataLoadError = _useState12[0],\n      setDataLoadError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      graphData = _useState16[0],\n      setGraphData = _useState16[1];\n\n  useEffect(function () {\n    loadStaticData();\n  }, []);\n\n  var loadStaticData = function loadStaticData() {\n    fetch('res.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      var data = response.json().data;\n      var graphData = {\n        labels: data.evolution.map(function (point, i) {\n          return point.x;\n        }),\n        datasets: [{\n          label: '',\n          data: data.evolution.map(function (point, i) {\n            return point.y;\n          }),\n          backgroundColor: '#bc50907a'\n        }]\n      };\n      setGraphData(graphData);\n    });\n  };\n\n  var options = {\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: true\n    }\n  };\n\n  var optionsScatter = _objectSpread(_objectSpread({}, options), {}, {\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 2\n      }\n    }\n  });\n\n  var optionsGraph1 = _objectSpread(_objectSpread({}, optionsScatter), {}, {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var ret = [];\n            ret.push(formatDate2(timesPitchWindspeed[tooltipItem.dataIndex]));\n            ret.push('Wind Speed: ' + round(tooltipItem.raw.x, 1) + ' m/s');\n            ret.push('Pitch: ' + round(tooltipItem.raw.y, 1));\n            return ret;\n          }\n        }\n      }\n    }\n  });\n\n  var optionsGraph2 = _objectSpread(_objectSpread({}, optionsScatter), {}, {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var ret = [];\n            ret.push(formatDate2(timesPowerRPM[tooltipItem.dataIndex]));\n            ret.push('RPM: ' + formatNumber(round(tooltipItem.raw.x, 1)));\n            ret.push('Power: ' + round(tooltipItem.raw.y, 1) + \" KWh\");\n            return ret;\n          }\n        }\n      }\n    }\n  });\n\n  var optionsGraph3 = _objectSpread(_objectSpread({}, options), {}, {\n    scales: {\n      yDeviation: {\n        type: 'linear',\n        display: true,\n        position: 'left'\n      },\n      yWindSpeed: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        beginAtZero: false,\n        grid: {\n          drawOnChartArea: false // only want the grid lines for one axis to show up\n\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %'; // let decimals = tooltipItem.dataset.label === \"Average Wind Speed\" ? 1 : 0\n\n            return tooltipItem.dataset.label + ': ' + round(tooltipItem.raw, 1) + unit;\n          }\n        }\n      }\n    }\n  });\n\n  var optionsGraph4 = _objectSpread(_objectSpread({}, options), {}, {\n    elements: {\n      line: {\n        tension: .4\n      }\n    },\n    plugins: {\n      tooltip: {\n        mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + ': ' + round(tooltipItem.raw, 1) + \" m/s\";\n          }\n        }\n      }\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"diagnostics\",\n            className: \"card-title mb-0\",\n            children: \"AI Analytics - Energy Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"pb-2 mb-4 border-bottom\",\n            children: \"Wind Turbines for investigation/resolution: 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Percentile of performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Line, {\n            data: graphData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(EnergyGeneration, \"2GNuWOKGRw6J2QODcqMPVEaS+Gk=\");\n\n_c = EnergyGeneration;\nexport default EnergyGeneration;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnergyGeneration\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/ai-analytics/energy-generation.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardHeader","CRow","CCol","CButton","CSelect","CDataTable","CBadge","CSpinner","CImg","DataAPI","formatNumber","formatDate2","round","getDateLabel","DateFilter","setCookie","Line","ChartLoading","img","EnergyGeneration","generator","setGenerator","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","dateRange","setDateRange","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","labels","datasets","graphData","setGraphData","loadStaticData","fetch","headers","then","response","data","json","evolution","map","point","i","x","label","y","backgroundColor","options","responsive","animation","duration","tooltips","enabled","optionsScatter","legend","display","elements","radius","optionsGraph1","plugins","tooltip","callbacks","tooltipItem","ret","push","timesPitchWindspeed","dataIndex","raw","optionsGraph2","timesPowerRPM","optionsGraph3","scales","yDeviation","type","position","yWindSpeed","beginAtZero","grid","drawOnChartArea","mode","unit","dataset","optionsGraph4","line","tension"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSpinner,\r\n  CImg,\r\n} from '@coreui/react'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {formatNumber, formatDate2, round, getDateLabel, DateFilter} from '../../../helpers/utils.js'\r\nimport {setCookie} from '../../../helpers/sessionCookie.js'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport ChartLoading from '../../others/ChartLoading.js'\r\n\r\nimport img from '../../../assets/img-energy-generation.png'\r\n\r\n\r\nconst EnergyGeneration = () => {\r\n\r\n  const [generator, setGenerator] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadStaticData();\r\n  }, []);\r\n\r\n\r\n  const loadStaticData = () => {\r\n\r\n    fetch('res.json'\r\n    ,{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    }\r\n    )\r\n    .then(function(response){\r\n      const data = response.json().data;\r\n      const graphData = {\r\n        labels: data.evolution.map((point, i) => { return point.x }),\r\n        datasets: [\r\n          {\r\n            label: '',\r\n            data: data.evolution.map((point, i) => { return point.y }),\r\n            backgroundColor: '#bc50907a',\r\n          }\r\n        ],\r\n      }\r\n      setGraphData(graphData);\r\n    })   \r\n\r\n  }\r\n\r\n\r\n\r\n  const options = {\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: true\r\n    }\r\n  };\r\n  const optionsScatter = {\r\n    ...options,\r\n    legend: {\r\n      display: false\r\n   },\r\n   elements: {\r\n    point: {\r\n      radius: 2\r\n    }\r\n  },\r\n  };\r\n\r\n  const optionsGraph1 = {\r\n                  ...optionsScatter,\r\n                  plugins: {\r\n                    tooltip: {\r\n                      callbacks: {\r\n                        label: function(tooltipItem, data) {\r\n                            let ret = [];\r\n                            ret.push(formatDate2(timesPitchWindspeed[tooltipItem.dataIndex]));\r\n                            ret.push('Wind Speed: ' + round(tooltipItem.raw.x,1) + ' m/s');\r\n                            ret.push('Pitch: ' + round(tooltipItem.raw.y,1));\r\n                            return ret;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                };\r\n\r\n  const optionsGraph2 =  {\r\n                  ...optionsScatter,\r\n                  plugins: {\r\n                    tooltip: {\r\n                      callbacks: {\r\n                        label: function(tooltipItem, data) {\r\n                            let ret = [];\r\n                            ret.push(formatDate2(timesPowerRPM[tooltipItem.dataIndex]));\r\n                            ret.push('RPM: ' + formatNumber(round(tooltipItem.raw.x,1)));\r\n                            ret.push('Power: ' + round(tooltipItem.raw.y,1) + \" KWh\");\r\n                            return ret;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                };\r\n\r\n  const optionsGraph3 =  {\r\n                  ...options,\r\n                  scales: {\r\n                    yDeviation: {\r\n                      type: 'linear',\r\n                      display: true,\r\n                      position: 'left',\r\n                    },\r\n                    yWindSpeed: {\r\n                      type: 'linear',\r\n                      display: true,\r\n                      position: 'right',\r\n                      beginAtZero: false,\r\n                      grid: {\r\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n                      },\r\n                    },\r\n                  },\r\n                  plugins: {\r\n                    tooltip: {\r\n                      mode: 'index',\r\n                      callbacks: {\r\n                        label: function(tooltipItem, data) {\r\n                            let unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %'\r\n                            // let decimals = tooltipItem.dataset.label === \"Average Wind Speed\" ? 1 : 0\r\n                            return tooltipItem.dataset.label + ': ' + round(tooltipItem.raw,1) + unit;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                };\r\n\r\n  const optionsGraph4 =  {\r\n                  ...options,\r\n                  elements: {\r\n                    line: {\r\n                        tension: .4\r\n                    }\r\n                  },\r\n                  plugins: {\r\n                    tooltip: {\r\n                      mode: 'index',\r\n                      callbacks: {\r\n                        label: function(tooltipItem, data) {\r\n                            return tooltipItem.dataset.label + ': ' + round(tooltipItem.raw,1) + \" m/s\";\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                };\r\n\r\n\r\n  return (\r\n      <CCard className=\"mb-4\">\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n              <h3 id=\"diagnostics\" className=\"card-title mb-0\">\r\n                AI Analytics - Energy Generation\r\n              </h3>\r\n              {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n            </CCol>            \r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n              \r\n        <CRow className=\"mb-4\">\r\n          <CCol>\r\n            <h4 className=\"pb-2 mb-4 border-bottom\" >Wind Turbines for investigation/resolution: 3</h4>\r\n            <div>Percentile of performance</div>\r\n            <Line\r\n              data={graphData}\r\n              options={options}\r\n            />\r\n\r\n\r\n\r\n            {/* <CImg\r\n              width={'100%'}\r\n              src={img}\r\n              alt=\"\"\r\n              className={'mt-3'}\r\n            /> */}\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n          \r\n        </CCardBody>\r\n\r\n      </CCard>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default EnergyGeneration\r\n"]},"metadata":{},"sourceType":"module"}