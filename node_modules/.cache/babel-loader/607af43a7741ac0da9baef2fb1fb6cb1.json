{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\wind\\\\budget\\\\budget.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardHeader, CRow, CCol, CButton, CSelect, CSpinner, CDataTable, CContainer } from '@coreui/react';\nimport DataAPI from '../../../../helpers/DataAPI.js';\nimport { round, formatNumber } from '../../../../helpers/utils.js';\nimport { getCookie, setCookie } from '../../../../helpers/sessionCookie.js';\nimport { Bar } from 'react-chartjs-2';\nimport * as FileSaver from 'file-saver';\nimport XLSX from 'sheetjs-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Budget = function Budget() {\n  _s();\n\n  var currentMonth = new Date().getMonth();\n  var currentFiscalYear = currentMonth < getCookie('fiscalYearEndMonth') ? new Date().getFullYear() : new Date().getFullYear() + 1;\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataLoadError = _useState4[0],\n      setDataLoadError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(currentFiscalYear),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fiscalYear = _useState8[0],\n      setFiscalYear = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addEstimatedCurtailments = _useState10[0],\n      setAddEstimatedCurtailments = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      parks = _useState12[0],\n      setParks = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      parksLoaded = _useState14[0],\n      setParksLoaded = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      park = _useState16[0],\n      setPark = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      actualProductionMwh = _useState18[0],\n      setActualProductionMwh = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      actualCumulativeProductionMwh = _useState20[0],\n      setActualCumulativeProductionMwh = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      estimates = _useState22[0],\n      setEstimates = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      estimatesCumulative = _useState24[0],\n      setEstimatesCumulative = _useState24[1];\n\n  var _useState25 = useState(\"Estimate 1\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      estimatesLabel1 = _useState26[0],\n      setEstimatesLabel1 = _useState26[1];\n\n  var _useState27 = useState(\"Estimate 2\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      estimatesLabel2 = _useState28[0],\n      setEstimatesLabel2 = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      budgetData = _useState30[0],\n      setBudgetData = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      cumulativeBudgetData = _useState32[0],\n      setCumulativeBudgetData = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      difference1 = _useState34[0],\n      setDifference1 = _useState34[1];\n\n  var _useState35 = useState([]),\n      _useState36 = _slicedToArray(_useState35, 2),\n      difference2 = _useState36[0],\n      setDifference2 = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      cumulativeDifference1 = _useState38[0],\n      setCumulativeDifference1 = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      cumulativeDifference2 = _useState40[0],\n      setCumulativeDifference2 = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      tableData1 = _useState42[0],\n      setTableData1 = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      tableData2 = _useState44[0],\n      setTableData2 = _useState44[1];\n\n  var _useState45 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState46 = _slicedToArray(_useState45, 2),\n      graphData1 = _useState46[0],\n      setGraphData1 = _useState46[1];\n\n  var _useState47 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState48 = _slicedToArray(_useState47, 2),\n      graphData2 = _useState48[0],\n      setGraphData2 = _useState48[1];\n\n  useEffect(function () {\n    fetchParks();\n  }, []);\n\n  var exportToExcel = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var today, date, border, alignCenter, wb, rows, objectMaxLength, ws, excelBuffer, fileType, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              today = new Date();\n              date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes();\n              border = {\n                top: {\n                  style: 'thin',\n                  color: '#000'\n                },\n                bottom: {\n                  style: 'thin',\n                  color: '#000'\n                },\n                left: {\n                  style: 'thin',\n                  color: '#000'\n                },\n                right: {\n                  style: 'thin',\n                  color: '#000'\n                }\n              };\n              alignCenter = {\n                alignment: {\n                  vertical: \"center\",\n                  horizontal: \"center\",\n                  wrapText: '1' // any truthy value here\n\n                }\n              };\n              wb = XLSX.utils.book_new();\n              rows = [[{\n                v: \"Budget\",\n                t: \"s\",\n                s: {\n                  font: {\n                    bold: true,\n                    sz: 14\n                  }\n                }\n              }], [], [{\n                v: \"Date-Time of Report\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: date,\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }], [], [{\n                v: \"Fiscal Year\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: fiscalYear,\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }], [{\n                v: \"Add Estimated Curtailments\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: addEstimatedCurtailments ? 'Yes' : 'No',\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }], [{\n                v: \"Park\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: parks.filter(function (x) {\n                  return x.id == park;\n                })[0].name,\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }], [], [{\n                v: \"1 - Monthly Production\",\n                t: \"s\",\n                s: {\n                  font: {\n                    bold: true,\n                    sz: 11\n                  }\n                }\n              }], [], [{\n                v: \"Month to Date\",\n                t: \"s\",\n                s: {\n                  font: {\n                    bold: true,\n                    sz: 11\n                  }\n                }\n              }], [{\n                v: \"Actual Production (MWh)\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: actualProductionMwh,\n                t: \"n\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }]].concat(_toConsumableArray(estimates.map(function (x) {\n                return [{\n                  v: x.label + \" (MWh)\",\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }, {\n                  v: x.estimateMwh,\n                  t: \"n\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }];\n              })), [[], [{\n                v: '',\n                t: \"s\"\n              }, {\n                v: '',\n                t: \"s\"\n              }].concat(_toConsumableArray(estimates.map(function (x) {\n                return {\n                  v: '',\n                  t: \"s\"\n                };\n              })), [{\n                v: '% Difference',\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  }\n                }\n                /*, e: { c: 2 }*/\n\n              }]), [{\n                v: \"Month\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: \"Actual Production (MWh)\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }].concat(_toConsumableArray(estimates.map(function (x) {\n                return {\n                  v: x.label,\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                };\n              })), _toConsumableArray(estimates.map(function (x) {\n                return {\n                  v: \"Vs. \" + x.label,\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                };\n              })))], _toConsumableArray(budgetData.map(function (x) {\n                return [{\n                  v: months[new Date(x.startDate).getMonth()],\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }, {\n                  v: x.actualProductionMwh,\n                  t: \"n\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }].concat(_toConsumableArray(x.estimates.map(function (y) {\n                  return {\n                    v: y.estimateMwh,\n                    t: \"si\",\n                    s: {\n                      font: {\n                        sz: 11\n                      },\n                      border: border\n                    }\n                  };\n                })), _toConsumableArray(x.estimates.map(function (y) {\n                  return {\n                    v: y.actualVsEstimate,\n                    t: \"n\",\n                    s: {\n                      font: {\n                        sz: 11\n                      },\n                      border: border\n                    }\n                  };\n                })));\n              })), [[], [], [{\n                v: \"2 - Cumulative Production\",\n                t: \"s\",\n                s: {\n                  font: {\n                    bold: true,\n                    sz: 11\n                  }\n                }\n              }], [], [{\n                v: \"Year to Date\",\n                t: \"s\",\n                s: {\n                  font: {\n                    bold: true,\n                    sz: 11\n                  }\n                }\n              }], [{\n                v: \"Actual Production (MWh)\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: actualCumulativeProductionMwh,\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }]], _toConsumableArray(estimatesCumulative.map(function (x) {\n                return [{\n                  v: x.label + \" (MWh)\",\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }, {\n                  v: x.estimateMwh,\n                  t: \"n\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }];\n              })), [[], [{\n                v: '',\n                t: \"s\"\n              }, {\n                v: '',\n                t: \"s\"\n              }].concat(_toConsumableArray(estimatesCumulative.map(function (x) {\n                return {\n                  v: '',\n                  t: \"s\"\n                };\n              })), [{\n                v: '% Difference',\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  }\n                }\n                /*, e: { c: 2 }*/\n\n              }]), [{\n                v: \"Month\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }, {\n                v: \"Actual Production (MWh)\",\n                t: \"s\",\n                s: {\n                  font: {\n                    sz: 11\n                  },\n                  border: border\n                }\n              }].concat(_toConsumableArray(estimatesCumulative.map(function (x) {\n                return {\n                  v: x.label,\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                };\n              })), _toConsumableArray(estimatesCumulative.map(function (x) {\n                return {\n                  v: \"Vs. \" + x.label,\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                };\n              })))], _toConsumableArray(cumulativeBudgetData.map(function (x) {\n                return [{\n                  v: months[new Date(x.startDate).getMonth()],\n                  t: \"s\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }, {\n                  v: x.actualProductionMwh,\n                  t: \"n\",\n                  s: {\n                    font: {\n                      sz: 11\n                    },\n                    border: border\n                  }\n                }].concat(_toConsumableArray(x.estimates.map(function (y) {\n                  return {\n                    v: y.estimateMwh,\n                    t: \"n\",\n                    s: {\n                      font: {\n                        sz: 11\n                      },\n                      border: border\n                    }\n                  };\n                })), _toConsumableArray(x.estimates.map(function (y) {\n                  return {\n                    v: y.actualVsEstimate,\n                    t: \"n\",\n                    s: {\n                      font: {\n                        sz: 11\n                      },\n                      border: border\n                    }\n                  };\n                })));\n              })));\n              objectMaxLength = [];\n              rows.forEach(function (arr) {\n                arr.forEach(function (cell, key) {\n                  objectMaxLength[key] = 0;\n                });\n              });\n              rows.forEach(function (arr) {\n                arr.forEach(function (cell, key) {\n                  var len = 0;\n                  var value = cell.v;\n\n                  switch (typeof value) {\n                    case \"number\":\n                      len = 10;\n                      break;\n\n                    case \"string\":\n                      len = value.length;\n                      break;\n\n                    case \"object\":\n                      if (value instanceof Date) len = 10;\n                      break;\n                  }\n\n                  objectMaxLength[key] = Math.max(objectMaxLength[key], len);\n                });\n              });\n              ws = XLSX.utils.aoa_to_sheet(rows);\n              ws['!cols'] = objectMaxLength.map(function (x) {\n                return {\n                  wch: x\n                };\n              });\n              XLSX.utils.book_append_sheet(wb, ws, \"Budget\");\n              excelBuffer = XLSX.write(wb, {\n                bookType: 'xlsx',\n                type: 'array'\n              });\n              fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n              data = new Blob([excelBuffer], {\n                type: fileType\n              });\n              FileSaver.saveAs(data, \"BudgetReport.xlsx\");\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function exportToExcel() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchParks = function fetchParks() {\n    DataAPI({\n      'endpoint': 'security/authenticate/location',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.status == 401) {\n          setCookie('name', '');\n          setCookie('parkType', '');\n          window.location.reload();\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (!parksLoaded) {\n        setParks(response);\n        setParksLoaded(true);\n        setPark(response[0].id);\n      }\n    });\n  };\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n    body.locIds = [park];\n    body.fiscalYear = fiscalYear;\n    body.includeCurtailments = addEstimatedCurtailments;\n    DataAPI({\n      'endpoint': 'chart/budget',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setDataLoaded(true); // Current Data in grid\n\n      var currentData = response.currentData;\n      var tableData = [];\n      setActualProductionMwh(currentData.actualProductionMwh);\n      tableData.push({\n        label: 'Actual Production',\n        value: formatNumber(round(currentData.actualProductionMwh, 1)) + \" MWh\"\n      });\n      setEstimates(currentData.estimates);\n      currentData.estimates.forEach(function (x) {\n        tableData.push({\n          label: x.label,\n          value: formatNumber(x.estimateMwh) + \" MWh\"\n        });\n      });\n      setTableData1(tableData); //Chart Budget\n\n      var budgetData = response.budgetData;\n      if (budgetData.length == 0) return;\n      setEstimatesLabel1(budgetData[0].estimates[0].label);\n      setEstimatesLabel2(budgetData[0].estimates[1].label);\n      setBudgetData(budgetData);\n      var graphData = {\n        labels: budgetData.map(function (x, i) {\n          var startDate = new Date(x.startDate);\n          return months[startDate.getMonth()];\n        }),\n        datasets: [{\n          label: budgetData[0].estimates[0].label,\n          data: budgetData.map(function (x, i) {\n            return x.estimates[0].estimateMwh;\n          }),\n          borderColor: '#bc5090',\n          backgroundColor: '#bc5090',\n          order: 1\n        }, {\n          label: budgetData[0].estimates[1].label,\n          data: budgetData.map(function (x, i) {\n            return x.estimates[1].estimateMwh;\n          }),\n          borderColor: '#7a5195',\n          backgroundColor: '#7a5195',\n          order: 1\n        }, {\n          label: 'Actual Production',\n          data: budgetData.map(function (x, i) {\n            return x.actualProductionMwh;\n          }),\n          borderColor: '#ffa600',\n          backgroundColor: '#ffa600',\n          type: 'line',\n          order: 0\n        }]\n      };\n      var dif1 = budgetData.map(function (x, i) {\n        return x.estimates[0].actualVsEstimate;\n      });\n      var dif2 = budgetData.map(function (x, i) {\n        return x.estimates[1].actualVsEstimate;\n      });\n      setDifference1(dif1);\n      setDifference2(dif2);\n      setGraphData1(graphData);\n    });\n    DataAPI({\n      'endpoint': 'chart/budgetCumulative',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setDataLoaded(true); // Current Data in grid\n\n      var currentData = response.currentData;\n      var tableData = [];\n      setActualCumulativeProductionMwh(currentData.actualProductionMwh);\n      tableData.push({\n        label: 'Actual Production',\n        value: formatNumber(round(currentData.actualProductionMwh, 1)) + \" MWh\"\n      });\n      setEstimatesCumulative(currentData.estimates);\n      currentData.estimates.forEach(function (x) {\n        tableData.push({\n          label: x.label,\n          value: formatNumber(x.estimateMwh) + \" MWh\"\n        });\n      });\n      setTableData2(tableData); // Chart Cumulative Budget\n\n      var budgetData = response.budgetData;\n      if (budgetData.length == 0) return;\n      setCumulativeBudgetData(budgetData);\n      var graphData = {\n        labels: budgetData.map(function (x, i) {\n          var startDate = new Date(x.startDate);\n          return months[startDate.getMonth()];\n        }),\n        datasets: [{\n          label: budgetData[0].estimates[0].label,\n          data: budgetData.map(function (x, i) {\n            return x.estimates[0].estimateMwh;\n          }),\n          borderColor: '#bc5090',\n          backgroundColor: '#bc5090',\n          order: 1\n        }, {\n          label: budgetData[0].estimates[1].label,\n          data: budgetData.map(function (x, i) {\n            return x.estimates[1].estimateMwh;\n          }),\n          borderColor: '#7a5195',\n          backgroundColor: '#7a5195',\n          order: 1\n        }, {\n          label: 'Actual Production',\n          data: budgetData.map(function (x, i) {\n            return x.actualProductionMwh;\n          }),\n          borderColor: '#ffa600',\n          backgroundColor: '#ffa600',\n          type: 'line',\n          order: 0\n        }]\n      };\n      setCumulativeDifference1(budgetData.map(function (x, i) {\n        return x.estimates[0].actualVsEstimate;\n      }));\n      setCumulativeDifference2(budgetData.map(function (x, i) {\n        return x.estimates[1].actualVsEstimate;\n      }));\n      setGraphData2(graphData);\n    });\n  };\n\n  var options = {\n    responsive: true,\n    tooltips: {\n      enabled: true\n    }\n  };\n\n  var optionsGraph1 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        // mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            if (tooltipItem.dataset.label === \"Actual Production\") {\n              return [tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw, 1)) + ' MWh', \"% Difference vs. \" + estimatesLabel1 + \": \" + difference1[tooltipItem.dataIndex] + \" %\", \"% Difference vs. \" + estimatesLabel2 + \": \" + difference2[tooltipItem.dataIndex] + \" %\"];\n            } else {\n              return tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw, 1)) + ' MWh';\n            }\n          }\n        }\n      }\n    }\n  });\n\n  var optionsGraph2 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        // mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            if (tooltipItem.dataset.label === \"Actual Production\") {\n              return [tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw, 1)) + 'MWh', \"% Difference vs. \" + estimatesLabel1 + \": \" + cumulativeDifference1[tooltipItem.dataIndex] + \" %\", \"% Difference vs. \" + estimatesLabel2 + \": \" + cumulativeDifference2[tooltipItem.dataIndex] + \" %\"];\n            } else {\n              return tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw, 1)) + ' MWh';\n            }\n          }\n        }\n      }\n    }\n  });\n\n  var fields1 = [{\n    key: 'label',\n    label: ''\n  }, {\n    key: 'value',\n    label: 'Month to Date'\n  }];\n  var fields2 = [{\n    key: 'label',\n    label: ''\n  }, {\n    key: 'value',\n    label: 'Year to Date'\n  }];\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"10\",\n          className: \"text-right d-flex px-2 flex-center flex-justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-3 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Fiscal Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            className: 'input-sm',\n            disabled: loading,\n            custom: true,\n            name: \"fiscalYear\",\n            id: \"fiscalYear\",\n            onChange: function onChange(ev) {\n              setFiscalYear(ev.target.value);\n            },\n            children: [0, 1, 2, 3, 4].map(function (x) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currentFiscalYear - x,\n                children: currentFiscalYear - x\n              }, currentFiscalYear - x, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-3 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '170px'\n            },\n            children: \"Add Estimated Curtailments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            className: 'input-sm',\n            disabled: loading,\n            custom: true,\n            defaultValue: \"true\",\n            name: \"addEstimatedCurtailments\",\n            id: \"addEstimatedCurtailments\",\n            onChange: function onChange(ev) {\n              setAddEstimatedCurtailments(ev.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"Yes\"\n            }, 'addEstimatedCurtailments-yes', false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"No\"\n            }, 'addEstimatedCurtailments-no', false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-3 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Park\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            className: 'input-md',\n            disabled: loading,\n            defaultValue: park,\n            custom: true,\n            name: \"park\",\n            id: \"park\",\n            onChange: function onChange(ev) {\n              setPark(ev.target.value);\n            },\n            children: parks && parks.map(function (park) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: park.id,\n                children: park.name\n              }, park.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading || !parksLoaded,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: (loading || dataLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(CButton, {\n            onClick: function onClick(e) {\n              return exportToExcel();\n            },\n            color: \"primary\",\n            className: 'position-absolute',\n            style: {\n              top: '-9px',\n              right: '0',\n              zIndex: '1'\n            },\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Monthly Production\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n                className: 'mb-2',\n                children: /*#__PURE__*/_jsxDEV(CCol, {\n                  sm: \"5\",\n                  children: /*#__PURE__*/_jsxDEV(CDataTable, {\n                    items: tableData1,\n                    fields: fields1,\n                    striped: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n                className: 'mb-2',\n                children: /*#__PURE__*/_jsxDEV(CCol, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"MWh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                    data: graphData1,\n                    options: optionsGraph1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Cumulative Production\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n                className: 'mb-2',\n                children: /*#__PURE__*/_jsxDEV(CCol, {\n                  sm: \"5\",\n                  children: /*#__PURE__*/_jsxDEV(CDataTable, {\n                    items: tableData2,\n                    fields: fields2,\n                    striped: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n                className: 'mb-2',\n                children: /*#__PURE__*/_jsxDEV(CCol, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"MWh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                    data: graphData2,\n                    options: optionsGraph2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Budget, \"9tV30l/BiOCE3G3uqvIFWEw5Zxo=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/wind/budget/budget.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardHeader","CRow","CCol","CButton","CSelect","CSpinner","CDataTable","CContainer","DataAPI","round","formatNumber","getCookie","setCookie","Bar","FileSaver","XLSX","Budget","currentMonth","Date","getMonth","currentFiscalYear","getFullYear","months","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","fiscalYear","setFiscalYear","addEstimatedCurtailments","setAddEstimatedCurtailments","parks","setParks","parksLoaded","setParksLoaded","park","setPark","actualProductionMwh","setActualProductionMwh","actualCumulativeProductionMwh","setActualCumulativeProductionMwh","estimates","setEstimates","estimatesCumulative","setEstimatesCumulative","estimatesLabel1","setEstimatesLabel1","estimatesLabel2","setEstimatesLabel2","budgetData","setBudgetData","cumulativeBudgetData","setCumulativeBudgetData","difference1","setDifference1","difference2","setDifference2","cumulativeDifference1","setCumulativeDifference1","cumulativeDifference2","setCumulativeDifference2","tableData1","setTableData1","tableData2","setTableData2","labels","datasets","graphData1","setGraphData1","graphData2","setGraphData2","fetchParks","exportToExcel","today","date","getDate","getHours","getMinutes","border","top","style","color","bottom","left","right","alignCenter","alignment","vertical","horizontal","wrapText","wb","utils","book_new","rows","v","t","s","font","bold","sz","filter","x","id","name","map","label","estimateMwh","startDate","y","actualVsEstimate","objectMaxLength","forEach","arr","cell","key","len","value","length","Math","max","ws","aoa_to_sheet","wch","book_append_sheet","excelBuffer","write","bookType","type","fileType","data","Blob","saveAs","then","response","error","status","window","location","reload","alert","fetchData","body","locIds","includeCurtailments","message","currentData","tableData","push","graphData","i","borderColor","backgroundColor","order","dif1","dif2","options","responsive","tooltips","enabled","optionsGraph1","plugins","tooltip","callbacks","tooltipItem","dataset","raw","dataIndex","optionsGraph2","fields1","fields2","lineHeight","minWidth","ev","target","e","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSelect,\r\n  CSpinner,\r\n  CDataTable,\r\n  CContainer\r\n} from '@coreui/react'\r\n\r\nimport DataAPI from '../../../../helpers/DataAPI.js'\r\nimport {round, formatNumber} from '../../../../helpers/utils.js'\r\nimport {getCookie, setCookie} from '../../../../helpers/sessionCookie.js'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport * as FileSaver from 'file-saver'\r\nimport XLSX from 'sheetjs-style'\r\n\r\n\r\n\r\nconst Budget = () => {\r\n\r\n  const currentMonth = (new Date()).getMonth()\r\n  const currentFiscalYear = currentMonth < getCookie('fiscalYearEndMonth') ? new Date().getFullYear() : (new Date().getFullYear())+1\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [fiscalYear, setFiscalYear] = useState(currentFiscalYear);\r\n  const [addEstimatedCurtailments, setAddEstimatedCurtailments] = useState(true);\r\n  const [parks, setParks] = useState([]);\r\n  const [parksLoaded, setParksLoaded] = useState(false);\r\n  const [park, setPark] = useState(null);\r\n  const [actualProductionMwh, setActualProductionMwh] = useState(0);\r\n  const [actualCumulativeProductionMwh, setActualCumulativeProductionMwh] = useState(0);\r\n  const [estimates, setEstimates] = useState([]);\r\n  const [estimatesCumulative, setEstimatesCumulative] = useState([]);\r\n  const [estimatesLabel1, setEstimatesLabel1] = useState(\"Estimate 1\");\r\n  const [estimatesLabel2, setEstimatesLabel2] = useState(\"Estimate 2\");\r\n  const [budgetData, setBudgetData] = useState([]);\r\n  const [cumulativeBudgetData, setCumulativeBudgetData] = useState([]);\r\n  const [difference1, setDifference1] = useState([]);\r\n  const [difference2, setDifference2] = useState([]);\r\n  const [cumulativeDifference1, setCumulativeDifference1] = useState([]);\r\n  const [cumulativeDifference2, setCumulativeDifference2] = useState([]);\r\n  const [tableData1, setTableData1] = useState([]);\r\n  const [tableData2, setTableData2] = useState([]);\r\n  const [graphData1, setGraphData1] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [graphData2, setGraphData2] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    fetchParks();\r\n  },[]);\r\n  \r\n  \r\n  const exportToExcel = async () => {\r\n\r\n    const today = new Date();\r\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes();\r\n\r\n    const border = {\r\n        top: { style: 'thin', color: '#000' },\r\n        bottom: { style: 'thin', color: '#000' },\r\n        left: { style: 'thin', color: '#000' },\r\n        right: { style: 'thin', color: '#000' },\r\n    }\r\n    const alignCenter = {\r\n      alignment: {\r\n        vertical: \"center\",\r\n        horizontal: \"center\",\r\n        wrapText: '1', // any truthy value here\r\n    },\r\n    }\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    let rows = [\r\n      [\r\n        { v: \"Budget\", t: \"s\", s: { font: { bold: true, sz: 14 } } },\r\n      ],\r\n      [],\r\n      [\r\n        { v: \"Date-Time of Report\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: date, t: \"s\", s: { font: { sz: 11 }, border } },\r\n      ],\r\n      [],\r\n      [\r\n        { v: \"Fiscal Year\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: fiscalYear, t: \"s\", s: { font: { sz: 11 }, border } },\r\n      ],\r\n      [\r\n        { v: \"Add Estimated Curtailments\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: addEstimatedCurtailments?'Yes':'No', t: \"s\", s: { font: { sz: 11 }, border } },\r\n      ],\r\n      [\r\n        { v: \"Park\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: parks.filter(x => x.id == park)[0].name, t: \"s\", s: { font: { sz: 11 }, border } },\r\n      ],\r\n      [],\r\n      [\r\n        { v: \"1 - Monthly Production\", t: \"s\", s: { font: { bold: true, sz: 11 } } },\r\n      ],\r\n      [],\r\n      [\r\n        { v: \"Month to Date\", t: \"s\", s: { font: { bold: true, sz: 11 } } },\r\n      ],\r\n      [\r\n        { v: \"Actual Production (MWh)\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: actualProductionMwh, t: \"n\", s: { font: { sz: 11 }, border } },\r\n      ],\r\n      ...estimates.map((x) => {\r\n        return [\r\n          { v: x.label + \" (MWh)\", t: \"s\", s: { font: { sz: 11 }, border} },\r\n          { v: x.estimateMwh, t: \"n\", s: { font: { sz: 11 }, border } },\r\n        ]\r\n      }),\r\n      [],\r\n      [\r\n        {v: '', t: \"s\"},\r\n        {v: '', t: \"s\"},\r\n        ...estimates.map((x) => { return {v: '', t: \"s\"} }),\r\n        { v: '% Difference', t: \"s\", s: { font: { sz: 11 } }/*, e: { c: 2 }*/ },\r\n      ],\r\n      [\r\n        { v: \"Month\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: \"Actual Production (MWh)\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        ...estimates.map((x) => {\r\n          return { v: x.label, t: \"s\", s: { font: { sz: 11 }, border } }\r\n        }),\r\n        ...estimates.map((x) => {\r\n          return { v: \"Vs. \"+x.label, t: \"s\", s: { font: { sz: 11 }, border } }\r\n        })\r\n      ],\r\n      ...budgetData.map((x) => {\r\n        return [\r\n          { v: months[(new Date(x.startDate)).getMonth()], t: \"s\", s: { font: { sz: 11 }, border } },\r\n          { v: x.actualProductionMwh, t: \"n\", s: { font: { sz: 11 }, border } },\r\n          ...x.estimates.map((y) => {\r\n            return { v: y.estimateMwh, t: \"si\", s: { font: { sz: 11 }, border } }\r\n          }),\r\n          ...x.estimates.map((y) => {\r\n            return { v: y.actualVsEstimate, t: \"n\", s: { font: { sz: 11 }, border } }\r\n          }),\r\n        ]\r\n      }),\r\n      [],\r\n      [],\r\n      [\r\n        { v: \"2 - Cumulative Production\", t: \"s\", s: { font: { bold: true, sz: 11 } } },\r\n      ],\r\n      [],\r\n      [\r\n        { v: \"Year to Date\", t: \"s\", s: { font: { bold: true, sz: 11 } } },\r\n      ],\r\n      [\r\n        { v: \"Actual Production (MWh)\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: actualCumulativeProductionMwh, t: \"s\", s: { font: { sz: 11 }, border } },\r\n      ],\r\n      ...estimatesCumulative.map((x) => {\r\n        return [\r\n          { v: x.label + \" (MWh)\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n          { v: x.estimateMwh, t: \"n\", s: { font: { sz: 11 }, border } },\r\n        ]\r\n      }),\r\n      [],\r\n      [\r\n        {v: '', t: \"s\"},\r\n        {v: '', t: \"s\"},\r\n        ...estimatesCumulative.map((x) => { return {v: '', t: \"s\"} }),\r\n        { v: '% Difference', t: \"s\", s: { font: { sz: 11 } }/*, e: { c: 2 }*/ },\r\n      ],\r\n      [\r\n        { v: \"Month\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        { v: \"Actual Production (MWh)\", t: \"s\", s: { font: { sz: 11 }, border } },\r\n        ...estimatesCumulative.map((x) => {\r\n          return { v: x.label, t: \"s\", s: { font: { sz: 11 }, border } }\r\n        }),\r\n        ...estimatesCumulative.map((x) => {\r\n          return { v: \"Vs. \"+x.label, t: \"s\", s: { font: { sz: 11 }, border } }\r\n        })\r\n      ],\r\n      ...cumulativeBudgetData.map((x) => {\r\n        return [\r\n          { v: months[(new Date(x.startDate)).getMonth()], t: \"s\", s: { font: { sz: 11 }, border } },\r\n          { v: x.actualProductionMwh, t: \"n\", s: { font: { sz: 11 }, border } },\r\n          ...x.estimates.map((y) => {\r\n            return { v: y.estimateMwh, t: \"n\", s: { font: { sz: 11 }, border } }\r\n          }),\r\n          ...x.estimates.map((y) => {\r\n            return { v: y.actualVsEstimate, t: \"n\", s: { font: { sz: 11 }, border } }\r\n          }),\r\n        ]\r\n      }),\r\n    ];\r\n\r\n\r\n    \r\n\r\n    const objectMaxLength = [];\r\n\r\n    rows.forEach(arr => {\r\n      arr.forEach((cell, key) => {\r\n        objectMaxLength[key] = 0;\r\n      });\r\n    });\r\n\r\n    rows.forEach(arr => {\r\n      arr.forEach((cell, key) => {\r\n        let len = 0;\r\n        let value = cell.v;\r\n        switch(typeof value) {\r\n          case \"number\": len = 10; break;\r\n          case \"string\": len = value.length; break;\r\n          case \"object\": if(value instanceof Date) len = 10; break; \r\n        }\r\n        objectMaxLength[key] = Math.max(objectMaxLength[key], len);\r\n      });\r\n    });\r\n\r\n    const ws = XLSX.utils.aoa_to_sheet(rows);\r\n    ws['!cols'] = objectMaxLength.map(x => { return {wch: x} });\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Budget\");\r\n\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const data = new Blob([excelBuffer],  {type: fileType });\r\n    FileSaver.saveAs(data, \"BudgetReport.xlsx\");\r\n    \r\n  }\r\n\r\n\r\n\r\n  const fetchParks = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'security/authenticate/location',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.status == 401) {\r\n            setCookie('name', ''); \r\n            setCookie('parkType', ''); \r\n            window.location.reload(); \r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n        \r\n        if (!parksLoaded) {\r\n          setParks(response);\r\n          setParksLoaded(true);\r\n          setPark(response[0].id)\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.locIds = [park];\r\n    body.fiscalYear = fiscalYear\r\n    body.includeCurtailments  = addEstimatedCurtailments\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/budget',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        setDataLoaded(true);\r\n\r\n\r\n        // Current Data in grid\r\n        const currentData = response.currentData;\r\n        const tableData = [];\r\n        setActualProductionMwh(currentData.actualProductionMwh);\r\n        tableData.push({\r\n          label: 'Actual Production',\r\n          value: formatNumber(round(currentData.actualProductionMwh,1)) + \" MWh\"\r\n        })\r\n        setEstimates(currentData.estimates);\r\n        currentData.estimates.forEach(\r\n          x => {\r\n            tableData.push({\r\n              label: x.label,\r\n              value: formatNumber(x.estimateMwh) + \" MWh\"\r\n            })\r\n          }\r\n        )\r\n        setTableData1(tableData);\r\n\r\n\r\n        //Chart Budget\r\n        const budgetData = response.budgetData;\r\n        if (budgetData.length==0) return;\r\n        setEstimatesLabel1(budgetData[0].estimates[0].label)\r\n        setEstimatesLabel2(budgetData[0].estimates[1].label)\r\n        setBudgetData(budgetData);\r\n\r\n        const graphData = {\r\n          labels: budgetData.map((x, i) => { \r\n            const startDate = new Date(x.startDate);\r\n            return months[startDate.getMonth()]; \r\n          }),\r\n          datasets: [\r\n            {\r\n              label: budgetData[0].estimates[0].label,\r\n              data: budgetData.map((x, i) => { return x.estimates[0].estimateMwh }),\r\n              borderColor: '#bc5090',\r\n              backgroundColor: '#bc5090',\r\n              order: 1\r\n            },\r\n            {\r\n              label: budgetData[0].estimates[1].label,\r\n              data: budgetData.map((x, i) => { return x.estimates[1].estimateMwh }),\r\n              borderColor: '#7a5195',\r\n              backgroundColor: '#7a5195',\r\n              order: 1\r\n            },\r\n            {\r\n              label: 'Actual Production',\r\n              data: budgetData.map((x, i) => { return x.actualProductionMwh }),\r\n              borderColor: '#ffa600',\r\n              backgroundColor: '#ffa600',\r\n              type: 'line',\r\n              order: 0\r\n            },\r\n          ],\r\n        }\r\n\r\n        const dif1 = budgetData.map((x, i) => { return x.estimates[0].actualVsEstimate })\r\n        const dif2 = budgetData.map((x, i) => { return x.estimates[1].actualVsEstimate })\r\n        setDifference1(dif1)\r\n        setDifference2(dif2)\r\n\r\n        setGraphData1(graphData);\r\n\r\n      }\r\n    );\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/budgetCumulative',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        setDataLoaded(true);\r\n\r\n\r\n        // Current Data in grid\r\n        const currentData = response.currentData;\r\n        const tableData = [];\r\n        setActualCumulativeProductionMwh(currentData.actualProductionMwh);\r\n        tableData.push({\r\n          label: 'Actual Production',\r\n          value: formatNumber(round(currentData.actualProductionMwh,1)) + \" MWh\"\r\n        })\r\n        setEstimatesCumulative(currentData.estimates);\r\n        currentData.estimates.forEach(\r\n          x => {\r\n            tableData.push({\r\n              label: x.label,\r\n              value: formatNumber(x.estimateMwh) + \" MWh\"\r\n            })\r\n          }\r\n        )\r\n        setTableData2(tableData);\r\n\r\n\r\n        // Chart Cumulative Budget\r\n        const budgetData = response.budgetData;\r\n        if (budgetData.length==0) return;\r\n        setCumulativeBudgetData(budgetData);\r\n        const graphData = {\r\n          labels: budgetData.map((x, i) => { \r\n            const startDate = new Date(x.startDate);\r\n            return months[startDate.getMonth()]; \r\n          }),\r\n          datasets: [\r\n            {\r\n              label: budgetData[0].estimates[0].label,\r\n              data: budgetData.map((x, i) => { return x.estimates[0].estimateMwh }),\r\n              borderColor: '#bc5090',\r\n              backgroundColor: '#bc5090',\r\n              order: 1\r\n            },\r\n            {\r\n              label: budgetData[0].estimates[1].label,\r\n              data: budgetData.map((x, i) => { return x.estimates[1].estimateMwh }),\r\n              borderColor: '#7a5195',\r\n              backgroundColor: '#7a5195',\r\n              order: 1\r\n            },\r\n            {\r\n              label: 'Actual Production',\r\n              data: budgetData.map((x, i) => { return x.actualProductionMwh }),\r\n              borderColor: '#ffa600',\r\n              backgroundColor: '#ffa600',\r\n              type: 'line',\r\n              order: 0\r\n            },\r\n          ],\r\n        }\r\n\r\n        setCumulativeDifference1(budgetData.map((x, i) => { return x.estimates[0].actualVsEstimate }))\r\n        setCumulativeDifference2(budgetData.map((x, i) => { return x.estimates[1].actualVsEstimate }))\r\n\r\n        setGraphData2(graphData);\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    tooltips: {\r\n      enabled: true\r\n    }\r\n  };\r\n\r\n  const optionsGraph1 =  {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        // mode: 'index',\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            if (tooltipItem.dataset.label === \"Actual Production\")  {\r\n              return [\r\n                tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw,1)) + ' MWh',\r\n                \"% Difference vs. \" + estimatesLabel1 + \": \" + difference1[tooltipItem.dataIndex] + \" %\",\r\n                \"% Difference vs. \" + estimatesLabel2 + \": \" + difference2[tooltipItem.dataIndex] + \" %\"\r\n            \r\n              ];\r\n            } else {\r\n              return tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw,1)) + ' MWh'\r\n            }\r\n              \r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const optionsGraph2 =  {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        // mode: 'index',\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            if (tooltipItem.dataset.label === \"Actual Production\")  {\r\n              return [\r\n                tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw,1)) + 'MWh',\r\n                \"% Difference vs. \" + estimatesLabel1 + \": \" + cumulativeDifference1[tooltipItem.dataIndex] + \" %\",\r\n                \"% Difference vs. \" + estimatesLabel2 + \": \" + cumulativeDifference2[tooltipItem.dataIndex] + \" %\"\r\n            \r\n              ];\r\n            } else {\r\n              return tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw,1)) + ' MWh'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const fields1=[\r\n    { \r\n      key: 'label',\r\n      label: '',\r\n    },\r\n    { \r\n      key: 'value',\r\n      label: 'Month to Date',\r\n    }\r\n  ]\r\n  const fields2=[\r\n    { \r\n      key: 'label',\r\n      label: '',\r\n    },\r\n    { \r\n      key: 'value',\r\n      label: 'Year to Date',\r\n    }\r\n  ]\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"2\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Budget\r\n            </h3>\r\n            {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n          </CCol>\r\n\r\n          <CCol sm=\"10\" className=\"text-right d-flex px-2 flex-center flex-justify-end\">\r\n            <h6 className=\"mr-2 ml-3 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Fiscal Year</h6>\r\n            <CSelect className={'input-sm'} disabled={loading} custom name=\"fiscalYear\" id=\"fiscalYear\" onChange={(ev) => {setFiscalYear(ev.target.value);}}>\r\n              {[0,1,2,3,4].map((x) => (\r\n                                <option key={currentFiscalYear-x} value={currentFiscalYear-x}>\r\n                                  {currentFiscalYear-x}\r\n                                </option>\r\n                              ))}\r\n            </CSelect>\r\n\r\n            <h6 className=\"mr-2 ml-3 m-0\" style={{lineHeight:2.4,minWidth:'170px'}}>Add Estimated Curtailments</h6>\r\n            <CSelect className={'input-sm'} disabled={loading} custom defaultValue={\"true\"} name=\"addEstimatedCurtailments\" id=\"addEstimatedCurtailments\" onChange={(ev) => {setAddEstimatedCurtailments(ev.target.value);}}>\r\n              <option key={'addEstimatedCurtailments-yes'} value=\"true\">Yes</option>\r\n              <option  key={'addEstimatedCurtailments-no'} value=\"false\">No</option>\r\n            </CSelect>\r\n\r\n            <h6 className=\"mr-2 ml-3 m-0\" style={{lineHeight:2.4}}>Park</h6>\r\n            <CSelect className={'input-md'} disabled={loading} defaultValue={park} custom name=\"park\" id=\"park\" onChange={(ev) => {setPark(ev.target.value);}}>\r\n                {parks && parks.map((park) => (\r\n                    <option key={park.id} value={park.id}>\r\n                      {park.name}\r\n                    </option>\r\n                      ))}\r\n            </CSelect>\r\n\r\n            <CButton color=\"primary\" disabled={loading || !parksLoaded} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n          </CCol>\r\n\r\n          </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n\r\n        { (loading || dataLoaded) &&\r\n          <div>\r\n\r\n            { !loading || dataLoadError ? \r\n              <div className='position-relative'>\r\n                <CButton \r\n                  onClick={(e) => exportToExcel()}\r\n                  color='primary'\r\n                  className={'position-absolute'}\r\n                  style={{top:'-9px', right:'0', zIndex: '1'}}\r\n                  >\r\n                    Download\r\n                </CButton>\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Monthly Production</h4>\r\n\r\n                    <CRow className={'mb-2'}>\r\n                      <CCol sm=\"5\">\r\n                        <CDataTable\r\n                          items={tableData1}\r\n                          fields={fields1}\r\n                          striped\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n\r\n                    <CRow className={'mb-2'}>\r\n                      <CCol>\r\n                        <div>MWh</div>\r\n                        <Bar \r\n                          data={graphData1}\r\n                          options={optionsGraph1} \r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Cumulative Production</h4>\r\n                    \r\n                    <CRow className={'mb-2'}>\r\n                      <CCol sm=\"5\">\r\n                        <CDataTable\r\n                          items={tableData2}\r\n                          fields={fields2}\r\n                          striped\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n\r\n                    <CRow className={'mb-2'}>\r\n                      <CCol>\r\n                        <div>MWh</div>\r\n                        <Bar \r\n                          data={graphData2}\r\n                          options={optionsGraph2} \r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                </CRow>\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Budget\r\n"]},"metadata":{},"sourceType":"module"}