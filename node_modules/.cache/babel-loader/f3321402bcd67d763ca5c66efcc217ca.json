{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\climate\\\\summary.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, getDateLabel, formatDate, formatDate2, round } from '../../../helpers/utils.js';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CSelect, CButton, CRow, CCol } from '@coreui/react';\nimport { CChartLine, CChartPolarArea } from '@coreui/react-chartjs';\nimport { Bar } from 'react-chartjs-2';\nimport { DocsLink } from 'src/reusable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ClimateSummary = function ClimateSummary() {\n  _s();\n\n  var _useState = useState('y'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateRange = _useState2[0],\n      setDateRange = _useState2[1];\n\n  var _useState3 = useState('day'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generators = _useState6[0],\n      setGenerators = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      barChartOneData = _useState10[0],\n      setbarChartOneData = _useState10[1];\n\n  var _useState11 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      lineChartTwoData = _useState12[0],\n      setLineChartTwoData = _useState12[1];\n\n  var _useState13 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      polarChartData = _useState14[0],\n      setPolarChartData = _useState14[1];\n\n  useEffect(function () {\n    // getChartData(dateRange);\n    fetchData();\n  }, []);\n  var colorCounter = 0;\n  var colors = ['blue', 'lightblue', 'turquoise', 'yellow', 'orange', 'red'];\n  var windRoseLabels = ['0-3', '3-6', '6-9', '9-12', '12-15', '15*'];\n\n  var windRoseColor = function windRoseColor(value) {\n    var n = 0;\n\n    if (value < 3) {\n      n = 0;\n    } else if (value < 6) {\n      n = 1;\n    } else if (value < 9) {\n      n = 2;\n    } else if (value < 12) {\n      n = 3;\n    } else if (value < 15) {\n      n = 4;\n    } else {\n      n = 5;\n    }\n\n    console.log('windRoseColor', value, n);\n    var x = colors;\n    return x[n];\n  };\n\n  var windRoseRange = function windRoseRange(value) {\n    var n = 0;\n\n    if (value < 3) {\n      n = 0;\n    } else if (value < 6) {\n      n = 1;\n    } else if (value < 9) {\n      n = 2;\n    } else if (value < 12) {\n      n = 3;\n    } else if (value < 15) {\n      n = 4;\n    } else {\n      n = 5;\n    }\n\n    return n;\n  };\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n\n    if (dateRange && dateRange.split('--').length == 2) {\n      body.from = dateRange.split('--')[0];\n      body.to = dateRange.split('--')[1];\n    } else {\n      body.period = dateRange;\n    }\n\n    body.groupBy = groupBy;\n    DataAPI({\n      'endpoint': 'chart/climate',\n      'method': 'POST',\n      'body': body\n    }).then(function (responseData) {\n      if (responseData.error && responseData.error.message) alert(responseData.error.message);\n      setLoading(false);\n\n      if (responseData && responseData.graphs) {\n        var graphDataWindSpeed = {\n          labels: responseData.graphs[0].data.map(function (x, i) {\n            return x.datetimeFrom.split(' ')[0];\n          }),\n          datasets: [{\n            label: 'Met Mast Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.mmWindSpeed;\n            }),\n            // borderColor: Utils.CHART_COLORS.red,\n            backgroundColor: '#003f5c'\n          }, {\n            label: 'Turbine Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taWindSpeed;\n            }),\n            // borderColor: Utils.CHART_COLORS.blue,\n            backgroundColor: '#7a5195'\n          }]\n        };\n        setGraphWindSpeedData(graphDataWindSpeed);\n      }\n    });\n  }; // const getChartData = (period) => {\n  //   setLoading(true);\n  //   const body = {}\n  //   if (period && period.split('--').length==2) {\n  //     body.from = period.split('--')[0]\n  //     body.to = period.split('--')[1]\n  //   } else {\n  //     body.period = period\n  //   }\n  //   DataAPI(\n  //     {\n  //     'endpoint': 'chart/climate',\n  //     'method': 'POST',\n  //     'body': body\n  //   })\n  //     .then(function (responseData) {\n  //       if (responseData.error && responseData.error.message) alert(responseData.error.message)\n  //       setLoading(false);\n  //       var windSpeedData = {\n  //         labels: [],\n  //         datasets: []\n  //       }\n  //       var temperatureData = {\n  //         labels: [],\n  //         datasets: []\n  //       }\n  //       var windRoseData = {\n  //         labels: [],\n  //         datasets: []\n  //       }\n  //       var windSpeedDataSets = {\n  //         label: 'WindSpeed',\n  //         borderColor: '#f87979',\n  //         pointBackgroundColor: 'transparent',\n  //         pointBorderColor: 'transparent',\n  //         backgroundColor: 'transparent',\n  //         data: []\n  //       };\n  //       var temperatureDataSets = {\n  //         label: 'Temperature',\n  //         borderColor: '#00D8FF',\n  //         pointBackgroundColor: 'transparent',\n  //         pointBorderColor: 'transparent',\n  //         backgroundColor: 'transparent',\n  //         data: []\n  //       };\n  //       if (responseData && responseData.graphs){\n  //       responseData.graphs.find((item) => {\n  //         switch (item.type) {\n  //           case 'WindSpeed':\n  //             item.data.forEach((rDs) => {\n  //               const windSpeed = (Math.round(rDs.windSpeed * 100) / 100).toFixed(2);\n  //               windSpeedDataSets.data.push(windSpeed);\n  //               let date = rDs.datetimeFrom.split(' ')[0];\n  //               let time = rDs.datetimeFrom.split(' ')[1];\n  //               let timeArr = time.split(':')\n  //               const rDfrom = `${date} - ${timeArr[0]}:${timeArr[1]}`;\n  //               const rDto = rDs.datetimeTo;\n  //               windSpeedData.labels.push(rDfrom);\n  //             });\n  //             console.log('responseData.graphs', responseData.graphs);\n  //             windSpeedData.datasets.push(windSpeedDataSets);\n  //             console.log('windSpeedData', windSpeedData);\n  //             setLineChartOneData(windSpeedData)\n  //             break;\n  //           case 'Temperature':\n  //             item.data.forEach((rDs) => {\n  //               temperatureDataSets.data.push(round(rDs.temperature))\n  //               const rDfrom = rDs.datetimeFrom;\n  //               const rDto = rDs.datetimeTo;\n  //               temperatureData.labels.push(formatDate2(rDfrom, 'time'));\n  //             });\n  //             temperatureData.datasets.push(temperatureDataSets);\n  //             setLineChartTwoData(temperatureData)\n  //             break;\n  //           case 'WindRose':\n  //             item.data.forEach((rDs) => {\n  //               let windRoseDataSets = {}\n  //               const diff = parseInt(item.data.length) - parseInt(rDs.radiuses.length);\n  //               const color = windRoseColor(rDs);\n  //               windRoseDataSets.data = rDs.radiuses;\n  //               windRoseDataSets.backgroundColor=[];\n  //               rDs.radiuses.forEach(radius => windRoseDataSets.backgroundColor.push(windRoseColor(radius)));\n  //               if (diff > 0) {\n  //                 for (let i = 0; i <= diff; i++) {\n  //                   windRoseDataSets.data.push(0);\n  //                 }\n  //               }\n  //               windRoseDataSets.pointBackgroundColor = color;\n  //               // windRoseDataSets.pointBorderColor = \"white\",\n  //               windRoseDataSets.pointHoverBackgroundColor = color;\n  //               windRoseDataSets.pointHoverBorderColor = color;\n  //               windRoseData.datasets.push(windRoseDataSets);\n  //               // console.log('windRoseRange',rDfrom,rDs.angle.from)\n  //             });\n  //             windRoseData.datasets.backgroundColor = ['red','blue'];\n  //             setPolarChartData(windRoseData)\n  //             break;\n  //         }\n  //       });\n  //     }\n  //     });\n  // }\n\n\n  var windRoseLabelsMap = windRoseLabels.map(function (v, m) {\n    var color = colors[m];\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginRight: '20px'\n      },\n      children: [v, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: color,\n          width: '30px',\n          height: '10px',\n          display: 'inline-block',\n          'marginLeft': '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 52\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 14\n    }, _this);\n  });\n  var optionsVerticalBars = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Climate - Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          className: \"text-right d-flex flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '60px'\n            },\n            children: \"Group by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            value: groupBy,\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGroupBy(ev.target.value);\n            },\n            custom: true,\n            name: \"period\",\n            id: \"period\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"day\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              children: \"Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData({\n                period: dateRange,\n                groupBy: groupBy\n              });\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        className: \"py-3 mb-4 mx-0 bg-light\",\n        style: {\n          borderRadius: \"3px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"10\",\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mx-2 my-2 pt-1\",\n            style: {\n              lineHeight: 1.2,\n              minWidth: '110px'\n            },\n            children: \"Select generators:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, _this), generatorsLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: generators.map(function (gen, index) {\n              return /*#__PURE__*/_jsxDEV(CButton, {\n                style: {\n                  backgroundColor: generatorColors[gen.code],\n                  color: 'white'\n                },\n                className: (selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n                onClick: function onClick() {\n                  return selectGenerator(gen.id);\n                },\n                id: gen.id,\n                children: gen.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(CSpinner, {\n            size: \"sm\",\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"2\",\n          className: \"text-right d-flex flex-end flex-justify-end \",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            className: \"mx-2 mb-1\",\n            onClick: function onClick() {\n              return filterGenerators();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, _this), generatorsSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Wind Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"m/s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: barChartOneData,\n                options: optionsVerticalBars\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Temperature and Air Density\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\xB0C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartTwoData,\n                options: optionsTemperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Wind Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Degrees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CChartLine, {\n                datasets: lineChartThreeData.datasets,\n                labels: lineChartThreeData.labels,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              className: 'mt-4',\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                className: 'pl-3 pr-2',\n                style: {\n                  maxWidth: '480px',\n                  marginLeft: 'auto',\n                  marginRight: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CRow, {\n                    children: [/*#__PURE__*/_jsxDEV(CCol, {\n                      sm: \"6\",\n                      xs: \"12\",\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"0-45 North to Northeast\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"45-90 NorthEast to East\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 90-135 East to SouthEast\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"135-180 SouthEast to South\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n                      sm: \"6\",\n                      xs: \"12\",\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 180-225 South to SouthWest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"225-270 SouthWest to West\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 270-315 West to NorthWest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 315-360 NorthWest to North\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Turbulence Intensity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CChartLine, {\n                datasets: lineChartFourData.datasets,\n                labels: lineChartFourData.labels,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filterSubmitted && /*#__PURE__*/_jsxDEV(CRow, {\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            className: \"text-center\",\n            children: \"Select one or more generators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(ClimateSummary, \"3gKBcYQoMM7XGFuuL9INRuXaaZQ=\");\n\n_c = ClimateSummary;\nexport default ClimateSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClimateSummary\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/climate/summary.js"],"names":["React","useEffect","useState","DataAPI","DateFilter","getDateLabel","formatDate","formatDate2","round","CCard","CCardBody","CCardGroup","CCardHeader","CSelect","CButton","CRow","CCol","CChartLine","CChartPolarArea","Bar","DocsLink","ClimateSummary","dateRange","setDateRange","groupBy","setGroupBy","generators","setGenerators","loading","setLoading","labels","datasets","barChartOneData","setbarChartOneData","lineChartTwoData","setLineChartTwoData","polarChartData","setPolarChartData","fetchData","colorCounter","colors","windRoseLabels","windRoseColor","value","n","console","log","x","windRoseRange","body","split","length","from","to","period","then","responseData","error","message","alert","graphs","graphDataWindSpeed","data","map","i","datetimeFrom","label","mmWindSpeed","backgroundColor","taWindSpeed","setGraphWindSpeedData","windRoseLabelsMap","v","m","color","marginRight","width","height","display","optionsVerticalBars","responsive","plugins","legend","position","lineHeight","minWidth","ev","target","borderRadius","generatorsLoaded","gen","index","generatorColors","code","selectedGenerators","includes","id","selectGenerator","filterGenerators","generatorsSelected","dataLoadError","optionsTemperature","lineChartThreeData","options","maxWidth","marginLeft","lineChartFourData","filterSubmitted"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, getDateLabel, formatDate, formatDate2, round} from '../../../helpers/utils.js'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CSelect,\r\n  CButton,\r\n  CRow,\r\n  CCol\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartLine,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst ClimateSummary = () => {\r\n\r\n  const [dateRange, setDateRange] = useState('y');\r\n  const [groupBy, setGroupBy] = useState('day');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [barChartOneData, setbarChartOneData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [lineChartTwoData, setLineChartTwoData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [polarChartData, setPolarChartData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // getChartData(dateRange);\r\n    fetchData();\r\n  }, []);\r\n  \r\n  \r\n  var colorCounter=0;\r\n\r\n  const colors = [\r\n            'blue','lightblue','turquoise', 'yellow', 'orange', 'red', \r\n          ];\r\n\r\n  const windRoseLabels = [\r\n            '0-3','3-6','6-9', '9-12', '12-15', '15*', \r\n          ];\r\n\r\n  const windRoseColor = (value) => {\r\n\r\n\r\n\r\n    let n=0;\r\n\r\n    if (value < 3) {\r\n      n=0;\r\n    } else if (value < 6){\r\n      n=1;\r\n    } else if (value < 9){\r\n      n=2;\r\n    } else if (value < 12){\r\n      n=3;\r\n    } else if (value < 15){\r\n      n=4;\r\n    } else {\r\n      n=5;\r\n\r\n    }\r\n\r\n    console.log('windRoseColor', value, n)\r\n\r\n    const x = colors;\r\n\r\n    return x[n];\r\n  }\r\n\r\n\r\n  const windRoseRange = (value) => {\r\n\r\n    let n=0;\r\n\r\n    if (value < 3) {\r\n      n=0;\r\n    } else if (value < 6){\r\n      n=1;\r\n    } else if (value < 9){\r\n      n=2;\r\n    } else if (value < 12){\r\n      n=3;\r\n    } else if (value < 15){\r\n      n=4;\r\n    } else {\r\n      n=5;\r\n\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n\r\n    if (dateRange && dateRange.split('--').length==2) {\r\n      body.from = dateRange.split('--')[0]\r\n      body.to = dateRange.split('--')[1]\r\n    } else {\r\n      body.period = dateRange\r\n    }\r\n    body.groupBy = groupBy;\r\n    \r\n    DataAPI(\r\n      {\r\n      'endpoint': 'chart/climate',\r\n      'method': 'POST',\r\n      'body': body\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        if (responseData.error && responseData.error.message) alert(responseData.error.message)\r\n\r\n        setLoading(false);\r\n\r\n        if (responseData && responseData.graphs) {\r\n\r\n          const graphDataWindSpeed = {\r\n            labels: responseData.graphs[0].data.map( (x,i) => {\r\n              return x.datetimeFrom.split(' ')[0];\r\n            }),\r\n            datasets: [\r\n              {\r\n                label: 'Met Mast Average',\r\n                data: responseData.graphs[0].data.map( (x,i) => {\r\n                          return x.mmWindSpeed;\r\n                        }),\r\n                // borderColor: Utils.CHART_COLORS.red,\r\n                backgroundColor: '#003f5c',\r\n              },\r\n              {\r\n                label: 'Turbine Average',\r\n                data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taWindSpeed;\r\n                      }),\r\n                // borderColor: Utils.CHART_COLORS.blue,\r\n                backgroundColor: '#7a5195',\r\n              }\r\n            ]\r\n          };\r\n\r\n          setGraphWindSpeedData(graphDataWindSpeed);\r\n\r\n        \r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  // const getChartData = (period) => {\r\n\r\n  //   setLoading(true);\r\n\r\n  //   const body = {}\r\n\r\n  //   if (period && period.split('--').length==2) {\r\n  //     body.from = period.split('--')[0]\r\n  //     body.to = period.split('--')[1]\r\n  //   } else {\r\n  //     body.period = period\r\n  //   }\r\n    \r\n  //   DataAPI(\r\n  //     {\r\n  //     'endpoint': 'chart/climate',\r\n  //     'method': 'POST',\r\n  //     'body': body\r\n  //   })\r\n  //     .then(function (responseData) {\r\n\r\n  //       if (responseData.error && responseData.error.message) alert(responseData.error.message)\r\n\r\n  //       setLoading(false);\r\n\r\n  //       var windSpeedData = {\r\n  //         labels: [],\r\n  //         datasets: []\r\n  //       }\r\n  //       var temperatureData = {\r\n  //         labels: [],\r\n  //         datasets: []\r\n  //       }\r\n  //       var windRoseData = {\r\n  //         labels: [],\r\n  //         datasets: []\r\n  //       }\r\n\r\n\r\n  //       var windSpeedDataSets = {\r\n  //         label: 'WindSpeed',\r\n  //         borderColor: '#f87979',\r\n  //         pointBackgroundColor: 'transparent',\r\n  //         pointBorderColor: 'transparent',\r\n  //         backgroundColor: 'transparent',\r\n  //         data: []\r\n  //       };\r\n  //       var temperatureDataSets = {\r\n  //         label: 'Temperature',\r\n  //         borderColor: '#00D8FF',\r\n  //         pointBackgroundColor: 'transparent',\r\n  //         pointBorderColor: 'transparent',\r\n  //         backgroundColor: 'transparent',\r\n  //         data: []\r\n  //       };\r\n\r\n\r\n\r\n\r\n  //       if (responseData && responseData.graphs){\r\n\r\n\r\n\r\n  //       responseData.graphs.find((item) => {\r\n  //         switch (item.type) {\r\n  //           case 'WindSpeed':\r\n  //             item.data.forEach((rDs) => {\r\n  //               const windSpeed = (Math.round(rDs.windSpeed * 100) / 100).toFixed(2);\r\n  //               windSpeedDataSets.data.push(windSpeed);\r\n\r\n  //               let date = rDs.datetimeFrom.split(' ')[0];\r\n  //               let time = rDs.datetimeFrom.split(' ')[1];\r\n  //               let timeArr = time.split(':')\r\n\r\n                \r\n\r\n  //               const rDfrom = `${date} - ${timeArr[0]}:${timeArr[1]}`;\r\n  //               const rDto = rDs.datetimeTo;\r\n  //               windSpeedData.labels.push(rDfrom);\r\n  //             });\r\n\r\n  //             console.log('responseData.graphs', responseData.graphs);\r\n              \r\n  //             windSpeedData.datasets.push(windSpeedDataSets);\r\n  //             console.log('windSpeedData', windSpeedData);\r\n  //             setLineChartOneData(windSpeedData)\r\n  //             break;\r\n  //           case 'Temperature':\r\n  //             item.data.forEach((rDs) => {\r\n  //               temperatureDataSets.data.push(round(rDs.temperature))\r\n  //               const rDfrom = rDs.datetimeFrom;\r\n  //               const rDto = rDs.datetimeTo;\r\n  //               temperatureData.labels.push(formatDate2(rDfrom, 'time'));\r\n  //             });\r\n  //             temperatureData.datasets.push(temperatureDataSets);\r\n  //             setLineChartTwoData(temperatureData)\r\n  //             break;\r\n  //           case 'WindRose':\r\n  //             item.data.forEach((rDs) => {\r\n  //               let windRoseDataSets = {}\r\n  //               const diff = parseInt(item.data.length) - parseInt(rDs.radiuses.length);\r\n                \r\n  //               const color = windRoseColor(rDs);\r\n\r\n  //               windRoseDataSets.data = rDs.radiuses;\r\n  //               windRoseDataSets.backgroundColor=[];\r\n\r\n  //               rDs.radiuses.forEach(radius => windRoseDataSets.backgroundColor.push(windRoseColor(radius)));\r\n\r\n  //               if (diff > 0) {\r\n  //                 for (let i = 0; i <= diff; i++) {\r\n  //                   windRoseDataSets.data.push(0);\r\n  //                 }\r\n  //               }\r\n                \r\n  //               windRoseDataSets.pointBackgroundColor = color;\r\n  //               // windRoseDataSets.pointBorderColor = \"white\",\r\n  //               windRoseDataSets.pointHoverBackgroundColor = color;\r\n  //               windRoseDataSets.pointHoverBorderColor = color;\r\n                \r\n  //               windRoseData.datasets.push(windRoseDataSets);\r\n\r\n  //               // console.log('windRoseRange',rDfrom,rDs.angle.from)\r\n                \r\n\r\n                \r\n  //             });\r\n\r\n  //             windRoseData.datasets.backgroundColor = ['red','blue'];\r\n\r\n  //             setPolarChartData(windRoseData)\r\n  //             break;\r\n  //         }\r\n  //       });\r\n\r\n  //     }\r\n  //     });\r\n\r\n  // }\r\n\r\n\r\n  const windRoseLabelsMap = windRoseLabels.map(\r\n    (v,m) => {\r\n      const color = colors[m];\r\n      return <span style={{marginRight:'20px'}}>{v}<span style={{backgroundColor:color, width: '30px', height: '10px', display: 'inline-block', 'marginLeft':'10px' }}></span></span>;\r\n    }\r\n  )\r\n\r\n  const optionsVerticalBars = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n\r\n      <CCard>\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            {/* <CCol sm=\"7\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Climate\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n              </CCol>\r\n\r\n               <CCol sm=\"5\" class=\"text-right\">\r\n\r\n            <DateFilter options={'y,cm,cy,12w,12m,x,xx'.split(',')} disabled={loading} onChange={(value) => { setDateRange(value); getChartData(value);}} />\r\n\r\n                            </CCol> */}\r\n\r\n            \r\n            <CCol sm=\"5\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Climate - Summary\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n            \r\n            <CCol sm=\"7\" className=\"text-right d-flex flex-center\">\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n                <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); }} custom name=\"period\" id=\"period\">\r\n                    <option value=\"day\">Day</option>\r\n                    <option value=\"week\">Week</option>\r\n                    <option value=\"month\">Month</option>\r\n                </CSelect>\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value);}} />\r\n              <CButton color=\"primary\" disabled={loading} className=\"mr-2 ml-3\" onClick={() => { fetchData({period: dateRange, groupBy: groupBy});}} >Submit</CButton>\r\n            </CCol>\r\n\r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n        <CRow className={\"py-3 mb-4 mx-0 bg-light\"} style={{borderRadius:\"3px\"}}>\r\n            <CCol sm=\"10\" className={\"d-flex \"} >\r\n              <h6 className=\"mx-2 my-2 pt-1\" style={{lineHeight:1.2,minWidth:'110px'}}>Select generators:</h6>   \r\n              {generatorsLoaded ? \r\n                <div>\r\n                  { generators.map((gen, index) => (  \r\n                    <CButton \r\n                      style={{backgroundColor:generatorColors[gen.code],color: 'white'}} \r\n                      className={(selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                      onClick={() => selectGenerator(gen.id)} \r\n                      id={gen.id}\r\n                      >\r\n                        {gen.code}\r\n                    </CButton>\r\n                  )) }\r\n                </div>\r\n                :\r\n                <CSpinner \r\n                  size=\"sm\"\r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              }\r\n            </CCol>\r\n            <CCol sm=\"2\" className=\"text-right d-flex flex-end flex-justify-end \">\r\n              <CButton color=\"primary\" className=\"mx-2 mb-1\" onClick={() => filterGenerators()} >Submit</CButton>\r\n            </CCol>\r\n        </CRow>\r\n\r\n        { generatorsSelected ?\r\n\r\n          <div>\r\n\r\n            {!loading || dataLoadError ? \r\n\r\n              <div>\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Wind Speed</h4>\r\n                    <div>m/s</div>\r\n                    <Bar \r\n                      data={barChartOneData}\r\n                      options={optionsVerticalBars} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\">Temperature and Air Density</h4>\r\n                    <div>°C</div>\r\n                    <Line data={lineChartTwoData}\r\n                          options={optionsTemperature} />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol xs=\"12\">\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Wind Direction</h4>\r\n                    <div>Degrees</div>\r\n                    <CChartLine\r\n                      datasets={lineChartThreeData.datasets}\r\n                      labels={lineChartThreeData.labels}\r\n                      options={options}\r\n                    />\r\n                  </CCol>\r\n                  <CCol xs=\"12\" className={'mt-4'}>\r\n                    <CCard className={'pl-3 pr-2'} style={{maxWidth: '480px', marginLeft: 'auto', marginRight: 'auto'}}>\r\n                      <CCardBody>\r\n                        <CRow>\r\n                          <CCol sm=\"6\" xs=\"12\">\r\n                            <CLabel className={'w-100 mb-0'}>0-45 North to Northeast</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>45-90 NorthEast to East</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 90-135 East to SouthEast</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>135-180 SouthEast to South</CLabel>\r\n                          </CCol>\r\n                          <CCol sm=\"6\" xs=\"12\">\r\n                            <CLabel className={'w-100 mb-0'}> 180-225 South to SouthWest</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>225-270 SouthWest to West</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 270-315 West to NorthWest</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 315-360 NorthWest to North</CLabel>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                    \r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Turbulence Intensity</h4>\r\n                    <div>%</div>\r\n                    <CChartLine\r\n                      datasets={lineChartFourData.datasets}\r\n                      labels={lineChartFourData.labels}\r\n                      options={options}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n\r\n          </div>\r\n\r\n        :\r\n\r\n        <div>\r\n          { filterSubmitted &&\r\n            <CRow>\r\n              <CCol className=\"text-center\">\r\n                Select one or more generators\r\n              </CCol>\r\n            </CRow>\r\n          }\r\n        </div>\r\n\r\n}\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n  )\r\n}\r\n\r\nexport default ClimateSummary\r\n"]},"metadata":{},"sourceType":"module"}