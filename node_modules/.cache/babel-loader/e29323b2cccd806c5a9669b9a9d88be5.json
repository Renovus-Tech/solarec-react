{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.needsParens = needsParens;\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\n\nvar whitespace = require(\"./whitespace\");\n\nvar parens = require(\"./parentheses\");\n\nvar _t = require(\"@babel/types\");\n\nvar FLIPPED_ALIAS_KEYS = _t.FLIPPED_ALIAS_KEYS,\n    isCallExpression = _t.isCallExpression,\n    isExpressionStatement = _t.isExpressionStatement,\n    isMemberExpression = _t.isMemberExpression,\n    isNewExpression = _t.isNewExpression;\n\nfunction expandAliases(obj) {\n  var newObj = {};\n\n  function add(type, func) {\n    var fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      var result = fn(node, parent, stack);\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n    var type = _Object$keys[_i];\n    var aliases = FLIPPED_ALIAS_KEYS[type];\n\n    if (aliases) {\n      var _iterator = _createForOfIteratorHelper(aliases),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var alias = _step.value;\n          add(alias, obj[type]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nvar expandedParens = expandAliases(parens);\nvar expandedWhitespaceNodes = expandAliases(whitespace.nodes);\nvar expandedWhitespaceList = expandAliases(whitespace.list);\n\nfunction find(obj, node, parent, printStack) {\n  var fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (isCallExpression(node)) {\n    return true;\n  }\n\n  return isMemberExpression(node) && isOrHasCallExpression(node.object);\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return 0;\n\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  var linesInfo = find(expandedWhitespaceNodes, node, parent);\n\n  if (!linesInfo) {\n    var items = find(expandedWhitespaceList, node, parent);\n\n    if (items) {\n      for (var i = 0; i < items.length; i++) {\n        linesInfo = needsWhitespace(items[i], node, type);\n        if (linesInfo) break;\n      }\n    }\n  }\n\n  if (typeof linesInfo === \"object\" && linesInfo !== null) {\n    return linesInfo[type] || 0;\n  }\n\n  return 0;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, \"before\");\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, \"after\");\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/@babel/core/node_modules/@babel/generator/lib/node/index.js"],"names":["Object","defineProperty","exports","value","needsParens","needsWhitespace","needsWhitespaceAfter","needsWhitespaceBefore","whitespace","require","parens","_t","FLIPPED_ALIAS_KEYS","isCallExpression","isExpressionStatement","isMemberExpression","isNewExpression","expandAliases","obj","newObj","add","type","func","fn","node","parent","stack","result","keys","aliases","alias","expandedParens","expandedWhitespaceNodes","nodes","expandedWhitespaceList","list","find","printStack","isOrHasCallExpression","object","expression","linesInfo","items","i","length","callee"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.needsParens = needsParens;\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\n\nvar whitespace = require(\"./whitespace\");\n\nvar parens = require(\"./parentheses\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  FLIPPED_ALIAS_KEYS,\n  isCallExpression,\n  isExpressionStatement,\n  isMemberExpression,\n  isNewExpression\n} = _t;\n\nfunction expandAliases(obj) {\n  const newObj = {};\n\n  function add(type, func) {\n    const fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      const result = fn(node, parent, stack);\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (const type of Object.keys(obj)) {\n    const aliases = FLIPPED_ALIAS_KEYS[type];\n\n    if (aliases) {\n      for (const alias of aliases) {\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nconst expandedParens = expandAliases(parens);\nconst expandedWhitespaceNodes = expandAliases(whitespace.nodes);\nconst expandedWhitespaceList = expandAliases(whitespace.list);\n\nfunction find(obj, node, parent, printStack) {\n  const fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (isCallExpression(node)) {\n    return true;\n  }\n\n  return isMemberExpression(node) && isOrHasCallExpression(node.object);\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return 0;\n\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  let linesInfo = find(expandedWhitespaceNodes, node, parent);\n\n  if (!linesInfo) {\n    const items = find(expandedWhitespaceList, node, parent);\n\n    if (items) {\n      for (let i = 0; i < items.length; i++) {\n        linesInfo = needsWhitespace(items[i], node, type);\n        if (linesInfo) break;\n      }\n    }\n  }\n\n  if (typeof linesInfo === \"object\" && linesInfo !== null) {\n    return linesInfo[type] || 0;\n  }\n\n  return 0;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, \"before\");\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, \"after\");\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}"]},"metadata":{},"sourceType":"script"}