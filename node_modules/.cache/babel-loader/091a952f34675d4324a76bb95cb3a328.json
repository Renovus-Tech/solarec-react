{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\dashboard\\\\Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { lazy, useEffect, useState } from 'react';\nimport { CDataTable, CBadge, CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CProgress, CRow, CCallout, CSpinner, CWidgetDropdown, CDropdown, CDropdownMenu, CDropdownItem, CDropdownToggle, CCardTitle, CCardText } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport MainChartExample from '../charts/MainChartExample.js';\nimport DataAPI from '../../helpers/DataAPI.js';\nimport { DateFilter, round, getDateLabel } from '../../helpers/utils.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar WidgetsDropdown = /*#__PURE__*/lazy(_c = function _c() {\n  return import('./Widgets.js');\n});\n_c2 = WidgetsDropdown;\nvar WidgetsBrand = /*#__PURE__*/lazy(_c3 = function _c3() {\n  return import('../widgets/WidgetsBrand.js');\n});\n_c4 = WidgetsBrand;\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fetchingData = _useState6[0],\n      setFetchingData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState('y'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dateRange = _useState10[0],\n      setDateRange = _useState10[1];\n\n  var _useState11 = useState('Ayer'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dateRangeName = _useState12[0],\n      setDateRangeName = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      averageWindSpeed = _useState14[0],\n      setAverageWindSpeed = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      metMastWindSpeed = _useState16[0],\n      setMetMastWindSpeed = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      availability = _useState18[0],\n      setAvailability = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loadFactor = _useState20[0],\n      setLoadFactor = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      mWh = _useState22[0],\n      setMWh = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      performanceIndex90Alert = _useState24[0],\n      setPerformanceIndex90Alert = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      windTurbines6Alert = _useState26[0],\n      setWindTurbines6Alert = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      windTurbinesStopAlert = _useState28[0],\n      setWindTurbinesStopAlert = _useState28[1];\n\n  var _useState29 = useState({\n    datasets: [],\n    labels: []\n  }),\n      _useState30 = _slicedToArray(_useState29, 2),\n      availabilityChartData = _useState30[0],\n      setAvailabilityChartData = _useState30[1];\n\n  var _useState31 = useState({\n    datasets: [],\n    labels: []\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      loadFactorChartData = _useState32[0],\n      setLoadFactorChartData = _useState32[1];\n\n  useEffect(function () {\n    refreshChart(dateRange);\n  }, []);\n  var fields = ['id', 'name', 'MWh generated for period', 'Capacity factor', 'Time based availability', 'Met mast wind speed', 'MWh from wind turbines'];\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n  };\n\n  var fetchData = function fetchData(dateRange) {\n    setLoading(true);\n    var body = {};\n\n    if (dateRange && dateRange.split('--').length == 2) {\n      body.from = dateRange.split('--')[0];\n      body.to = dateRange.split('--')[1];\n    } else {\n      body.period = dateRange;\n    }\n\n    DataAPI({\n      'endpoint': 'chart/overview',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var chartData = response.data && response.data[0];\n\n      if (chartData) {\n        var _availability = Math.round(chartData.timeBasedAvailability * 10) / 10;\n\n        var _loadFactor = Math.round(chartData.capacityFactor * 10) / 10;\n\n        var _mWh = Math.round(chartData.mWhFromWindTurbines * 10) / 10;\n\n        var loadFactorDataset = {\n          clip: true,\n          labels: ['Load Factor'],\n          datasets: [{\n            borderWidth: 0,\n            data: [_loadFactor, 100 - _loadFactor],\n            backgroundColor: ['#ca6510', 'rgba(0,0,0,.7)']\n          }]\n        };\n        var availabilityDataset = {\n          clip: true,\n          labels: ['Availability'],\n          datasets: [{\n            borderWidth: 0,\n            data: [_availability, 100 - _availability],\n            backgroundColor: ['#0a58ca', '#052c65']\n          }]\n        };\n        setAverageWindSpeed(chartData.averageWindSpeed);\n        setMetMastWindSpeed(chartData.metMastWindSpeed);\n        setAvailability(\"\".concat(_availability, \"%\"));\n        setLoadFactor(\"\".concat(_loadFactor, \"%\"));\n        setAvailabilityChartData(availabilityDataset);\n        setLoadFactorChartData(loadFactorDataset);\n        setMWh(_mWh);\n      } // setDateRange(`${response.chart.from.replace(\" 00:00:00\", \"\")} - ${response.chart.to.replace(\" 00:00:00\", \"\")}`);\n\n    });\n  };\n\n  var fetchAlerts = function fetchAlerts() {\n    DataAPI({\n      'endpoint': 'chart/performanceIndex',\n      'method': 'POST',\n      'body': {\n        period: \"cm\"\n      }\n    }).then(function (response) {\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var generatorsAlert1 = [];\n      response.data.forEach(function (rDs) {\n        if (rDs.name != 'Total' && rDs.data.performance.performanceIndex < 99) {\n          generatorsAlert1.push(rDs.name);\n        }\n      });\n      setPerformanceIndex90Alert(generatorsAlert1);\n    });\n  };\n\n  useEffect(function () {// fetchAlerts();\n  }, []);\n\n  var refreshChart = function refreshChart(dateRange) {\n    fetchData(dateRange);\n    fetchAlerts();\n  };\n\n  var filterData = function filterData(date) {\n    setDateRangeName(getDateLabel(date));\n    fetchData(date); // setDateRangeName(value); setDateRange(value); refreshChart();\n  };\n\n  var options = {\n    animation: {\n      duration: loading ? 0 : 1000\n    }\n  };\n  var bodyOpacity = 1; //loading?.5:1\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          children: [/*#__PURE__*/_jsxDEV(CCol, {\n            sm: \"7\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"traffic\",\n              className: \"card-title mb-0\",\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small text-medium-emphasis\",\n              children: dateRangeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n            sm: \"5\",\n            class: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(DateFilter, {\n              warning: \"Seleccionar un rango máximo de 31 días\",\n              options: ['y', 'cm', 'x'],\n              disabled: loading,\n              onChange: function onChange(value) {\n                filterData(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            opacity: bodyOpacity\n          },\n          children: [false && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              zIndex: 999,\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgba(255,255,255,.7)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CSpinner, {\n              style: {\n                position: 'absolute'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 139\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 19\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"4\",\n              children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n                color: \"gradient-warning\",\n                header: \"LOAD FACTOR (%)\",\n                text: loadFactor,\n                footerSlot: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"px-lg-5 pb-lg-5\",\n                  children: /*#__PURE__*/_jsxDEV(Doughnut, {\n                    data: loadFactorChartData,\n                    options: options\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 13\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"4\",\n              children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n                color: \"gradient-info\",\n                header: \"AVAILABILITY (%)\",\n                text: availability,\n                footerSlot: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"px-lg-5 pb-lg-5\",\n                  children: /*#__PURE__*/_jsxDEV(Doughnut, {\n                    data: availabilityChartData,\n                    options: options\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 13\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"6\",\n              lg: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(CCard, {\n                color: \"success\",\n                textColor: \"white\",\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n                    children: \"PRODUCTION AND WIND\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 9\n                  }, _this), /*#__PURE__*/_jsxDEV(CCardText, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [\"Production: \", round(mWh), \" MWh\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [\"Turbine average wind speed: \", round(averageWindSpeed), \" m/s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"h6\",\n                      children: [\"Met mast average wind speed: \", round(metMastWindSpeed), \" m/s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 11\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 9\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 7\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(CCard, {\n                color: \"danger\",\n                textColor: \"white\",\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n                    children: \"ALERTS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 9\n                  }, _this), /*#__PURE__*/_jsxDEV(CCardText, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"\",\n                      children: [\"Wind turbines with performance < 90% (current month):\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: performanceIndex90Alert.length > 0 ? performanceIndex90Alert.join(' - ') : \" - \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 13\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"\",\n                      children: [\"Wind turbines with negative change exceeding -6% in performance (yesterday):\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: windTurbines6Alert.length > 0 ? windTurbines6Alert.join(' - ') : \" - \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 13\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"\",\n                      children: [\"Wind turbines with long stops (yesterday):\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: performanceIndex90Alert.length > 0 ? performanceIndex90Alert.join(' - ') : \" - \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 13\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 11\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 9\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 7\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 5\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"QNIwI3RX9rD5VE3HPa6zvnq7PtA=\");\n\n_c5 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"WidgetsDropdown$lazy\");\n$RefreshReg$(_c2, \"WidgetsDropdown\");\n$RefreshReg$(_c3, \"WidgetsBrand$lazy\");\n$RefreshReg$(_c4, \"WidgetsBrand\");\n$RefreshReg$(_c5, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/dashboard/Dashboard.js"],"names":["React","lazy","useEffect","useState","CDataTable","CBadge","CButton","CButtonGroup","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CProgress","CRow","CCallout","CSpinner","CWidgetDropdown","CDropdown","CDropdownMenu","CDropdownItem","CDropdownToggle","CCardTitle","CCardText","CIcon","MainChartExample","DataAPI","DateFilter","round","getDateLabel","Doughnut","WidgetsDropdown","WidgetsBrand","Dashboard","data","setData","loading","setLoading","fetchingData","setFetchingData","date","setDate","dateRange","setDateRange","dateRangeName","setDateRangeName","averageWindSpeed","setAverageWindSpeed","metMastWindSpeed","setMetMastWindSpeed","availability","setAvailability","loadFactor","setLoadFactor","mWh","setMWh","performanceIndex90Alert","setPerformanceIndex90Alert","windTurbines6Alert","setWindTurbines6Alert","windTurbinesStopAlert","setWindTurbinesStopAlert","datasets","labels","availabilityChartData","setAvailabilityChartData","loadFactorChartData","setLoadFactorChartData","refreshChart","fields","getBadge","status","fetchData","body","split","length","from","to","period","then","response","error","message","alert","chartData","Math","timeBasedAvailability","capacityFactor","mWhFromWindTurbines","loadFactorDataset","clip","borderWidth","backgroundColor","availabilityDataset","fetchAlerts","generatorsAlert1","forEach","rDs","name","performance","performanceIndex","push","filterData","options","animation","duration","bodyOpacity","value","opacity","zIndex","position","width","height","join"],"mappings":"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","sourcesContent":["import React, { lazy, useEffect, useState } from 'react'\r\n\r\nimport {\r\n  CDataTable,\r\n  CBadge,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CCallout,\r\n  CSpinner,\r\n  CWidgetDropdown,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n  CCardTitle,\r\n  CCardText\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport MainChartExample from '../charts/MainChartExample.js'\r\n\r\nimport DataAPI from '../../helpers/DataAPI.js'\r\nimport {DateFilter, round, getDateLabel} from '../../helpers/utils.js'\r\n\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst WidgetsDropdown = lazy(() => import('./Widgets.js'))\r\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\r\n\r\nconst Dashboard = () => {\r\n\r\n  const [data, setData] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetchingData, setFetchingData] = useState(false);\r\n  const [date, setDate] = useState('');\r\n  \r\n  const [dateRange, setDateRange] = useState('y');\r\n  const [dateRangeName, setDateRangeName] = useState('Ayer');\r\n\r\n\r\n  const [averageWindSpeed, setAverageWindSpeed] = useState();\r\n  const [metMastWindSpeed, setMetMastWindSpeed] = useState();\r\n\r\n  const [availability, setAvailability] = useState('');\r\n  const [loadFactor, setLoadFactor] = useState();\r\n  const [mWh, setMWh] = useState([]);\r\n\r\n  const [performanceIndex90Alert, setPerformanceIndex90Alert] = useState([]);\r\n  const [windTurbines6Alert, setWindTurbines6Alert] = useState([]);\r\n  const [windTurbinesStopAlert, setWindTurbinesStopAlert] = useState([]);\r\n\r\n  const [availabilityChartData, setAvailabilityChartData] = useState(\r\n    {\r\n      datasets: [],\r\n      labels: []\r\n    }\r\n  );\r\n  const [loadFactorChartData, setLoadFactorChartData] = useState(\r\n    {\r\n      datasets: [],\r\n      labels: []\r\n    }\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n      \r\n      refreshChart(dateRange);\r\n\r\n  }, []);\r\n\r\n\r\n  const fields = [\r\n  'id',\r\n  'name',\r\n  'MWh generated for period',\r\n  'Capacity factor',\r\n  'Time based availability',\r\n  'Met mast wind speed',\r\n  'MWh from wind turbines'\r\n];\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\n\r\nconst fetchData = (dateRange) => {\r\n\r\n  setLoading(true);\r\n  \r\n  const body = {}\r\n\r\n  if (dateRange && dateRange.split('--').length==2) {\r\n      body.from = dateRange.split('--')[0]\r\n      body.to = dateRange.split('--')[1]\r\n    } else {\r\n      body.period = dateRange\r\n    }\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/overview',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n\r\n\r\n        if (response.error) {\r\n           if (response.error.message) {\r\n            return(alert(response.error.message))\r\n           } else {\r\n            return(alert(response.error)) \r\n           }\r\n        }\r\n\r\n\r\n          let chartData = response.data && response.data[0];\r\n\r\n          if (chartData){\r\n\r\n        const availability = Math.round(chartData.timeBasedAvailability*10)/10;\r\n        const loadFactor = Math.round(chartData.capacityFactor*10)/10;\r\n        const mWh = Math.round(chartData.mWhFromWindTurbines*10)/10;\r\n\r\n        const loadFactorDataset = {\r\n          clip:true,\r\n          labels: ['Load Factor'],\r\n          datasets: [{\r\n            borderWidth: 0,\r\n            data: [loadFactor,100-loadFactor],\r\n            backgroundColor: ['#ca6510', 'rgba(0,0,0,.7)']\r\n          }\r\n        ]}\r\n\r\n\r\n        const availabilityDataset = {\r\n          clip:true,\r\n          labels: ['Availability'],\r\n          datasets: [{\r\n            borderWidth: 0,\r\n            data: [availability,100-availability],\r\n            backgroundColor: ['#0a58ca', '#052c65']\r\n          }\r\n        ]}\r\n\r\n        setAverageWindSpeed(chartData.averageWindSpeed);\r\n        setMetMastWindSpeed(chartData.metMastWindSpeed);\r\n\r\n        setAvailability(`${availability}%`)\r\n        setLoadFactor(`${loadFactor}%`)\r\n        \r\n        setAvailabilityChartData(availabilityDataset)\r\n        setLoadFactorChartData(loadFactorDataset)\r\n        setMWh(mWh)\r\n\r\n        \r\n        \r\n      }\r\n\r\n\r\n          // setDateRange(`${response.chart.from.replace(\" 00:00:00\", \"\")} - ${response.chart.to.replace(\" 00:00:00\", \"\")}`);\r\n\r\n      }\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nconst fetchAlerts = () => {\r\n  \r\n    DataAPI({\r\n      'endpoint': 'chart/performanceIndex',\r\n      'method': 'POST',\r\n      'body': {period: \"cm\"}\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n           if (response.error.message) {\r\n            return(alert(response.error.message))\r\n           } else {\r\n            return(alert(response.error)) \r\n           }\r\n        }\r\n\r\n        let generatorsAlert1 = []\r\n\r\n        response.data.forEach((rDs) => {\r\n          if (rDs.name!='Total' && rDs.data.performance.performanceIndex < 99) {\r\n            generatorsAlert1.push(rDs.name)\r\n          }\r\n        });\r\n\r\n        setPerformanceIndex90Alert(generatorsAlert1)\r\n        \r\n      }\r\n    );\r\n\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n  // fetchAlerts();\r\n}, []);\r\n\r\n  const refreshChart = (dateRange) => {\r\n    fetchData(dateRange);\r\n    fetchAlerts();\r\n  }\r\n\r\n  const filterData = (date) => {\r\n    setDateRangeName(getDateLabel(date));\r\n    fetchData(date);\r\n    // setDateRangeName(value); setDateRange(value); refreshChart();\r\n  }\r\n\r\n  const options = {animation: {duration: loading ? 0 : 1000}};\r\n  const bodyOpacity = 1;//loading?.5:1\r\n\r\n  return (\r\n    <>\r\n      \r\n      <CCard>\r\n        <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"7\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Overview\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">{dateRangeName}</div>\r\n              </CCol>\r\n            <CCol sm=\"5\" class=\"text-right\">\r\n\r\n            <DateFilter warning={\"Seleccionar un rango máximo de 31 días\"} options={['y','cm','x']} disabled={loading} onChange={(value) => { filterData(value); }} />\r\n\r\n                            </CCol>\r\n                            </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n        <CCardBody>\r\n\r\n        <div style={{opacity:bodyOpacity}}>\r\n\r\n        {false && <div style={{zIndex: 999, position: 'absolute', width: '100%', height: '100%', backgroundColor:'rgba(255,255,255,.7)'}}><CSpinner style={{position: 'absolute'}} /></div>}\r\n        \r\n\r\n\r\n        <CRow>\r\n      \r\n\r\n      <CCol sm=\"6\" lg=\"4\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-warning\"\r\n          header=\"LOAD FACTOR (%)\"\r\n          text={loadFactor}\r\n          footerSlot={\r\n            <div class=\"px-lg-5 pb-lg-5\">\r\n            <Doughnut\r\n               data={loadFactorChartData}\r\n               options={options}\r\n            />\r\n            </div>\r\n          }\r\n        >\r\n          \r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"4\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-info\"\r\n          header=\"AVAILABILITY (%)\"\r\n          text={availability}\r\n          footerSlot={\r\n            <div class=\"px-lg-5 pb-lg-5\">\r\n            <Doughnut\r\n               data={availabilityChartData}\r\n               options={options}\r\n            />\r\n            </div>\r\n          }\r\n        >\r\n          \r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n\r\n\r\n\r\n      <CCol sm=\"6\" lg=\"4\">\r\n          \r\n\r\n          <CCard\r\n      color={\"success\"}\r\n      textColor={\"white\"}\r\n\r\n    >\r\n\r\n      <CCardBody>\r\n        <CCardTitle>PRODUCTION AND WIND</CCardTitle>\r\n        <CCardText>\r\n          <p class=\"h6\">Production: {round(mWh)} MWh</p>\r\n          <p class=\"h6\">Turbine average wind speed: {round(averageWindSpeed)} m/s</p>\r\n          <p class=\"h6\">Met mast average wind speed: {round(metMastWindSpeed)} m/s</p>\r\n        </CCardText>\r\n      </CCardBody>\r\n    </CCard>\r\n\r\n\r\n    <CCard\r\n      color={\"danger\"}\r\n      textColor={\"white\"}\r\n    >\r\n\r\n      <CCardBody>\r\n        <CCardTitle>ALERTS</CCardTitle>\r\n        <CCardText>\r\n          <p class=\"\">Wind turbines with performance &lt; 90% (current month): \r\n            <h5>{performanceIndex90Alert.length > 0 ? performanceIndex90Alert.join(' - ') : \" - \"}</h5>\r\n          </p>\r\n          <p class=\"\">Wind turbines with negative change exceeding -6% in performance (yesterday): \r\n            <h5>{windTurbines6Alert.length > 0 ? windTurbines6Alert.join(' - ') : \" - \"}</h5>\r\n          </p>\r\n          <p class=\"\">Wind turbines with long stops (yesterday): \r\n            <h5>{performanceIndex90Alert.length > 0 ? performanceIndex90Alert.join(' - ') : \" - \"}</h5>\r\n          </p>\r\n        </CCardText>\r\n      </CCardBody>\r\n    </CCard>\r\n\r\n\r\n      </CCol>\r\n    </CRow></div>\r\n        \r\n        </CCardBody>\r\n\r\n        </CCard>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}