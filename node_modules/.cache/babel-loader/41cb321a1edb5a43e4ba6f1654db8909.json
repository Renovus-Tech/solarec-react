{"ast":null,"code":"var bind = require('../internals/function-bind-context');\n\nvar call = require('../internals/function-call');\n\nvar aConstructor = require('../internals/a-constructor');\n\nvar toObject = require('../internals/to-object');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\n\nvar aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;\n\nmodule.exports = function from(source\n/* , mapfn, thisArg */\n) {\n  var C = aConstructor(this);\n  var O = toObject(source);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var i, length, result, step, iterator, next;\n\n  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    O = [];\n\n    while (!(step = call(next, iterator)).done) {\n      O.push(step.value);\n    }\n  }\n\n  if (mapping && argumentsLength > 2) {\n    mapfn = bind(mapfn, arguments[2]);\n  }\n\n  length = lengthOfArrayLike(O);\n  result = new (aTypedArrayConstructor(C))(length);\n\n  for (i = 0; length > i; i++) {\n    result[i] = mapping ? mapfn(O[i], i) : O[i];\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/solarec2/renovusUnicef/ui_web/node_modules/core-js/internals/typed-array-from.js"],"names":["bind","require","call","aConstructor","toObject","lengthOfArrayLike","getIterator","getIteratorMethod","isArrayIteratorMethod","aTypedArrayConstructor","module","exports","from","source","C","O","argumentsLength","arguments","length","mapfn","undefined","mapping","iteratorMethod","i","result","step","iterator","next","done","push","value"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,oCAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,4BAAD,CAA1B;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAIM,iBAAiB,GAAGN,OAAO,CAAC,kCAAD,CAA/B;;AACA,IAAIO,qBAAqB,GAAGP,OAAO,CAAC,uCAAD,CAAnC;;AACA,IAAIQ,sBAAsB,GAAGR,OAAO,CAAC,qCAAD,CAAP,CAA+CQ,sBAA5E;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC;AAAO;AAArB,EAA6C;AAC5D,MAAIC,CAAC,GAAGX,YAAY,CAAC,IAAD,CAApB;AACA,MAAIY,CAAC,GAAGX,QAAQ,CAACS,MAAD,CAAhB;AACA,MAAIG,eAAe,GAAGC,SAAS,CAACC,MAAhC;AACA,MAAIC,KAAK,GAAGH,eAAe,GAAG,CAAlB,GAAsBC,SAAS,CAAC,CAAD,CAA/B,GAAqCG,SAAjD;AACA,MAAIC,OAAO,GAAGF,KAAK,KAAKC,SAAxB;AACA,MAAIE,cAAc,GAAGf,iBAAiB,CAACQ,CAAD,CAAtC;AACA,MAAIQ,CAAJ,EAAOL,MAAP,EAAeM,MAAf,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,IAAvC;;AACA,MAAIL,cAAc,IAAI,CAACd,qBAAqB,CAACc,cAAD,CAA5C,EAA8D;AAC5DI,IAAAA,QAAQ,GAAGpB,WAAW,CAACS,CAAD,EAAIO,cAAJ,CAAtB;AACAK,IAAAA,IAAI,GAAGD,QAAQ,CAACC,IAAhB;AACAZ,IAAAA,CAAC,GAAG,EAAJ;;AACA,WAAO,CAAC,CAACU,IAAI,GAAGvB,IAAI,CAACyB,IAAD,EAAOD,QAAP,CAAZ,EAA8BE,IAAtC,EAA4C;AAC1Cb,MAAAA,CAAC,CAACc,IAAF,CAAOJ,IAAI,CAACK,KAAZ;AACD;AACF;;AACD,MAAIT,OAAO,IAAIL,eAAe,GAAG,CAAjC,EAAoC;AAClCG,IAAAA,KAAK,GAAGnB,IAAI,CAACmB,KAAD,EAAQF,SAAS,CAAC,CAAD,CAAjB,CAAZ;AACD;;AACDC,EAAAA,MAAM,GAAGb,iBAAiB,CAACU,CAAD,CAA1B;AACAS,EAAAA,MAAM,GAAG,KAAKf,sBAAsB,CAACK,CAAD,CAA3B,EAAgCI,MAAhC,CAAT;;AACA,OAAKK,CAAC,GAAG,CAAT,EAAYL,MAAM,GAAGK,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BC,IAAAA,MAAM,CAACD,CAAD,CAAN,GAAYF,OAAO,GAAGF,KAAK,CAACJ,CAAC,CAACQ,CAAD,CAAF,EAAOA,CAAP,CAAR,GAAoBR,CAAC,CAACQ,CAAD,CAAxC;AACD;;AACD,SAAOC,MAAP;AACD,CAzBD","sourcesContent":["var bind = require('../internals/function-bind-context');\r\nvar call = require('../internals/function-call');\r\nvar aConstructor = require('../internals/a-constructor');\r\nvar toObject = require('../internals/to-object');\r\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\r\nvar getIterator = require('../internals/get-iterator');\r\nvar getIteratorMethod = require('../internals/get-iterator-method');\r\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\r\nvar aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;\r\n\r\nmodule.exports = function from(source /* , mapfn, thisArg */) {\r\n  var C = aConstructor(this);\r\n  var O = toObject(source);\r\n  var argumentsLength = arguments.length;\r\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\r\n  var mapping = mapfn !== undefined;\r\n  var iteratorMethod = getIteratorMethod(O);\r\n  var i, length, result, step, iterator, next;\r\n  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {\r\n    iterator = getIterator(O, iteratorMethod);\r\n    next = iterator.next;\r\n    O = [];\r\n    while (!(step = call(next, iterator)).done) {\r\n      O.push(step.value);\r\n    }\r\n  }\r\n  if (mapping && argumentsLength > 2) {\r\n    mapfn = bind(mapfn, arguments[2]);\r\n  }\r\n  length = lengthOfArrayLike(O);\r\n  result = new (aTypedArrayConstructor(C))(length);\r\n  for (i = 0; length > i; i++) {\r\n    result[i] = mapping ? mapfn(O[i], i) : O[i];\r\n  }\r\n  return result;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}