{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\solar\\\\climate\\\\trends.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DataAPI from '../../../../helpers/DataAPI.js';\nimport { DateFilter, getDateLabel, formatDate, formatDate2, round } from '../../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../../helpers/sessionCookie.js';\nimport { CCard, CCardBody, CCardHeader, CRow, CCol, CButton, CSpinner, CLabel } from '@coreui/react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SolarClimateTrends = function SolarClimateTrends() {\n  _s();\n\n  var _useState = useState('y'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateRange = _useState2[0],\n      setDateRange = _useState2[1];\n\n  var _useState3 = useState('hour'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataLoaded = _useState6[0],\n      setDataLoaded = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataLoadError = _useState8[0],\n      setDataLoadError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      generatorsLoaded = _useState12[0],\n      setGeneratorsLoaded = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedGenerators = _useState14[0],\n      setSelectedGenerators = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filterSubmitted = _useState16[0],\n      setFilterSubmitted = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      generators = _useState18[0],\n      setGenerators = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      generatorColors = _useState20[0],\n      setGeneratorColors = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      generatorsSelected = _useState22[0],\n      setGeneratorsSelected = _useState22[1]; // const [metMastSelected, setMetMastSelected] = useState(true);\n\n\n  var _useState23 = useState(true),\n      _useState24 = _slicedToArray(_useState23, 2),\n      allSelected = _useState24[0],\n      setAllSelected = _useState24[1];\n\n  var _useState25 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      lineChartOneData = _useState26[0],\n      setLineChartOneData = _useState26[1];\n\n  var _useState27 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      lineChartTwoData = _useState28[0],\n      setLineChartTwoData = _useState28[1]; // const [lineChartThreeData, setLineChartThreeData] = useState({\n  //   labels: [],\n  //   datasets: []\n  // });\n  // const [lineChartFourData, setLineChartFourData] = useState({\n  //   labels: [],\n  //   datasets: []\n  // });\n\n\n  var colors = ['#003f5c', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600', '#9ceb01'];\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData(period) {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    body.generators = selectedGenerators;\n    DataAPI({\n      'endpoint': 'solar/climate',\n      'method': 'POST',\n      'body': body\n    }).then(function (responseData) {\n      if (responseData.error && responseData.error.message) {\n        setDataLoadError(true);\n        alert(responseData.error.message);\n      }\n\n      setLoading(false);\n\n      if (responseData && responseData.graphs) {\n        var labels = responseData.graphs[0].data.map(function (x, i) {\n          return x.datetimeFrom;\n        });\n        var graphData1 = {\n          labels: labels,\n          datasets: []\n        };\n        var graphData2 = {\n          labels: labels,\n          datasets: []\n        }; // const graphData3 = {\n        //   labels: labels,\n        //   datasets: []\n        // };\n        // const graphData4 = {\n        //   labels: labels,\n        //   datasets: []\n        // };\n        // if (metMastSelected) {\n        //   const datasetMetMastDefault = {\n        //     label: 'Met Mast',\n        //     borderColor: '#f32e2e',\n        //     pointBackgroundColor: 'transparent',\n        //     pointBorderColor: 'transparent',\n        //     backgroundColor: 'transparent',\n        //   }\n        //   const dataset1MetMast = {\n        //     ...datasetMetMastDefault,\n        //     data: responseData.graphs[0].data.map( (x,i) => {\n        //               return x.mmWindSpeed;\n        //             }),\n        //   }\n        //   const dataset2MetMast1 = {\n        //     ...datasetMetMastDefault,\n        //     label: 'Met Mast Temperature',\n        //     yAxisID: 'yTemperature',\n        //     data: responseData.graphs[0].data.map( (x,i) => {\n        //               return x.mmTemperature;\n        //             }),\n        //   }\n        //   const dataset2MetMast2 = {\n        //     ...datasetMetMastDefault,\n        //     label: 'Met Mast Air Density',\n        //     borderColor: '#0874d3',\n        //     yAxisID: 'yAirDensity',\n        //     data: responseData.graphs[0].data.map( (x,i) => {\n        //               return x.mmAirDensity;\n        //             }),\n        //   }\n        //   const dataset3MetMast = {\n        //     ...datasetMetMastDefault,\n        //     data: responseData.graphs[0].data.map( (x,i) => {\n        //               return x.mmWindDirection;\n        //             }),\n        //   }\n        //   const dataset4MetMast = {\n        //     ...datasetMetMastDefault,\n        //     data: responseData.graphs[0].data.map( (x,i) => {\n        //               return x.mmTurbulenceIntensity;\n        //             }),\n        //   }\n        //   graphData1.datasets.push(dataset1MetMast)\n        //   graphData2.datasets.push(dataset2MetMast1)\n        //   graphData2.datasets.push(dataset2MetMast2)\n        //   graphData3.datasets.push(dataset3MetMast)\n        //   graphData4.datasets.push(dataset4MetMast)\n        // }\n\n        if (allSelected) {\n          var datasetAllDefault = {\n            label: 'Inverter Average',\n            borderColor: '#0400ff',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            backgroundColor: 'transparent'\n          };\n\n          var dataset1All = _objectSpread(_objectSpread({}, datasetAllDefault), {}, {\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taWindSpeed;\n            })\n          });\n\n          var dataset2All1 = _objectSpread(_objectSpread({}, datasetAllDefault), {}, {\n            label: 'Inverter Average Temperature',\n            yAxisID: 'yTemperature',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taTemperature;\n            })\n          }); // const dataset3All = {\n          //   ...datasetAllDefault,\n          //   data: responseData.graphs[0].data.map( (x,i) => {\n          //             return x.taWindDirection;\n          //           }),\n          // }\n          // const dataset4All = {\n          //   ...datasetAllDefault,\n          //   data: responseData.graphs[0].data.map( (x,i) => {\n          //             return x.taTurbulenceIntensity;\n          //           }),\n          // }\n\n\n          graphData1.datasets.push(dataset1All);\n          graphData2.datasets.push(dataset2All1);\n        }\n\n        responseData.graphs[0].gen_code.forEach(function (gen, index) {\n          var datasetDefault = {\n            label: gen,\n            borderColor: generatorColors[gen],\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            backgroundColor: 'transparent'\n          };\n\n          var dataset1 = _objectSpread(_objectSpread({}, datasetDefault), {}, {\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.productionMwh[index];\n            })\n          });\n\n          graphData1.datasets.push(dataset1);\n        });\n        setLineChartOneData(graphData1);\n        setLineChartTwoData(graphData2);\n      }\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if (!dataLoaded && response && !response.error) {\n        if (response.generators != null) {\n          setGenerators(response.generators); // setSelectedGenerators(response.generators.map((gen) => (gen.id)));\n\n          var colorIndex = 0;\n          response.generators.forEach(function (gen) {\n            generatorColors[gen.code] = colors[colorIndex % colors.length];\n            setGeneratorColors(generatorColors);\n            colorIndex++;\n          });\n        }\n\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  var selectGenerator = function selectGenerator(id) {\n    var newSelected = selectedGenerators;\n    newSelected = newSelected.includes(id) ? newSelected.filter(function (i) {\n      return i !== id;\n    }) // remove item\n    : [].concat(_toConsumableArray(newSelected), [id]); // add item\n\n    setSelectedGenerators(newSelected.sort());\n  };\n\n  var filterGenerators = function filterGenerators() {\n    setDataLoaded(false);\n    setGeneratorsSelected(false);\n    setFilterSubmitted(true);\n\n    if (selectedGenerators.length > 0) {\n      setLoading(true);\n      setGeneratorsSelected(true);\n      fetchData(dateRange);\n    }\n  };\n\n  var options = {\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: true\n    },\n    elements: {\n      line: {\n        tension: .4\n      }\n    }\n  };\n\n  var options1 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + ' m/s';\n          }\n        }\n      }\n    }\n  });\n\n  var options2 = _objectSpread(_objectSpread({}, options), {}, {\n    stacked: false,\n    scales: {\n      yTemperature: {\n        type: 'linear',\n        display: true,\n        position: 'left'\n      },\n      yAirDensity: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        grid: {\n          drawOnChartArea: false // only want the grid lines for one axis to show up\n\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var unit = tooltipItem.dataset.yAxisID === \"yAirDensity\" ? ' kg/m3' : ' °C';\n            var decimals = tooltipItem.dataset.yAxisID === \"yAirDensity\" ? 2 : 1;\n            var label = tooltipItem.dataset.yAxisID === \"yAirDensity\" ? 'Air Density: ' : 'Temperature: ';\n            return label + round(tooltipItem.raw, decimals) + unit;\n          }\n        }\n      }\n    }\n  });\n\n  var options3 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + '°';\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        max: 360,\n        ticks: {\n          stepSize: 45\n        }\n      }\n    }\n  });\n\n  var options4 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + ' %';\n          }\n        }\n      }\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Climate - Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"8\",\n          className: \"text-right d-flex flex-center flex-justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 1.2\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        className: \"py-3 mb-4 mx-0 bg-light\",\n        style: {\n          borderRadius: \"3px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"10\",\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mx-2 my-2 pt-1\",\n            style: {\n              lineHeight: 1.2,\n              minWidth: '110px'\n            },\n            children: \"Select turbines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, _this), generatorsLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              style: {\n                backgroundColor: '#f32e2e',\n                color: 'white'\n              },\n              className: (metMastSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n              onClick: function onClick() {\n                return setMetMastSelected(!metMastSelected);\n              },\n              children: \"Met\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n              style: {\n                backgroundColor: '#0400ff',\n                color: 'white'\n              },\n              className: (allSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n              onClick: function onClick() {\n                return setAllSelected(!allSelected);\n              },\n              children: \"ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, _this), generators.map(function (gen, index) {\n              return /*#__PURE__*/_jsxDEV(CButton, {\n                style: {\n                  backgroundColor: generatorColors[gen.code],\n                  color: 'white'\n                },\n                className: (selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n                onClick: function onClick() {\n                  return selectGenerator(gen.id);\n                },\n                id: gen.id,\n                children: gen.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(CSpinner, {\n            size: \"sm\",\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"2\",\n          className: \"text-right d-flex flex-end flex-justify-end \",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            className: \"mx-2 mb-1\",\n            onClick: function onClick() {\n              return filterGenerators();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, _this), generatorsSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Wind Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"m/s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartOneData,\n                options: options1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Temperature and Air Density\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-left\",\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"kg/m3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartTwoData,\n                options: options2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-3',\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Wind Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Degrees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartThreeData,\n                options: options3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              className: 'mt-4',\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                className: 'pl-3 pr-2',\n                style: {\n                  maxWidth: '480px',\n                  marginLeft: 'auto',\n                  marginRight: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CRow, {\n                    children: [/*#__PURE__*/_jsxDEV(CCol, {\n                      sm: \"6\",\n                      xs: \"12\",\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"0-45 North to Northeast\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 489,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"45-90 NorthEast to East\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 90-135 East to SouthEast\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 491,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"135-180 SouthEast to South\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n                      sm: \"6\",\n                      xs: \"12\",\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 180-225 South to SouthWest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"225-270 SouthWest to West\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 270-315 West to NorthWest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 315-360 NorthWest to North\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Turbulence Intensity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartFourData,\n                options: options4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filterSubmitted && /*#__PURE__*/_jsxDEV(CRow, {\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            className: \"text-center\",\n            children: \"Select one or more generators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(SolarClimateTrends, \"KG8fLdaCrJJ6v0EFNyqrEyeX6TQ=\");\n\n_c = SolarClimateTrends;\nexport default SolarClimateTrends;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolarClimateTrends\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/solar/climate/trends.js"],"names":["React","useEffect","useState","DataAPI","DateFilter","getDateLabel","formatDate","formatDate2","round","setCookie","getCookie","CCard","CCardBody","CCardHeader","CRow","CCol","CButton","CSpinner","CLabel","Line","SolarClimateTrends","dateRange","setDateRange","groupBy","setGroupBy","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","generatorsLoaded","setGeneratorsLoaded","selectedGenerators","setSelectedGenerators","filterSubmitted","setFilterSubmitted","generators","setGenerators","generatorColors","setGeneratorColors","generatorsSelected","setGeneratorsSelected","allSelected","setAllSelected","labels","datasets","lineChartOneData","setLineChartOneData","lineChartTwoData","setLineChartTwoData","colors","loadGenerators","fetchData","period","body","location","split","length","from","to","then","responseData","error","message","alert","graphs","data","map","x","i","datetimeFrom","graphData1","graphData2","datasetAllDefault","label","borderColor","pointBackgroundColor","pointBorderColor","backgroundColor","dataset1All","taWindSpeed","dataset2All1","yAxisID","taTemperature","push","gen_code","forEach","gen","index","datasetDefault","dataset1","productionMwh","response","window","reload","colorIndex","code","selectGenerator","id","newSelected","includes","filter","sort","filterGenerators","options","responsive","animation","duration","tooltips","enabled","elements","line","tension","options1","plugins","tooltip","callbacks","tooltipItem","dataset","raw","options2","stacked","scales","yTemperature","type","display","position","yAirDensity","grid","drawOnChartArea","unit","decimals","options3","y","max","ticks","stepSize","options4","lineHeight","value","borderRadius","minWidth","color","metMastSelected","setMetMastSelected","width","lineChartThreeData","maxWidth","marginLeft","marginRight","lineChartFourData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport DataAPI from '../../../../helpers/DataAPI.js'\r\nimport {DateFilter, getDateLabel, formatDate, formatDate2, round} from '../../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../../helpers/sessionCookie.js'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSpinner,\r\n  CLabel,\r\n} from '@coreui/react'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst SolarClimateTrends = () => {\r\n\r\n  const [dateRange, setDateRange] = useState('y');\r\n  const [groupBy, setGroupBy] = useState('hour');\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [selectedGenerators, setSelectedGenerators] = useState([]);\r\n  const [filterSubmitted, setFilterSubmitted] = useState(false);\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorColors, setGeneratorColors] = useState([]);\r\n  const [generatorsSelected, setGeneratorsSelected] = useState(false);\r\n  // const [metMastSelected, setMetMastSelected] = useState(true);\r\n  const [allSelected, setAllSelected] = useState(true);\r\n\r\n  const [lineChartOneData, setLineChartOneData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [lineChartTwoData, setLineChartTwoData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  // const [lineChartThreeData, setLineChartThreeData] = useState({\r\n  //   labels: [],\r\n  //   datasets: []\r\n  // });\r\n  // const [lineChartFourData, setLineChartFourData] = useState({\r\n  //   labels: [],\r\n  //   datasets: []\r\n  // });\r\n\r\n  const colors =  ['#003f5c', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600','#9ceb01']\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n  \r\n\r\n  const fetchData = (period) => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.location = getCookie('location');\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy;\r\n    body.generators = selectedGenerators;\r\n    \r\n    DataAPI(\r\n      {\r\n      'endpoint': 'solar/climate',\r\n      'method': 'POST',\r\n      'body': body\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        if (responseData.error && responseData.error.message) {\r\n          setDataLoadError(true)\r\n          alert(responseData.error.message)\r\n        } \r\n\r\n        setLoading(false);\r\n\r\n        if (responseData && responseData.graphs) {\r\n\r\n          const labels = responseData.graphs[0].data.map( (x,i) => {\r\n            return x.datetimeFrom;\r\n          })\r\n          const graphData1 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n          const graphData2 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n          // const graphData3 = {\r\n          //   labels: labels,\r\n          //   datasets: []\r\n          // };\r\n          // const graphData4 = {\r\n          //   labels: labels,\r\n          //   datasets: []\r\n          // };\r\n\r\n\r\n          // if (metMastSelected) {\r\n          //   const datasetMetMastDefault = {\r\n          //     label: 'Met Mast',\r\n          //     borderColor: '#f32e2e',\r\n          //     pointBackgroundColor: 'transparent',\r\n          //     pointBorderColor: 'transparent',\r\n          //     backgroundColor: 'transparent',\r\n          //   }\r\n          //   const dataset1MetMast = {\r\n          //     ...datasetMetMastDefault,\r\n          //     data: responseData.graphs[0].data.map( (x,i) => {\r\n          //               return x.mmWindSpeed;\r\n          //             }),\r\n          //   }\r\n          //   const dataset2MetMast1 = {\r\n          //     ...datasetMetMastDefault,\r\n          //     label: 'Met Mast Temperature',\r\n          //     yAxisID: 'yTemperature',\r\n          //     data: responseData.graphs[0].data.map( (x,i) => {\r\n          //               return x.mmTemperature;\r\n          //             }),\r\n          //   }\r\n          //   const dataset2MetMast2 = {\r\n          //     ...datasetMetMastDefault,\r\n          //     label: 'Met Mast Air Density',\r\n          //     borderColor: '#0874d3',\r\n          //     yAxisID: 'yAirDensity',\r\n          //     data: responseData.graphs[0].data.map( (x,i) => {\r\n          //               return x.mmAirDensity;\r\n          //             }),\r\n          //   }\r\n          //   const dataset3MetMast = {\r\n          //     ...datasetMetMastDefault,\r\n          //     data: responseData.graphs[0].data.map( (x,i) => {\r\n          //               return x.mmWindDirection;\r\n          //             }),\r\n          //   }\r\n          //   const dataset4MetMast = {\r\n          //     ...datasetMetMastDefault,\r\n          //     data: responseData.graphs[0].data.map( (x,i) => {\r\n          //               return x.mmTurbulenceIntensity;\r\n          //             }),\r\n          //   }\r\n          //   graphData1.datasets.push(dataset1MetMast)\r\n          //   graphData2.datasets.push(dataset2MetMast1)\r\n          //   graphData2.datasets.push(dataset2MetMast2)\r\n          //   graphData3.datasets.push(dataset3MetMast)\r\n          //   graphData4.datasets.push(dataset4MetMast)\r\n          // }\r\n\r\n          if (allSelected) {\r\n            const datasetAllDefault = {\r\n              label: 'Inverter Average',\r\n              borderColor: '#0400ff',\r\n              pointBackgroundColor: 'transparent',\r\n              pointBorderColor: 'transparent',\r\n              backgroundColor: 'transparent',\r\n            }\r\n            const dataset1All = {\r\n              ...datasetAllDefault,\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taWindSpeed;\r\n                      }),\r\n            }\r\n            const dataset2All1 = {\r\n              ...datasetAllDefault,\r\n              label: 'Inverter Average Temperature',\r\n              yAxisID: 'yTemperature',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taTemperature;\r\n                      }),\r\n            }\r\n            // const dataset3All = {\r\n            //   ...datasetAllDefault,\r\n            //   data: responseData.graphs[0].data.map( (x,i) => {\r\n            //             return x.taWindDirection;\r\n            //           }),\r\n            // }\r\n            // const dataset4All = {\r\n            //   ...datasetAllDefault,\r\n            //   data: responseData.graphs[0].data.map( (x,i) => {\r\n            //             return x.taTurbulenceIntensity;\r\n            //           }),\r\n            // }\r\n            graphData1.datasets.push(dataset1All)\r\n            graphData2.datasets.push(dataset2All1)\r\n          }\r\n\r\n\r\n          responseData.graphs[0].gen_code.forEach((gen,index) => {\r\n            const datasetDefault = {\r\n              label:  gen,\r\n              borderColor: generatorColors[gen],\r\n              pointBackgroundColor: 'transparent',\r\n              pointBorderColor: 'transparent',\r\n              backgroundColor: 'transparent',\r\n            };\r\n            const dataset1 = {\r\n              ...datasetDefault,\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                return x.productionMwh[index];\r\n              })\r\n            };\r\n            graphData1.datasets.push(dataset1);\r\n          });\r\n\r\n          setLineChartOneData(graphData1)\r\n          setLineChartTwoData(graphData2)\r\n\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (response && response.error) {\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n        }\r\n        else if (!dataLoaded && response  && !response.error) {\r\n\r\n          if (response.generators != null) {\r\n            setGenerators(response.generators);\r\n            // setSelectedGenerators(response.generators.map((gen) => (gen.id)));\r\n            let colorIndex = 0\r\n            response.generators.forEach((gen) => {\r\n              generatorColors[gen.code] = colors[colorIndex%colors.length];\r\n              setGeneratorColors(generatorColors);\r\n              colorIndex++\r\n            });\r\n          }\r\n\r\n          setGeneratorsLoaded(true);\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const selectGenerator = (id) => {\r\n\r\n    let newSelected = selectedGenerators;\r\n    newSelected = newSelected.includes(id)\r\n                          ? newSelected.filter(i => i !== id) // remove item\r\n                          : [ ...newSelected, id ]; // add item\r\n    setSelectedGenerators(newSelected.sort());\r\n  }\r\n\r\n  const filterGenerators = () => {\r\n\r\n    setDataLoaded(false);\r\n    setGeneratorsSelected(false);\r\n    setFilterSubmitted(true);\r\n    if (selectedGenerators.length > 0) {\r\n      setLoading(true);\r\n      setGeneratorsSelected(true);\r\n      fetchData(dateRange);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const options =  {\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: true\r\n    },\r\n    elements: {\r\n      line: {\r\n          tension: .4\r\n      }\r\n    },\r\n  }\r\n\r\n  const options1 = {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + ' m/s';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const options2 =  {\r\n    ...options,\r\n    stacked: false,\r\n    scales: {\r\n      yTemperature: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'left',\r\n      },\r\n      yAirDensity: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'right',\r\n        grid: {\r\n          drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            let unit = tooltipItem.dataset.yAxisID === \"yAirDensity\" ? ' kg/m3' : ' °C'\r\n            let decimals = tooltipItem.dataset.yAxisID === \"yAirDensity\" ? 2 : 1\r\n            let label = tooltipItem.dataset.yAxisID === \"yAirDensity\" ? 'Air Density: ' : 'Temperature: '\r\n            return label + round(tooltipItem.raw,decimals) + unit;\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  const options3 = {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + '°';\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n          max: 360,\r\n          ticks: {\r\n              stepSize: 45,\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  const options4 = {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + ' %';\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n\r\n  return (\r\n\r\n      <CCard>\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"4\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Climate - Trends\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n\r\n            <CCol sm=\"8\" className=\"text-right d-flex flex-center flex-justify-end\">\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:1.2}}>Period</h6>\r\n              <DateFilter options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); }} />\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n          <CRow className={\"py-3 mb-4 mx-0 bg-light\"} style={{borderRadius:\"3px\"}}>\r\n            <CCol sm=\"10\" className={\"d-flex \"} >\r\n              <h6 className=\"mx-2 my-2 pt-1\" style={{lineHeight:1.2,minWidth:'110px'}}>Select turbines:</h6>   \r\n              {generatorsLoaded ? \r\n                <div>\r\n                  <CButton \r\n                    style={{backgroundColor:'#f32e2e',color: 'white'}} \r\n                    className={(metMastSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                    onClick={() => setMetMastSelected(!metMastSelected)}\r\n                    >\r\n                    Met\r\n                  </CButton>\r\n                  <CButton \r\n                    style={{backgroundColor:'#0400ff',color: 'white'}} \r\n                    className={(allSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                    onClick={() => setAllSelected(!allSelected)}\r\n                    >\r\n                    ALL\r\n                  </CButton>\r\n                  { generators.map((gen, index) => (  \r\n                    <CButton \r\n                      style={{backgroundColor:generatorColors[gen.code],color: 'white'}} \r\n                      className={(selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                      onClick={() => selectGenerator(gen.id)} \r\n                      id={gen.id}\r\n                      >\r\n                        {gen.code}\r\n                    </CButton>\r\n                  )) }\r\n                </div>\r\n                :\r\n                <CSpinner \r\n                  size=\"sm\"\r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              }\r\n            </CCol>\r\n            <CCol sm=\"2\" className=\"text-right d-flex flex-end flex-justify-end \">\r\n              <CButton color=\"primary\" className=\"mx-2 mb-1\" onClick={() => filterGenerators()} >Submit</CButton>\r\n            </CCol>\r\n        </CRow>\r\n\r\n        { generatorsSelected ?\r\n\r\n          <div>\r\n\r\n            {!loading || dataLoadError ? \r\n\r\n              <div>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Wind Speed</h4>\r\n                    <div>m/s</div>\r\n                    <Line\r\n                      data={lineChartOneData}\r\n                      options={options1}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\">Temperature and Air Density</h4>\r\n                    <div className='d-flex'>\r\n                      <div className=\"text-left\" style={{width: '50%'}}>°C</div>\r\n                      <div className=\"text-right\" style={{width: '50%'}}>kg/m3</div>\r\n                    </div>\r\n                    <Line \r\n                      data={lineChartTwoData}\r\n                      options={options2} />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-3'}>\r\n                  <CCol xs=\"12\">\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Wind Direction</h4>\r\n                    <div>Degrees</div>\r\n                    <Line\r\n                      data={lineChartThreeData}\r\n                      options={options3}\r\n                    />\r\n                  </CCol>\r\n                  <CCol xs=\"12\" className={'mt-4'}>\r\n                    <CCard className={'pl-3 pr-2'} style={{maxWidth: '480px', marginLeft: 'auto', marginRight: 'auto'}}>\r\n                      <CCardBody>\r\n                        <CRow>\r\n                          <CCol sm=\"6\" xs=\"12\">\r\n                            <CLabel className={'w-100 mb-0'}>0-45 North to Northeast</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>45-90 NorthEast to East</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 90-135 East to SouthEast</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>135-180 SouthEast to South</CLabel>\r\n                          </CCol>\r\n                          <CCol sm=\"6\" xs=\"12\">\r\n                            <CLabel className={'w-100 mb-0'}> 180-225 South to SouthWest</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>225-270 SouthWest to West</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 270-315 West to NorthWest</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 315-360 NorthWest to North</CLabel>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                    \r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Turbulence Intensity</h4>\r\n                    <div>%</div>\r\n                    <Line\r\n                      data={lineChartFourData}\r\n                      options={options4}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n\r\n          </div>\r\n\r\n        :\r\n\r\n        <div>\r\n          { filterSubmitted &&\r\n            <CRow>\r\n              <CCol className=\"text-center\">\r\n                Select one or more generators\r\n              </CCol>\r\n            </CRow>\r\n          }\r\n        </div>\r\n\r\n}\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n  )\r\n}\r\n\r\nexport default SolarClimateTrends\r\n"]},"metadata":{},"sourceType":"module"}