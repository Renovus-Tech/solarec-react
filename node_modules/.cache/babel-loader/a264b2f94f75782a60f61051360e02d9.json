{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\alarms\\\\alarms.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CDataTable, CRow, CCol, CSpinner, CSelect } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, round, formatDate, getDateLabel } from '../../../helpers/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nuseEffect(function () {\n  loadGenerators();\n}, []);\n\nvar loadGenerators = function loadGenerators() {\n  DataAPI({\n    'endpoint': 'admin/locations/current',\n    'method': 'GET'\n  }).then(function (response) {\n    if (!dataLoaded && response && !response.error) {\n      setGenerator(response.generators[0].id);\n      setGenerators(response.generators);\n      fetchData({\n        period: dateRange,\n        generator: response.generators[0].id\n      });\n    }\n  });\n};\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState('12w'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateRange = _useState2[0],\n      setDateRange = _useState2[1];\n\n  var _useState3 = useState('week'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generators = _useState6[0],\n      setGenerators = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      generator = _useState8[0],\n      setGenerator = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataLoadError = _useState14[0],\n      setDataLoadError = _useState14[1];\n\n  var _useState15 = useState({\n    items: [],\n    fields: []\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      tablehData = _useState16[0],\n      setTablehData = _useState16[1];\n\n  var _useState17 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      graphData = _useState18[0],\n      setGraphData = _useState18[1];\n\n  var fetchData = function fetchData() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        groupBy = options.groupBy,\n        generator = options.generator;\n    var body = {};\n    if (generator && generator !== '0') body.generators = [generator];\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    setLoading(true);\n    DataAPI({\n      'endpoint': 'chart/alarms',\n      'body': body\n    }).then(function (responseData) {\n      setLoading(false);\n\n      if (responseData.error) {\n        setDataLoadError(true);\n\n        if (responseData.error.message) {\n          return alert(responseData.error.message);\n        } else {\n          return alert(responseData.error);\n        }\n      } // const dataKeys = ['from', 'to', ...(responseData.dataKeys.map(x => {return x.replace('.0','')}))];\n      // const alarms = responseData.data.map((d) => {\n      //   d.from = formatDate(d.from);\n      //   d.to = formatDate(d.to);\n      //   d.alarms = d.alarms.map((alarm, index) => {\n      //     const rAlarm = {};\n      //     d[responseData.dataKeys[index].replace('.0','')] = round(alarm)+'%'\n      //   });\n      //   delete d.alarms;\n      //   return d;\n      // });\n      // setTablehData({\n      //   items: alarms,\n      //   fields: dataKeys\n      // })\n\n\n      var data = {\n        labels: [],\n        datasets: []\n      };\n      var labels = [];\n      var colors = ['#003f5c', '#374c80', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600', '#d9d4d4', '#e9e9e9'];\n      responseData.data.forEach(function (rD, index) {\n        var rDfrom = formatDate(rD.from);\n        var rDto = formatDate(rD.to);\n        var label = groupBy == \"day\" ? \"\".concat(rDfrom) : \"\".concat(rDfrom, \" - \").concat(rDto);\n        data.labels.push(label);\n      });\n      responseData.dataKeys.forEach(function (dK, index) {\n        if (dK != 'total' && dK != 'turbineOK') {\n          var dataset = {\n            label: responseData.dataKeys[index],\n            backgroundColor: colors[index],\n            data: []\n          };\n          responseData.data.forEach(function (rD, index2) {\n            rD.alarms.forEach(function (alarm, index3) {\n              if (index == index3) {\n                dataset.data.push(alarm);\n              }\n            });\n          });\n          data.datasets.push(dataset);\n        }\n      });\n      setGraphData(data);\n    });\n  };\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerators(response.generators);\n        fetchData({\n          period: dateRange,\n          groupBy: groupBy\n        });\n      }\n    });\n  };\n\n  var optionsStackedBar = {\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Alarms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"9\",\n          className: \"text-right d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n              fetchData({\n                period: dateRange,\n                groupBy: groupBy,\n                generator: ev.target.value\n              });\n            },\n            custom: true,\n            name: \"ccmonth\",\n            id: \"ccmonth\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"All generators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, _this), generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '60px'\n            },\n            children: \"Group by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            value: groupBy,\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGroupBy(ev.target.value);\n              fetchData({\n                period: dateRange,\n                groupBy: ev.target.value\n              });\n            },\n            custom: true,\n            name: \"ccmonth\",\n            id: \"ccmonth\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"day\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              selected: true,\n              children: \"Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['y', 'cm', 'cy', '12w', '12m', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n              fetchData({\n                period: value,\n                groupBy: groupBy\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, _this), !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ml-2\",\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n        options: optionsStackedBar,\n        data: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n        className: \"text-center d-block\",\n        style: {\n          textTransform: 'capitalize'\n        },\n        children: groupBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }, _this) : /*#__PURE__*/_jsxDEV(CCardBody, {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CSpinner, {\n        className: \"loading-spinner\",\n        color: \"#321fdb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"7bSEdxhVvZgTcDPwyaI4au5w0s8=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/alarms/alarms.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CDataTable","CRow","CCol","CSpinner","CSelect","DocsLink","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","DataAPI","DateFilter","round","formatDate","getDateLabel","register","loadGenerators","then","response","dataLoaded","error","setGenerator","generators","id","setGenerators","fetchData","period","dateRange","generator","Charts","setDateRange","groupBy","setGroupBy","setDataLoaded","loading","setLoading","dataLoadError","setDataLoadError","items","fields","tablehData","setTablehData","labels","datasets","graphData","setGraphData","options","body","split","length","from","to","responseData","message","alert","data","colors","forEach","rD","index","rDfrom","rDto","label","push","dataKeys","dK","dataset","backgroundColor","index2","alarms","alarm","index3","optionsStackedBar","responsive","scales","x","stacked","y","lineHeight","minWidth","ev","target","value","map","oGenerator","code","textTransform","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CDataTable,\r\n  CRow,\r\n  CCol,\r\n  CSpinner,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {DateFilter, round, formatDate, getDateLabel} from '../../../helpers/utils.js'\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nuseEffect(() => {\r\n  loadGenerators();\r\n}, []);\r\n\r\nconst loadGenerators = () => {\r\n\r\n  DataAPI({\r\n    'endpoint': 'admin/locations/current',\r\n    'method': 'GET'\r\n  }).then(\r\n    response => {\r\n      \r\n      if (!dataLoaded && response  && !response.error) {\r\n\r\n        setGenerator(response.generators[0].id);\r\n        setGenerators(response.generators);\r\n\r\n        fetchData({period: dateRange,  generator: response.generators[0].id});\r\n\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nconst Charts = () => {\r\n\r\n  const [dateRange, setDateRange] = useState('12w');\r\n  const [groupBy, setGroupBy] = useState('week');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generator, setGenerator] = useState(null);\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n\r\n  const [tablehData, setTablehData] = useState({\r\n    items: [],\r\n    fields: []\r\n  });\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  const fetchData = (options = {}) => {\r\n\r\n    const {period, groupBy, generator} = options\r\n\r\n    const body = {}\r\n\r\n    if (generator && generator !== '0') body.generators = [generator];\r\n    \r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy\r\n\r\n    setLoading(true);\r\n\r\n    DataAPI(\r\n      {\r\n      'endpoint': 'chart/alarms',\r\n      'body': body\r\n    }).then(function (responseData) {\r\n\r\n      setLoading(false);\r\n      if (responseData.error) {\r\n        setDataLoadError(true);\r\n          if (responseData.error.message) {\r\n          return(alert(responseData.error.message))\r\n          } else {\r\n          return(alert(responseData.error)) \r\n          }\r\n      }\r\n\r\n      // const dataKeys = ['from', 'to', ...(responseData.dataKeys.map(x => {return x.replace('.0','')}))];\r\n\r\n      // const alarms = responseData.data.map((d) => {\r\n\r\n      //   d.from = formatDate(d.from);\r\n      //   d.to = formatDate(d.to);\r\n        \r\n      //   d.alarms = d.alarms.map((alarm, index) => {\r\n\r\n      //     const rAlarm = {};\r\n\r\n      //     d[responseData.dataKeys[index].replace('.0','')] = round(alarm)+'%'\r\n\r\n      //   });\r\n      //   delete d.alarms;\r\n      //   return d;\r\n      // });\r\n\r\n      // setTablehData({\r\n      //   items: alarms,\r\n      //   fields: dataKeys\r\n      // })\r\n\r\n      const data = {\r\n        labels: [],\r\n        datasets: []\r\n      }\r\n      let labels = [];\r\n\r\n      const colors = [\r\n        '#003f5c',\r\n        '#374c80',\r\n        '#7a5195',\r\n        '#bc5090',\r\n        '#ef5675',\r\n        '#ff764a',\r\n        '#ffa600',\r\n        '#d9d4d4',\r\n        '#e9e9e9'\r\n      ];\r\n\r\n\r\n\r\n      responseData.data.forEach((rD,index) => {\r\n        const rDfrom = formatDate(rD.from);\r\n        const rDto = formatDate(rD.to);\r\n        const label = (groupBy == \"day\") ? `${rDfrom}` : `${rDfrom} - ${rDto}`\r\n        data.labels.push(label);\r\n      });\r\n\r\n        \r\n        responseData.dataKeys.forEach((dK,index) => {\r\n          if (dK != 'total' && dK != 'turbineOK') {\r\n            const dataset = {\r\n              label: responseData.dataKeys[index],\r\n              backgroundColor: colors[index],\r\n              data: []\r\n            };\r\n            responseData.data.forEach((rD,index2) => {\r\n              rD.alarms.forEach((alarm,index3) => {\r\n                if (index == index3) {\r\n                  dataset.data.push(alarm);\r\n                }\r\n              });\r\n            });\r\n            data.datasets.push(dataset);\r\n          }\r\n        });\r\n\r\n      setGraphData(data)\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const loadGenerators = () => {\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        if (!dataLoaded && response  && !response.error) {\r\n          setGenerators(response.generators);\r\n          fetchData({period: dateRange, groupBy: groupBy});\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const optionsStackedBar = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n      },\r\n      y: {\r\n        stacked: true,\r\n      },\r\n    },\r\n  };\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"3\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Alarms\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n              </CCol>\r\n            \r\n              <CCol sm=\"9\" className=\"text-right d-flex\">\r\n                <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4,minWidth:'64px'}}>Generator</h6>\r\n                <CSelect disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); fetchData({period: dateRange, groupBy: groupBy, generator: ev.target.value});}} custom name=\"ccmonth\" id=\"ccmonth\">\r\n                  <option value=\"0\">All generators</option>\r\n                {generators.map((oGenerator) => (\r\n                                    <option value={oGenerator.id}>\r\n                                      {oGenerator.code}\r\n                                    </option>\r\n                                  ))}</CSelect>\r\n                <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n                <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); fetchData({period: dateRange, groupBy: ev.target.value});}} custom name=\"ccmonth\" id=\"ccmonth\">\r\n                    <option value=\"day\">Day</option>\r\n                    <option value=\"week\" selected>Week</option>\r\n                    <option value=\"month\">Month</option>\r\n                </CSelect>\r\n                <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','12w','12m','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); fetchData({period: value, groupBy: groupBy});}} />\r\n            </CCol>\r\n          </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n        {!loading || dataLoadError\r\n                    ? \r\n          <CCardBody>\r\n            \r\n\r\n          <div class=\"ml-2\">%</div>\r\n          <Bar options={optionsStackedBar} data={graphData} />\r\n          <CRow className=\"text-center d-block\" style={{textTransform: 'capitalize'}}>{groupBy}</CRow>\r\n\r\n\r\n          {/* <CDataTable\r\n              striped\r\n              items={tablehData.items}\r\n              fields={tablehData.fields}\r\n            /> */}\r\n\r\n          </CCardBody>\r\n          :\r\n          <CCardBody style={{textAlign:'center'}}>\r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          </CCardBody>\r\n        }\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}