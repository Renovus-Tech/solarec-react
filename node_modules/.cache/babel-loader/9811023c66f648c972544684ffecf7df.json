{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\wind\\\\ai-analytics\\\\energy-generation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardHeader, CRow, CCol, CButton, CSelect, CDataTable, CBadge, CSpinner, CImg } from '@coreui/react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport DataAPI from '../../../../helpers/DataAPI.js';\nimport { formatNumber, formatDate, round, getDateLabel, DateFilter } from '../../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../../helpers/sessionCookie.js';\nimport { Line } from 'react-chartjs-2';\nimport ChartLoading from '../../../others/ChartLoading.js';\nimport img from '../../../../assets/img-energy-generation.png';\nimport res from './res_short.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EnergyGeneration = function EnergyGeneration() {\n  _s();\n\n  ChartJS.register(ArcElement, LineElement, BarElement);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      generator = _useState2[0],\n      setGenerator = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generators = _useState4[0],\n      setGenerators = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generatorsLoaded = _useState6[0],\n      setGeneratorsLoaded = _useState6[1];\n\n  var _useState7 = useState('cm'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      period = _useState8[0],\n      setPeriod = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataLoaded = _useState12[0],\n      setDataLoaded = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataLoadError = _useState14[0],\n      setDataLoadError = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var _useState17 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      graphData = _useState18[0],\n      setGraphData = _useState18[1];\n\n  useEffect(function () {\n    loadGenerators(); // loadStaticData();\n  }, []); // const loadStaticData = () => {\n  //   const data = res.data;\n  //   const graphData = {\n  //     labels: data.evolution.map((point, i) => { return point.x }),\n  //     datasets: [\n  //       {\n  //         label: 'Data',\n  //         data: data.evolution.map((point, i) => { return point.y * 100 }),\n  //         borderColor: '#bc5090',\n  //         backgroundColor: 'transparent',\n  //         borderWidth: 1,\n  //         pointRadius: 0\n  //       },\n  //       {\n  //         label: 'Outlier Limit Top',\n  //         data: data.evolution.map((point, i) => { return 80 }),\n  //         borderColor: 'red',\n  //         backgroundColor: 'transparent',\n  //         borderWidth: 1.2,\n  //         pointRadius: 0\n  //       },\n  //       {\n  //         label: 'Outlier Limit Bottom',\n  //         data: data.evolution.map((point, i) => { return 20 }),\n  //         borderColor: 'red',\n  //         backgroundColor: 'transparent',\n  //         borderWidth: 1.2,\n  //         pointRadius: 0\n  //       },\n  //       {\n  //         label: 'Median Performance',\n  //         data: data.evolution.map((point, i) => { return 50 }),\n  //         borderColor: '#42e428',\n  //         backgroundColor: 'transparent',\n  //         borderWidth: 1.2,\n  //         pointRadius: 0\n  //       }\n  //     ],\n  //   }\n  //   setGraphData(graphData);\n  // }\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n    body.groupBy = 'day';\n    if (generator) body.generators = [generator];\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    DataAPI({\n      'endpoint': 'wind/performanceIndex',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setDataLoaded(true);\n      setData(response);\n      var data = {\n        labels: [],\n        datasets: [{\n          label: 'Outlier Limit Top',\n          data: response.data[0].data.graph.map(function (x) {\n            return 80;\n          }),\n          //data.evolution.map((point, i) => { return 80 }),\n          borderColor: 'red',\n          backgroundColor: 'transparent',\n          borderWidth: 1.2,\n          pointRadius: 0\n        }, {\n          label: 'Outlier Limit Bottom',\n          data: response.data[0].data.graph.map(function (x) {\n            return 20;\n          }),\n          //data.evolution.map((point, i) => { return 20 }),\n          borderColor: 'red',\n          backgroundColor: 'transparent',\n          borderWidth: 1.2,\n          pointRadius: 0\n        }, {\n          label: 'Median Performance',\n          data: response.data[0].data.graph.map(function (x) {\n            return 50;\n          }),\n          //data.evolution.map((point, i) => { return 50 }),\n          borderColor: '#42e428',\n          backgroundColor: 'transparent',\n          borderWidth: 1.2,\n          pointRadius: 0\n        }]\n      };\n      response.data.forEach(function (rDs) {\n        var up = function up(ctx, value) {\n          return ctx.p0.parsed.y < ctx.p1.parsed.y ? value : undefined;\n        };\n\n        var down = function down(ctx, value) {\n          return ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;\n        };\n\n        var dataset = {\n          label: 'Data',\n          data: [],\n          //rDs.evolution.map((point, i) => { return point.y * 100 }),\n          borderColor: '#bc5090',\n          backgroundColor: 'transparent',\n          borderWidth: 1,\n          pointRadius: 0,\n          segment: {\n            borderColor: function borderColor(ctx) {\n              return up(ctx, 'green') || down(ctx, 'red');\n            }\n          }\n        };\n        rDs.data.graph.forEach(function (rD) {\n          // const label = (groupBy == \"day\") ? `${formatDate(rD.from)}` : `${formatDate(rD.from)} - ${formatDate(rD.to)}`\n          // dataset.labels.push(label)\n          dataset.data.push(rD.performance); // let color = 'green';\n          // if (rD.performance > 100)\n          //   color = 'red';\n          // dataset.borderColor.push(color);\n        }); // dataset.labels.reverse();\n\n        dataset.data.reverse();\n        data.datasets.push(dataset);\n      });\n      response.data[0].data.graph.forEach(function (rD) {\n        var label = \"\".concat(formatDate(rD.from, 'noyear'), \" - \").concat(formatDate(rD.to, 'noyear'));\n        data.labels.push(label);\n      });\n      data.labels.reverse();\n      setGraphData(data);\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if (!dataLoaded && response && !response.error) {\n        if (response.generators != null) {\n          setGenerators(response.generators);\n          setGenerator(response.generators[0].id);\n        }\n\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  var options = {\n    responsive: true,\n    options: {\n      animation: false,\n      spanGaps: true\n    },\n    scales: {\n      y: {\n        suggestedMin: 10,\n        suggestedMax: 90\n      }\n    },\n    tooltips: {\n      enabled: false\n    },\n    elements: {\n      line: {\n        tension: .4\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return 'Percentile of performance: ' + round(tooltipItem.raw, 1) + \" %\";\n          }\n        }\n      } // beforeRender: (x, options) => {\n      //   const c = x.chart;\n      //   const dataset = x.data.datasets[0];\n      //   const yScale = x.scales['y-axis-0'];\n      //   const yPos = yScale.getPixelForValue(0);\n      //   const gradientFill = c.ctx.createLinearGradient(0, 0, 0, c.height);\n      //   gradientFill.addColorStop(0, 'rgb(86,188,77)');\n      //   gradientFill.addColorStop(yPos / c.height, 'rgb(86,188,77)');\n      //   gradientFill.addColorStop(yPos / c.height, 'rgb(229,66,66)');\n      //   gradientFill.addColorStop(1, 'rgb(229,66,66)');\n      //   const model = x.data.datasets[0]._meta[Object.keys(dataset._meta)[0]].dataset._model;\n      //   model.borderColor = gradientFill;\n      // },\n\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"AI Analytics - Energy Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(period)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          className: \"text-right d-flex flex-center flex-justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Turbine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            className: 'input-xs',\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n            },\n            custom: true,\n            name: \"generator\",\n            id: \"generator\",\n            children: generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 35\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            className: 'input-md',\n            value: period,\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setPeriod(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading || !generatorsLoaded,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(CRow, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"pb-2 mb-4 text-center\",\n            children: \"Wind Turbines for investigation/resolution: 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Line // redraw \n          , {\n            data: graphData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(CRow, {\n        style: {\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(CSpinner, {\n          className: \"loading-spinner\",\n          color: \"#321fdb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(EnergyGeneration, \"z9+0nF8C/bqg1sBaCkLPLv5Trpk=\");\n\n_c = EnergyGeneration;\nexport default EnergyGeneration;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnergyGeneration\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/wind/ai-analytics/energy-generation.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardHeader","CRow","CCol","CButton","CSelect","CDataTable","CBadge","CSpinner","CImg","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","DataAPI","formatNumber","formatDate","round","getDateLabel","DateFilter","setCookie","getCookie","Line","ChartLoading","img","res","EnergyGeneration","register","ArcElement","LineElement","generator","setGenerator","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","period","setPeriod","data","setData","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","labels","datasets","graphData","setGraphData","loadGenerators","fetchData","body","location","groupBy","split","length","from","to","then","response","error","message","alert","label","graph","map","x","borderColor","backgroundColor","borderWidth","pointRadius","forEach","rDs","up","ctx","value","p0","parsed","y","p1","undefined","down","dataset","segment","rD","push","performance","reverse","window","reload","id","options","responsive","animation","spanGaps","scales","suggestedMin","suggestedMax","tooltips","enabled","elements","line","tension","plugins","legend","display","tooltip","callbacks","tooltipItem","raw","lineHeight","minWidth","ev","target","oGenerator","code","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSpinner,\r\n  CImg,\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nimport DataAPI from '../../../../helpers/DataAPI.js'\r\nimport {formatNumber, formatDate, round, getDateLabel, DateFilter} from '../../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../../helpers/sessionCookie.js'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport ChartLoading from '../../../others/ChartLoading.js'\r\n\r\nimport img from '../../../../assets/img-energy-generation.png'\r\n\r\nimport res from './res_short.json';\r\n\r\n\r\nconst EnergyGeneration = () => {\r\n\r\n  ChartJS.register(\r\n    ArcElement,\r\n    LineElement,\r\n  BarElement,\r\n  );\r\n\r\n  const [generator, setGenerator] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [period, setPeriod] = useState('cm');\r\n  const [data, setData] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n    // loadStaticData();\r\n  }, []);\r\n\r\n\r\n  // const loadStaticData = () => {\r\n\r\n  //   const data = res.data;\r\n  //   const graphData = {\r\n  //     labels: data.evolution.map((point, i) => { return point.x }),\r\n  //     datasets: [\r\n  //       {\r\n  //         label: 'Data',\r\n  //         data: data.evolution.map((point, i) => { return point.y * 100 }),\r\n  //         borderColor: '#bc5090',\r\n  //         backgroundColor: 'transparent',\r\n  //         borderWidth: 1,\r\n  //         pointRadius: 0\r\n  //       },\r\n  //       {\r\n  //         label: 'Outlier Limit Top',\r\n  //         data: data.evolution.map((point, i) => { return 80 }),\r\n  //         borderColor: 'red',\r\n  //         backgroundColor: 'transparent',\r\n  //         borderWidth: 1.2,\r\n  //         pointRadius: 0\r\n  //       },\r\n  //       {\r\n  //         label: 'Outlier Limit Bottom',\r\n  //         data: data.evolution.map((point, i) => { return 20 }),\r\n  //         borderColor: 'red',\r\n  //         backgroundColor: 'transparent',\r\n  //         borderWidth: 1.2,\r\n  //         pointRadius: 0\r\n  //       },\r\n  //       {\r\n  //         label: 'Median Performance',\r\n  //         data: data.evolution.map((point, i) => { return 50 }),\r\n  //         borderColor: '#42e428',\r\n  //         backgroundColor: 'transparent',\r\n  //         borderWidth: 1.2,\r\n  //         pointRadius: 0\r\n  //       }\r\n  //     ],\r\n  //   }\r\n  //   setGraphData(graphData);\r\n  // }\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.location = getCookie('location');\r\n    body.groupBy = 'day';\r\n    if (generator) body.generators = [generator];\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n\r\n    DataAPI({\r\n      'endpoint': 'wind/performanceIndex',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        setDataLoaded(true);\r\n        setData(response);\r\n        \r\n\r\n        const data = {\r\n          labels: [],\r\n          datasets: [\r\n            {\r\n              label: 'Outlier Limit Top',\r\n              data: response.data[0].data.graph.map((x) => {return 80}),//data.evolution.map((point, i) => { return 80 }),\r\n              borderColor: 'red',\r\n              backgroundColor: 'transparent',\r\n              borderWidth: 1.2,\r\n              pointRadius: 0\r\n            },\r\n            {\r\n              label: 'Outlier Limit Bottom',\r\n              data: response.data[0].data.graph.map((x) => {return 20}),//data.evolution.map((point, i) => { return 20 }),\r\n              borderColor: 'red',\r\n              backgroundColor: 'transparent',\r\n              borderWidth: 1.2,\r\n              pointRadius: 0\r\n            },\r\n            {\r\n              label: 'Median Performance',\r\n              data: response.data[0].data.graph.map((x) => {return 50}),//data.evolution.map((point, i) => { return 50 }),\r\n              borderColor: '#42e428',\r\n              backgroundColor: 'transparent',\r\n              borderWidth: 1.2,\r\n              pointRadius: 0\r\n            }\r\n          ]\r\n        }\r\n\r\n        response.data.forEach((rDs) => {\r\n\r\n          const up = (ctx,value) => ctx.p0.parsed.y < ctx.p1.parsed.y ? value : undefined;\r\n          const down = (ctx,value) => ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;\r\n\r\n          const dataset = {\r\n            label: 'Data',\r\n            data: [],//rDs.evolution.map((point, i) => { return point.y * 100 }),\r\n            borderColor: '#bc5090',\r\n            backgroundColor: 'transparent',\r\n            borderWidth: 1,\r\n            pointRadius: 0,\r\n            segment: {\r\n              borderColor: ctx => up(ctx,'green') || down(ctx,'red')\r\n            }\r\n          };\r\n          rDs.data.graph.forEach((rD) => {\r\n            // const label = (groupBy == \"day\") ? `${formatDate(rD.from)}` : `${formatDate(rD.from)} - ${formatDate(rD.to)}`\r\n            // dataset.labels.push(label)\r\n            dataset.data.push(rD.performance);\r\n            // let color = 'green';\r\n            // if (rD.performance > 100)\r\n            //   color = 'red';\r\n            // dataset.borderColor.push(color);\r\n          });\r\n\r\n          // dataset.labels.reverse();\r\n          dataset.data.reverse();\r\n          data.datasets.push(dataset);\r\n\r\n        });\r\n\r\n        response.data[0].data.graph.forEach((rD) => {\r\n          const label = `${formatDate(rD.from, 'noyear')} - ${formatDate(rD.to, 'noyear')}`\r\n          data.labels.push(label);\r\n        });\r\n\r\n        data.labels.reverse();\r\n\r\n        setGraphData(data);\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (response && response.error) {\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n        }\r\n        else if (!dataLoaded && response  && !response.error) {\r\n\r\n          if (response.generators != null) {\r\n            setGenerators(response.generators);\r\n            setGenerator(response.generators[0].id);\r\n          }\r\n          setGeneratorsLoaded(true)\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const options = {\r\n    responsive: true,\r\n    options: {\r\n      animation: false,\r\n      spanGaps: true\r\n    },\r\n    scales: {\r\n      y:\r\n        {\r\n          suggestedMin: 10,\r\n          suggestedMax: 90,\r\n        }\r\n    },\r\n    tooltips: {\r\n      enabled: false\r\n    },\r\n    elements: {\r\n      line: {\r\n          tension: .4\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n              return 'Percentile of performance: ' + round(tooltipItem.raw,1) + \" %\";\r\n          }\r\n        }\r\n      },\r\n      // beforeRender: (x, options) => {\r\n      //   const c = x.chart;\r\n      //   const dataset = x.data.datasets[0];\r\n      //   const yScale = x.scales['y-axis-0'];\r\n      //   const yPos = yScale.getPixelForValue(0);\r\n    \r\n      //   const gradientFill = c.ctx.createLinearGradient(0, 0, 0, c.height);\r\n      //   gradientFill.addColorStop(0, 'rgb(86,188,77)');\r\n      //   gradientFill.addColorStop(yPos / c.height, 'rgb(86,188,77)');\r\n      //   gradientFill.addColorStop(yPos / c.height, 'rgb(229,66,66)');\r\n      //   gradientFill.addColorStop(1, 'rgb(229,66,66)');\r\n    \r\n      //   const model = x.data.datasets[0]._meta[Object.keys(dataset._meta)[0]].dataset._model;\r\n      //   model.borderColor = gradientFill;\r\n      // },\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n      <CCard className=\"mb-4\">\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              AI Analytics - Energy Generation\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(period)}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"text-right d-flex flex-center flex-justify-end\">\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Turbine</h6>\r\n              <CSelect className={'input-xs'} disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); }} custom name=\"generator\" id=\"generator\">\r\n              {generators.map((oGenerator) => (\r\n                                  <option value={oGenerator.id}>\r\n                                    {oGenerator.code}\r\n                                  </option>\r\n                                ))}</CSelect>\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter className={'input-md'} value={period} options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setPeriod(value); }} />\r\n              <CButton color=\"primary\" disabled={loading || !generatorsLoaded} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n            </CCol>\r\n           </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n          {(!loading || dataLoadError) ?\r\n            <CRow className=\"mb-4\">\r\n              <CCol>\r\n                <h4 className=\"pb-2 mb-4 text-center\" >Wind Turbines for investigation/resolution: 3</h4>\r\n                <div>Performance</div>\r\n                <Line\r\n                  // redraw \r\n                  data={graphData}\r\n                  options={options}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          :\r\n          <CRow style={{justifyContent:'center'}}>\r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          </CRow>\r\n          }\r\n          \r\n        </CCardBody>\r\n\r\n      </CCard>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default EnergyGeneration\r\n"]},"metadata":{},"sourceType":"module"}