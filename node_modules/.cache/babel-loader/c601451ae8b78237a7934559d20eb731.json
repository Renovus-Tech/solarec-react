{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\power-curve\\\\analysis.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CDataTable, CBadge, CSelect, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle, CSpinner } from '@coreui/react';\nimport { CChartBar } from '@coreui/react-chartjs';\nimport { Chart, Line, Scatter } from 'react-chartjs-2';\nimport Multiselect from 'multiselect-react-dropdown';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, formatDate, formatDate2, round, getDateLabel, formatNumber } from '../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../helpers/sessionCookie.js';\nimport ChartLoading from '../../others/ChartLoading.js';\nimport { func } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData1 = _useState2[0],\n      setTableData1 = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableFields1 = _useState4[0],\n      setTableFields1 = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tableData2 = _useState6[0],\n      setTableData2 = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tableFields2 = _useState8[0],\n      setTableFields2 = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataLoadError = _useState12[0],\n      setDataLoadError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      data = _useState16[0],\n      setData = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      curves = _useState18[0],\n      setCurves = _useState18[1];\n\n  var _useState19 = useState('cm'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      dateRange = _useState20[0],\n      setDateRange = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      generator = _useState22[0],\n      setGenerator = _useState22[1]; // const [filter, setFilter] = useState('');\n\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      windSectors = _useState24[0],\n      setWindSectors = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      generators = _useState26[0],\n      setGenerators = _useState26[1];\n\n  var _useState27 = useState({}),\n      _useState28 = _slicedToArray(_useState27, 2),\n      performance = _useState28[0],\n      setPerformance = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      filtersSelected = _useState30[0],\n      setFiltersSelected = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      times = _useState32[0],\n      setTimes = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      locPower = _useState34[0],\n      setLocPower = _useState34[1];\n\n  var _useState35 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState36 = _slicedToArray(_useState35, 2),\n      graphData = _useState36[0],\n      setGraphData = _useState36[1];\n\n  var _useState37 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      graphData2 = _useState38[0],\n      setGraphData2 = _useState38[1];\n\n  var angles = [\"0-45\", \"45-90\", \"90-135\", \"135-180\", \"180-225\", \"225-270\", \"270-315\", \"315-360\"];\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        generator = options.generator,\n        filter = options.filter,\n        windSectors = options.windSectors;\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n    if (generator) body.generators = [generator];\n    if (windSectors.length > 0) body.angles = windSectors;\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    DataAPI({\n      'endpoint': 'chart/powerCurve',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var generatorData = response.generator && response.generator[0].data;\n      setDataLoaded(true);\n      setData(response);\n\n      if (generatorData && generatorData.hasOwnProperty('curves')) {\n        setCurves(generatorData.curves);\n        refreshChart(generatorData);\n      } else {\n        setCurves([]);\n      }\n\n      if (generatorData) {\n        if (generatorData.hasOwnProperty('dataUse')) processTableData1(generatorData.dataUse);\n        if (generatorData.hasOwnProperty('dataFilteredDueTo')) processTableData2(generatorData.dataFilteredDueTo);\n        if (generatorData.hasOwnProperty('performance')) setPerformance(generatorData.performance);\n      }\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if (!dataLoaded && response && !response.error) {\n        setGenerator(response.generators[0].id);\n        setGenerators(response.generators);\n      }\n    });\n  };\n\n  var processTableData1 = function processTableData1(dataUse) {\n    var tableData = [];\n    dataUse.forEach(function (item) {\n      var appendSymbol = item.info == 'As percentage of time' || item.info == 'As percentage of MWh' ? '%' : '';\n      var decimals = item.info == 'As percentage of time' || item.info == 'As percentage of MWh' ? 1 : 0; // if (item.info == 'As MWh generated') {\n      //   var usedData = (Math.round(item.usedData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      //   var filteredData = (Math.round(item.filteredData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      //   var total = (Math.round(item.total)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      // } else {\n\n      var usedData = formatNumber(round(item.usedData, decimals)) + appendSymbol;\n      var filteredData = formatNumber(round(item.filteredData, decimals)) + appendSymbol;\n      var total = formatNumber(round(item.total, decimals)) + appendSymbol; // }\n\n      tableData.push({\n        '': item.info,\n        'Used Data': usedData,\n        'Filtered Data': filteredData,\n        'Total': total\n      });\n    });\n    setTableData1(tableData);\n    setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\n  };\n\n  var processTableData2 = function processTableData2(dataFilteredDueTo) {\n    var tableData = [];\n    tableData.push({\n      '': dataFilteredDueTo.info,\n      'Missing Data': round(dataFilteredDueTo.missingData) + '%',\n      'Curtailment': round(dataFilteredDueTo.curtailment) + '%',\n      'Alarms, Outliers, Frozen Sensors': round(dataFilteredDueTo.other) + '%',\n      'Total': round(dataFilteredDueTo.total) + '%'\n    });\n    setTableData2(tableData);\n    setTableFields2(['', 'Missing Data', 'Curtailment', 'Alarms, Outliers, Frozen Sensors', 'Total']);\n  };\n\n  var refreshChart = function refreshChart(generatorData) {\n    // if (curves.length==0) return;\n    var curves = generatorData.curves;\n    var performance = generatorData.performance; // Graph 1\n\n    var graphData = {\n      labels: [],\n      datasets: [{\n        label: curves[0].label,\n        showLine: true,\n        // labels: curves[0].x.map((x, i) => ({ x:\"Power: \"+x, y: \"Wind Speed: \"+curves[0].y[i] })),\n        data: curves[0].x.map(function (x, i) {\n          return {\n            x: x,\n            y: curves[0].y[i]\n          };\n        }),\n        backgroundColor: '#374c80'\n      }, {\n        label: curves[2].label,\n        // labels: curves[2].x.map((x, i) => ({ x:\"Power: \"+x, y: \"Wind Speed: \"+curves[2].y[i] })),\n        data: curves[2].x.map(function (x, i) {\n          return {\n            x: x,\n            y: curves[2].y[i]\n          };\n        }),\n        // backgroundColor: '#ffa60091',\n        pointBackgroundColor: curves[2].x.map(function (x, i) {\n          if (curves[2].powerOver99[i] === 1) return '#ff0000b3';\n          return '#ffa60091';\n        })\n      }]\n    };\n    var times = curves[2].time.map(function (t, i) {\n      return t;\n    });\n    setTimes(times);\n    var locPower = curves[2].locPower.map(function (t, i) {\n      return t;\n    });\n    setLocPower(locPower); // Graph 2\n\n    var graphData2 = {\n      labels: [],\n      datasets: []\n    };\n    var dataset2 = {\n      labels: [],\n      label: \"Time percentage\",\n      backgroundColor: '#7a5195',\n      data: []\n    };\n    var max = curves[1].x[curves[1].x.length - 1]; //Math.ceil(Math.max(...curves[2].x));\n\n    var windSpeeds = Array(max - 1 + 1).fill().map(function (_, idx) {\n      return 1 + idx;\n    });\n    var percentages = [];\n    var aux;\n    var qty;\n    var percentage;\n    var qtyTotal = curves[2].x.length;\n    windSpeeds.forEach(function (windSpeed) {\n      aux = curves[2].x.filter(function (x) {\n        return x < windSpeed && x > windSpeed - 1;\n      });\n      qty = aux.length;\n      percentage = (Math.round(qty * 100 / qtyTotal * 100) / 100).toFixed(2);\n      percentages.push(percentage);\n      graphData2.labels.push(windSpeed - 1 + \" - \" + windSpeed);\n    });\n    dataset2.data = percentages;\n    graphData2.datasets.push(dataset2);\n    setGraphData(graphData);\n    setGraphData2(graphData2);\n  };\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n  };\n\n  var filterSubmit = function filterSubmit() {\n    setDataLoaded(false);\n    setFiltersSelected(true);\n    fetchData({\n      generator: generator,\n      period: dateRange,\n      windSectors: windSectors\n    });\n  };\n\n  var performanceFields = ['a', 'b', 'c'];\n  var fields = ['', 'Used Data', 'Filtered Data', 'Total'];\n  var options = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      callbacks: {\n        title: function title(tooltipItem, data) {\n          return tooltipItem[0].label + ' m/s';\n        },\n        label: function label(tooltipItem, data) {\n          return round(tooltipItem.value, 1) + ' %';\n        }\n      }\n    }\n  }; // const optionsBoxPlot = {\n  //   animation: {duration: loading ? 0 : 1000},\n  //   responsive: true,\n  //   legend: {\n  //     position: 'top',\n  //   }\n  // }\n\n  var optionsScatter = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var ret = [];\n            if (tooltipItem.dataset.label != \"Manufacturer curve\") ret.push(formatDate2(times[tooltipItem.dataIndex]));\n            ret.push('Power: ' + formatNumber(round(tooltipItem.raw.y, 1)) + ' kWh');\n            ret.push('Wind Speed: ' + round(tooltipItem.raw.x, 1) + \" m/s\");\n            ret.push('Park Total Production: ' + round(locPower[tooltipItem.dataIndex], 1) + \" kWh\");\n            return ret;\n          }\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 2\n      }\n    }\n  }; // function randomValues(count, min, max) {\n  //   const delta = max - min;\n  //   return Array.from({ length: count }).map(() => Math.random() * delta + min);\n  // }\n  // const boxplotData = {\n  //   // define label tree\n  //   labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  //   datasets: [\n  //     {\n  //       label: \"Dataset 1\",\n  //       backgroundColor: \"rgba(255,0,0,0.5)\",\n  //       borderColor: \"red\",\n  //       borderWidth: 1,\n  //       outlierColor: \"#999999\",\n  //       padding: 10,\n  //       itemRadius: 0,\n  //       data: [\n  //         randomValues(100, 0, 100),\n  //         randomValues(100, 0, 20),\n  //         randomValues(100, 20, 70),\n  //         randomValues(100, 60, 100),\n  //         randomValues(40, 50, 100),\n  //         randomValues(100, 60, 120),\n  //         randomValues(100, 80, 100)\n  //       ]\n  //     },\n  //     {\n  //       label: \"Dataset 2\",\n  //       backgroundColor: \"rgba(0,0,255,0.5)\",\n  //       borderColor: \"blue\",\n  //       borderWidth: 1,\n  //       outlierColor: \"#999999\",\n  //       padding: 10,\n  //       itemRadius: 0,\n  //       data: [\n  //         randomValues(100, 60, 100),\n  //         randomValues(100, 0, 100),\n  //         randomValues(100, 0, 20),\n  //         randomValues(100, 20, 70),\n  //         randomValues(40, 60, 120),\n  //         randomValues(100, 20, 100),\n  //         randomValues(100, 80, 100)\n  //       ]\n  //     }\n  //   ]\n  // };\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Power Curve - Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          className: \"text-right d-flex flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              minWidth: '64px'\n            },\n            children: \"Turbine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            custom: true,\n            name: \"generator\",\n            id: \"generator\",\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n            },\n            children: generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 35\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 1.2\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 1.2,\n              minWidth: '72px'\n            },\n            children: \"Wind sector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"multiselect-container\",\n            children: /*#__PURE__*/_jsxDEV(Multiselect, {\n              disabled: loading,\n              options: angles.map(function (angle) {\n                return {\n                  id: angle,\n                  name: angle\n                };\n              }),\n              onSelect: function onSelect(selectedList) {\n                setWindSectors(selectedList.map(function (angle) {\n                  var angleSplit = angle.id.split(\"-\");\n                  return {\n                    from: angleSplit[0],\n                    to: angleSplit[1]\n                  };\n                }));\n              },\n              onRemove: function onRemove(selectedList) {\n                setWindSectors(selectedList.map(function (angle) {\n                  var angleSplit = angle.id.split(\"-\");\n                  return {\n                    from: angleSplit[0],\n                    to: angleSplit[1]\n                  };\n                }));\n              },\n              displayValue: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        className: \"py-3 mb-4 mx-0 bg-light\",\n        style: {\n          borderRadius: \"3px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          xl: \"10\",\n          md: \"10\",\n          className: \"text-right d-flex flex-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          xl: \"2\",\n          md: \"2\",\n          className: \"text-right d-flex flex-center flex-justify-end px-4 py-2\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            className: \"mx-2\",\n            onClick: function onClick() {\n              return filterSubmit();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, _this), filtersSelected && /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          className: \"text-center\",\n          children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '50px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-left\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Power (KWh)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Scatter, {\n                data: graphData,\n                options: optionsScatter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-1\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Wind speed (m/s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '50px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom text-left\",\n                children: \"Operational data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-left\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Time (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(CChartBar, {\n                datasets: graphData2.datasets,\n                labels: graphData2.labels,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-1\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Wind speed (m/s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, _this) : /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"% data above Reference Power Curve: \", round(performance['Percentage data above manufacturer power curve']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 125\n            }, _this), \"% data below Reference Power Curve: \", round(performance['Percentage data below manufacturer power curve']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 125\n            }, _this), \"Performance index \", round(performance['Performance index']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 77\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 83\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(CSpinner, {\n              className: \"loading-spinner\",\n              color: \"#321fdb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Data Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData1,\n              fields: tableFields1,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 27\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 23\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Reasons for Filtered Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData2,\n              fields: tableFields2,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 27\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 21\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"2k/Uo3Aa2JtlSiJMBiUdmyOdhxQ=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/power-curve/analysis.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CDataTable","CBadge","CSelect","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","CSpinner","CChartBar","Chart","Line","Scatter","Multiselect","DataAPI","DateFilter","formatDate","formatDate2","round","getDateLabel","formatNumber","setCookie","getCookie","ChartLoading","func","Charts","tableData1","setTableData1","tableFields1","setTableFields1","tableData2","setTableData2","tableFields2","setTableFields2","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","data","setData","curves","setCurves","dateRange","setDateRange","generator","setGenerator","windSectors","setWindSectors","generators","setGenerators","performance","setPerformance","filtersSelected","setFiltersSelected","times","setTimes","locPower","setLocPower","labels","datasets","graphData","setGraphData","graphData2","setGraphData2","angles","loadGenerators","fetchData","options","period","filter","body","location","length","split","from","to","then","response","error","message","alert","generatorData","hasOwnProperty","refreshChart","processTableData1","dataUse","processTableData2","dataFilteredDueTo","window","reload","id","tableData","forEach","item","appendSymbol","info","decimals","usedData","filteredData","total","push","missingData","curtailment","other","label","showLine","x","map","i","y","backgroundColor","pointBackgroundColor","powerOver99","time","t","dataset2","max","windSpeeds","Array","fill","_","idx","percentages","aux","qty","percentage","qtyTotal","windSpeed","Math","toFixed","getBadge","status","filterSubmit","performanceFields","fields","animation","duration","legend","display","tooltips","callbacks","title","tooltipItem","value","optionsScatter","plugins","tooltip","ret","dataset","dataIndex","raw","elements","point","radius","minWidth","ev","target","oGenerator","code","lineHeight","angle","name","selectedList","angleSplit","borderRadius","marginBottom","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CSpinner\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartBar\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { Chart, Line, Scatter } from 'react-chartjs-2';\r\n\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, formatDate, formatDate2, round, getDateLabel, formatNumber} from '../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../helpers/sessionCookie.js'\r\n\r\nimport ChartLoading from '../../others/ChartLoading.js'\r\nimport { func } from 'prop-types';\r\n\r\n\r\nconst Charts = () => {\r\n\r\n  const [tableData1, setTableData1] = useState([]);\r\n  const [tableFields1, setTableFields1] = useState([]);\r\n  const [tableData2, setTableData2] = useState([]);\r\n  const [tableFields2, setTableFields2] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [curves, setCurves] = useState([]);\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [generator, setGenerator] = useState('');\r\n  // const [filter, setFilter] = useState('');\r\n  const [windSectors, setWindSectors] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [performance, setPerformance] = useState({});\r\n  const [filtersSelected, setFiltersSelected] = useState(false);\r\n  const [times, setTimes] = useState([]);\r\n  const [locPower, setLocPower] = useState([]);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [graphData2, setGraphData2] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  const angles = [\r\n    \"0-45\",\r\n    \"45-90\",\r\n    \"90-135\",\r\n    \"135-180\",\r\n    \"180-225\",\r\n    \"225-270\",\r\n    \"270-315\",\r\n    \"315-360\"\r\n  ]\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const fetchData = (options = {}) => {\r\n\r\n    const {period, generator, filter, windSectors} = options\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.location = getCookie('location')\r\n    if (generator) body.generators = [generator];\r\n    if (windSectors.length > 0) body.angles = windSectors\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/powerCurve',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n          const generatorData = response.generator && response.generator[0].data;\r\n\r\n          setDataLoaded(true);\r\n          setData(response);\r\n          \r\n\r\n          if(generatorData && generatorData.hasOwnProperty('curves')){\r\n            setCurves(generatorData.curves);\r\n            refreshChart(generatorData);\r\n          } else {\r\n            setCurves([]);\r\n          }\r\n\r\n          if (generatorData){\r\n            if(generatorData.hasOwnProperty('dataUse')) processTableData1(generatorData.dataUse);\r\n            if(generatorData.hasOwnProperty('dataFilteredDueTo')) processTableData2(generatorData.dataFilteredDueTo);\r\n            if(generatorData.hasOwnProperty('performance')) setPerformance(generatorData.performance);\r\n          }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (response && response.error) {\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n        }\r\n        else if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerator(response.generators[0].id);\r\n          setGenerators(response.generators);\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n    const processTableData1 = (dataUse) => {\r\n\r\n      const tableData = [];\r\n\r\n      dataUse.forEach(\r\n        item => {\r\n\r\n          const appendSymbol = (item.info=='As percentage of time' || item.info=='As percentage of MWh')?'%':'';\r\n          const decimals = (item.info=='As percentage of time' || item.info=='As percentage of MWh')?1:0;\r\n\r\n          // if (item.info == 'As MWh generated') {\r\n\r\n          //   var usedData = (Math.round(item.usedData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n          //   var filteredData = (Math.round(item.filteredData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n          //   var total = (Math.round(item.total)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n\r\n          // } else {\r\n\r\n            var usedData = formatNumber(round(item.usedData,decimals))+appendSymbol;\r\n            var filteredData = formatNumber(round(item.filteredData,decimals))+appendSymbol;\r\n            var total = formatNumber(round(item.total,decimals))+appendSymbol;\r\n\r\n          // }\r\n\r\n          \r\n\r\n          tableData.push({\r\n            '': item.info,\r\n            'Used Data': usedData,\r\n            'Filtered Data': filteredData,\r\n            'Total': total\r\n          })\r\n\r\n        }\r\n      );\r\n\r\n      setTableData1(tableData);\r\n      setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\r\n\r\n    }\r\n\r\n\r\n    const processTableData2 = (dataFilteredDueTo) => {\r\n\r\n      const tableData = [];\r\n\r\n      tableData.push({\r\n            '': dataFilteredDueTo.info,\r\n            'Missing Data': round(dataFilteredDueTo.missingData)+'%',\r\n            'Curtailment': round(dataFilteredDueTo.curtailment)+'%',\r\n            'Alarms, Outliers, Frozen Sensors': round(dataFilteredDueTo.other)+'%',\r\n            'Total': round(dataFilteredDueTo.total)+'%'\r\n          })\r\n\r\n      setTableData2(tableData);\r\n      setTableFields2(['', 'Missing Data', 'Curtailment', 'Alarms, Outliers, Frozen Sensors', 'Total']);\r\n      \r\n    }\r\n\r\n    const refreshChart = (generatorData) => {\r\n\r\n      // if (curves.length==0) return;\r\n\r\n        const curves = generatorData.curves;\r\n        const performance = generatorData.performance;\r\n          \r\n        // Graph 1\r\n        const graphData = {\r\n          labels: [],\r\n          datasets: [\r\n            {\r\n              label:  curves[0].label,\r\n              showLine: true, \r\n              // labels: curves[0].x.map((x, i) => ({ x:\"Power: \"+x, y: \"Wind Speed: \"+curves[0].y[i] })),\r\n              data: curves[0].x.map((x, i) => ({ x, y: curves[0].y[i] })),\r\n              backgroundColor: '#374c80',\r\n            },\r\n            {\r\n              label:  curves[2].label,\r\n              // labels: curves[2].x.map((x, i) => ({ x:\"Power: \"+x, y: \"Wind Speed: \"+curves[2].y[i] })),\r\n              data: curves[2].x.map((x, i) => ({ x, y: curves[2].y[i] })),\r\n              // backgroundColor: '#ffa60091',\r\n              pointBackgroundColor: curves[2].x.map((x, i) => { \r\n                if (curves[2].powerOver99[i] === 1)\r\n                  return '#ff0000b3';\r\n                return '#ffa60091'\r\n               }),\r\n            },\r\n          ]\r\n        }\r\n        const times = curves[2].time.map((t, i) =>  t );\r\n        setTimes(times);\r\n        const locPower = curves[2].locPower.map((t, i) =>  t );\r\n        setLocPower(locPower);\r\n\r\n            \r\n        // Graph 2\r\n        const graphData2 = {\r\n          labels: [],\r\n          datasets: [],\r\n        }\r\n        const dataset2 = {\r\n          labels: [],\r\n          label: \"Time percentage\",\r\n          backgroundColor: '#7a5195',\r\n          data: []\r\n        };\r\n\r\n        const max = curves[1].x[curves[1].x.length-1];//Math.ceil(Math.max(...curves[2].x));\r\n        const windSpeeds = Array(max - 1 + 1).fill().map((_, idx) => 1 + idx)\r\n        const percentages = [];\r\n        let aux;\r\n        let qty;\r\n        let percentage;\r\n        const qtyTotal = curves[2].x.length;\r\n        windSpeeds.forEach( (windSpeed) => { \r\n            aux = curves[2].x.filter(x => x < windSpeed && x > windSpeed-1);\r\n            qty = aux.length;\r\n            percentage = (Math.round((qty*100/qtyTotal) * 100) / 100).toFixed(2);\r\n            percentages.push(percentage);\r\n            graphData2.labels.push(windSpeed-1 + \" - \" + windSpeed);\r\n          }\r\n        );\r\n\r\n        dataset2.data = percentages;\r\n        graphData2.datasets.push(dataset2);\r\n\r\n\r\n        setGraphData(graphData);\r\n        setGraphData2(graphData2);\r\n\r\n\r\n    }\r\n\r\n\r\n    const getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n\r\n}\r\n\r\nconst filterSubmit = () => {\r\n\r\n  setDataLoaded(false)\r\n  setFiltersSelected(true);\r\n  fetchData({generator: generator, period: dateRange, windSectors: windSectors})\r\n\r\n}\r\n\r\nconst performanceFields = [\r\n  'a', 'b', 'c'\r\n];\r\n\r\nconst fields = [\r\n  '',\r\n  'Used Data',\r\n  'Filtered Data',\r\n  'Total'\r\n]\r\n\r\nconst options = {\r\n  animation: {\r\n    duration: loading ? 0 : 1000\r\n  },\r\n  legend: {\r\n    display: false\r\n  },\r\n  tooltips: {\r\n    callbacks: {\r\n      title: function(tooltipItem, data){\r\n        return tooltipItem[0].label + ' m/s';\r\n      },\r\n      label: function(tooltipItem, data) {\r\n        return round(tooltipItem.value,1) + ' %';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// const optionsBoxPlot = {\r\n//   animation: {duration: loading ? 0 : 1000},\r\n//   responsive: true,\r\n//   legend: {\r\n//     position: 'top',\r\n//   }\r\n// }\r\n\r\nconst optionsScatter = {\r\n  animation: {duration: loading ? 0 : 1000},\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        label: function(tooltipItem, data) {\r\n            let ret = [];\r\n            if(tooltipItem.dataset.label !=  \"Manufacturer curve\")\r\n              ret.push(formatDate2(times[tooltipItem.dataIndex]));\r\n            ret.push('Power: ' + formatNumber(round(tooltipItem.raw.y,1)) + ' kWh');\r\n            ret.push('Wind Speed: ' + round(tooltipItem.raw.x,1) + \" m/s\");\r\n            ret.push('Park Total Production: ' + round(locPower[tooltipItem.dataIndex],1) + \" kWh\");\r\n            return ret;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 2\r\n    }\r\n  },\r\n};\r\n\r\n\r\n// function randomValues(count, min, max) {\r\n//   const delta = max - min;\r\n//   return Array.from({ length: count }).map(() => Math.random() * delta + min);\r\n// }\r\n\r\n// const boxplotData = {\r\n//   // define label tree\r\n//   labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n//   datasets: [\r\n//     {\r\n//       label: \"Dataset 1\",\r\n//       backgroundColor: \"rgba(255,0,0,0.5)\",\r\n//       borderColor: \"red\",\r\n//       borderWidth: 1,\r\n//       outlierColor: \"#999999\",\r\n//       padding: 10,\r\n//       itemRadius: 0,\r\n//       data: [\r\n//         randomValues(100, 0, 100),\r\n//         randomValues(100, 0, 20),\r\n//         randomValues(100, 20, 70),\r\n//         randomValues(100, 60, 100),\r\n//         randomValues(40, 50, 100),\r\n//         randomValues(100, 60, 120),\r\n//         randomValues(100, 80, 100)\r\n//       ]\r\n//     },\r\n//     {\r\n//       label: \"Dataset 2\",\r\n//       backgroundColor: \"rgba(0,0,255,0.5)\",\r\n//       borderColor: \"blue\",\r\n//       borderWidth: 1,\r\n//       outlierColor: \"#999999\",\r\n//       padding: 10,\r\n//       itemRadius: 0,\r\n//       data: [\r\n//         randomValues(100, 60, 100),\r\n//         randomValues(100, 0, 100),\r\n//         randomValues(100, 0, 20),\r\n//         randomValues(100, 20, 70),\r\n//         randomValues(40, 60, 120),\r\n//         randomValues(100, 20, 100),\r\n//         randomValues(100, 80, 100)\r\n//       ]\r\n//     }\r\n//   ]\r\n// };\r\n\r\n  return (\r\n    <CCard>\r\n\r\n    <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Power Curve - Analysis\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"text-right d-flex flex-center\">\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{minWidth:'64px'}}>Turbine</h6>\r\n              <CSelect disabled={loading} custom name=\"generator\" id=\"generator\" onChange={(ev) => {setGenerator(ev.target.value);}}>\r\n                {generators.map((oGenerator) => (\r\n                                  <option value={oGenerator.id}>\r\n                                    {oGenerator.code}\r\n                                  </option>\r\n                                ))}</CSelect>\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:1.2}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); }} />\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:1.2,minWidth:'72px'}}>Wind sector</h6>\r\n              <div class=\"multiselect-container\">\r\n                <Multiselect \r\n                  disabled={loading}\r\n                  options={angles.map((angle) => {\r\n                      return {id:angle,name:angle}\r\n                    })}\r\n                  onSelect={(selectedList) => {setWindSectors(selectedList.map((angle) => { \r\n                      const angleSplit = angle.id.split(\"-\"); \r\n                      return {from:angleSplit[0], to:angleSplit[1]} \r\n                    } \r\n                  ))}}\r\n                  onRemove={(selectedList) => {setWindSectors(selectedList.map((angle) =>{ \r\n                      const angleSplit = angle.id.split(\"-\"); \r\n                      return {from:angleSplit[0], to:angleSplit[1]} \r\n                    } \r\n                  ))}}\r\n                  displayValue=\"name\"\r\n                  />\r\n              </div>\r\n            </CCol>\r\n           </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n      \r\n      <CCardBody>\r\n\r\n\r\n        <CRow className={\"py-3 mb-4 mx-0 bg-light\"} style={{borderRadius:\"3px\"}}>\r\n          <CCol xl=\"10\" md=\"10\" className=\"text-right d-flex flex-center\">\r\n\r\n\r\n            {/* <CRow className={\"w-100\"}>\r\n              <CCol xl=\"3\" md=\"6\" className=\"d-flex flex-center px-md-1 py-2 pl-4 pr-0\">\r\n                  <h6 className=\"mr-2 ml-md-4 m-0 col-md-5 text-right col-4 px-0 px-sm-1\" style={{minWidth:'64px'}}>Turbine</h6>\r\n                  <CSelect disabled={loading} custom name=\"generator\" id=\"generator\" className=\"col-md-7\" onChange={(ev) => {setGenerator(ev.target.value);}}>\r\n                      {generators.map((oGenerator) => (\r\n                                        <option value={oGenerator.id}>\r\n                                          {oGenerator.code}\r\n                                        </option>\r\n                                      ))}</CSelect>\r\n              </CCol>\r\n\r\n              <CCol xl=\"3\" md=\"6\" className=\"d-flex flex-center px-md-1 py-2 pl-4 pr-0\">\r\n                    <h6 className=\"mr-2 ml-md-4 m-0 col-md-5 text-right col-4 px-0 px-sm-1\">Period</h6>\r\n                    <div class=\"col-md-7 px-0\">\r\n                      <DateFilter disabled={loading} value={dateRange} options={['y','cm','cy','x','xx']} onChange={(value) => {setDateRange(value);}}/>\r\n                    </div>\r\n              </CCol>\r\n\r\n              <CCol xl=\"6\" md=\"9\" className=\"d-flex flex-center px-md-1 py-2 pl-4 pr-0\">\r\n                <h6 className=\"mr-2 ml-md-4 m-0 text-right col-4 col-md-3 px-0 px-sm-1\">Wind sector</h6>\r\n                  <div class=\"multiselect-container\">\r\n                    <Multiselect \r\n                      disabled={loading}\r\n                      options={angles.map((angle) => {\r\n                          return {id:angle,name:angle}\r\n                        })}\r\n                      onSelect={(selectedList) => {setWindSectors(selectedList.map((angle) => { \r\n                          const angleSplit = angle.id.split(\"-\"); \r\n                          return {from:angleSplit[0], to:angleSplit[1]} \r\n                        } \r\n                      ))}}\r\n                      onRemove={(selectedList) => {setWindSectors(selectedList.map((angle) =>{ \r\n                          const angleSplit = angle.id.split(\"-\"); \r\n                          return {from:angleSplit[0], to:angleSplit[1]} \r\n                        } \r\n                      ))}}\r\n                      displayValue=\"name\"\r\n                      />\r\n                  </div>\r\n              </CCol>\r\n\r\n            </CRow> */}\r\n          </CCol>\r\n\r\n          <CCol xl=\"2\" md=\"2\" className=\"text-right d-flex flex-center flex-justify-end px-4 py-2\">\r\n            <CButton color=\"primary\" className=\"mx-2\" onClick={() => filterSubmit()} >Submit</CButton>\r\n          </CCol>\r\n        </CRow>\r\n        \r\n        { filtersSelected && \r\n\r\n        <CRow>\r\n          <CCol sm=\"7\" className=\"text-center\">\r\n\r\n          {dataLoaded || dataLoadError ? \r\n\r\n            <div>\r\n              <div style={{marginBottom:'50px'}}>\r\n                <div className=\"text-left\" style={{width: '100%'}}>Power (KWh)</div>\r\n                <Scatter data={graphData} options={optionsScatter} />\r\n                <div className=\"text-center mt-1\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n              </div>\r\n\r\n              {/* <div style={{marginBottom:'50px'}}>\r\n                <h4 className=\"pb-2 mb-4 border-bottom text-left\" >Performance Index by Wind Speed</h4>\r\n                <div className=\"text-left\" style={{width: '100%'}}>Time (%)</div>\r\n                <BoxPlotChart data={graphData2} options={optionsBoxPlot} />\r\n                <div className=\"text-center mt-1\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n              </div> */}\r\n\r\n              {/* <Chart\r\n                type=\"boxplot\"\r\n                height={100}\r\n                legend={{\r\n                  display: false\r\n                }}\r\n                data={boxplotData}\r\n                options={{\r\n                  responsive: true,\r\n                }}\r\n              /> */}\r\n\r\n\r\n              <div style={{marginBottom:'50px'}}>\r\n                <h4 className=\"pb-2 mb-4 border-bottom text-left\" >Operational data</h4>\r\n                <div className=\"text-left\" style={{width: '100%'}}>Time (%)</div>\r\n                <CChartBar\r\n                  datasets={graphData2.datasets}\r\n                  labels={graphData2.labels}\r\n                  options={options}\r\n                />\r\n                <div className=\"text-center mt-1\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n              </div>\r\n            </div>\r\n          : \r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          }\r\n            \r\n          </CCol>\r\n\r\n          <CCol sm=\"5\">\r\n\r\n            { dataLoaded || dataLoadError ?\r\n              <div>\r\n                % data above Reference Power Curve: {round(performance['Percentage data above manufacturer power curve']) }%<br />\r\n                % data below Reference Power Curve: {round(performance['Percentage data below manufacturer power curve']) }%<br />\r\n                Performance index {round(performance['Performance index'])}%<br /><br />\r\n              </div>\r\n              : \r\n              <div class=\"text-center\">\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n\r\n\r\n              <h4>Data Use</h4>\r\n\r\n              <div style={{textAlign:'right'}}>\r\n                  {dataLoaded || dataLoadError \r\n                    ? <CDataTable\r\n                    items={tableData1}\r\n                    fields={tableFields1}\r\n                    striped\r\n                    itemsPerPage={5}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                      'status':\r\n                        (item)=>(\r\n                          <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                              {item.status}\r\n                            </CBadge>\r\n                          </td>\r\n                        )\r\n  \r\n                    }}\r\n                  />\r\n                    : \r\n                    <ChartLoading/>\r\n                \r\n              }\r\n              </div>\r\n\r\n              <h4>Reasons for Filtered Data</h4>\r\n              <div style={{textAlign:'right'}}>\r\n\r\n              {dataLoaded || dataLoadError\r\n                    ? \r\n                    <CDataTable\r\n                    items={tableData2}\r\n                    fields={tableFields2}\r\n                    striped\r\n                    itemsPerPage={5}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                      'status':\r\n                        (item)=>(\r\n                          <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                              {item.status}\r\n                            </CBadge>\r\n                          </td>\r\n                        )\r\n\r\n                    }}\r\n                  />\r\n                  : \r\n                  <ChartLoading/>\r\n              } \r\n              </div>\r\n\r\n          </CCol>\r\n\r\n        </CRow>\r\n\r\n\r\n        }\r\n\r\n      </CCardBody>\r\n\r\n\r\n\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}