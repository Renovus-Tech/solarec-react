{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\curtailments\\\\curtailments.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CSelect, CButton } from '@coreui/react';\nimport { CChartBar } from '@coreui/react-chartjs';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, getDateLabel, formatDate } from '../../../helpers/utils.js';\nimport { getCookie } from '../../../helpers/sessionCookie.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState('12w'),\n      _useState2 = _slicedToArray(_useState, 2),\n      period = _useState2[0],\n      setPeriod = _useState2[1];\n\n  var _useState3 = useState('week'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataLoaded = _useState8[0],\n      setDataLoaded = _useState8[1];\n\n  var _useState9 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      graphData = _useState10[0],\n      setGraphData = _useState10[1];\n\n  useEffect(function () {}, []);\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    DataAPI({\n      'endpoint': 'chart/curtailments',\n      'body': body\n    }).then(function (responseData) {\n      setLoading(false);\n\n      if (responseData.error) {\n        if (responseData.error.message) {\n          return alert(responseData.error.message);\n        } else {\n          return alert(responseData.error);\n        }\n      }\n\n      var data = {\n        labels: [],\n        datasets: []\n      };\n      responseData.dataSet.forEach(function (rDs) {\n        var datasets = {\n          label: rDs.label,\n          backgroundColor: rDs.id === 1 ? '#f87979' : '#0400ff',\n          data: []\n        };\n        responseData.data.forEach(function (rD) {\n          var dsData = rD.dataSet.find(function (dS) {\n            return dS.id === rDs.id;\n          });\n          var value = (Math.round(dsData.value * 100) / 100).toFixed(2);\n          datasets.data.push(value);\n        });\n        data.datasets.push(datasets);\n      });\n      responseData.data.forEach(function (rD) {\n        var rDfrom = rD.from;\n        var rDto = rD.to; // data.labels.push(rDfrom.replace(\" 00:00:00\", \"\") + ' / ' + rDto.replace(\" 00:00:00\", \"\"));\n\n        var label = groupBy == \"day\" ? \"\".concat(formatDate(rDfrom)) : \"\".concat(formatDate(rDfrom), \" - \").concat(formatDate(rDto));\n        data.labels.push(label);\n      });\n      setGraphData(data);\n      setDataLoaded(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Curtailments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(period)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          className: \"text-right d-flex flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '60px'\n            },\n            children: \"Group by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            value: groupBy,\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGroupBy(ev.target.value);\n            },\n            custom: true,\n            name: \"groupBy\",\n            id: \"groupBy\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"day\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              selected: true,\n              children: \"Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: period,\n            options: ['y', 'cm', 'cy', '12w', '12m', 'x'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setPeriod(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: (loading || dataLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"MWh\", /*#__PURE__*/_jsxDEV(CChartBar, {\n          datasets: graphData.datasets,\n          labels: graphData.labels,\n          options: {\n            tooltips: {\n              enabled: true\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-center\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"Evsqx8pvwP74yBv4IE42/28f3iM=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/curtailments/curtailments.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CSelect","CButton","CChartBar","DataAPI","DateFilter","getDateLabel","formatDate","getCookie","Charts","period","setPeriod","groupBy","setGroupBy","loading","setLoading","dataLoaded","setDataLoaded","labels","datasets","graphData","setGraphData","fetchData","body","location","split","length","from","to","then","responseData","error","message","alert","data","dataSet","forEach","rDs","label","backgroundColor","id","rD","dsData","find","dS","value","Math","round","toFixed","push","rDfrom","rDto","lineHeight","minWidth","ev","target","tooltips","enabled"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CSelect,\r\n  CButton\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n} from '@coreui/react-chartjs'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {DateFilter, getDateLabel, formatDate} from '../../../helpers/utils.js'\r\nimport {getCookie} from '../../../helpers/sessionCookie.js'\r\n\r\nconst Charts = () => {\r\n\r\n  const [period, setPeriod] = useState('12w');\r\n  const [groupBy, setGroupBy] = useState('week');\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  useEffect(() => {\r\n      \r\n\r\n  }, []);\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.location = getCookie('location');\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy\r\n\r\n    DataAPI(\r\n      {\r\n      'endpoint': 'chart/curtailments',\r\n      'body': body\r\n    }).then(function (responseData) {\r\n\r\n\r\n      setLoading(false);\r\n\r\n      if (responseData.error) {\r\n           if (responseData.error.message) {\r\n            return(alert(responseData.error.message))\r\n           } else {\r\n            return(alert(responseData.error)) \r\n           }\r\n        }\r\n\r\n        const data = {\r\n          labels: [],\r\n          datasets: []\r\n        }\r\n        responseData.dataSet.forEach((rDs) => {\r\n          const datasets = {\r\n            label: rDs.label,\r\n            backgroundColor: rDs.id === 1 ? '#f87979' : '#0400ff',\r\n            data: []\r\n          };\r\n          responseData.data.forEach((rD) => {\r\n            const dsData = rD.dataSet.find((dS) => dS.id === rDs.id);\r\n            const value = (Math.round(dsData.value * 100) / 100).toFixed(2);\r\n            datasets.data.push(value);\r\n          });\r\n          data.datasets.push(datasets);\r\n        });\r\n\r\n        responseData.data.forEach((rD) => {\r\n          const rDfrom = rD.from;\r\n          const rDto = rD.to;\r\n          // data.labels.push(rDfrom.replace(\" 00:00:00\", \"\") + ' / ' + rDto.replace(\" 00:00:00\", \"\"));\r\n          const label = (groupBy == \"day\") ? `${formatDate(rDfrom)}` : `${formatDate(rDfrom)} - ${formatDate(rDto)}`\r\n          data.labels.push(label);\r\n\r\n        });\r\n        setGraphData(data)\r\n        setDataLoaded(true)\r\n      });\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"7\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Curtailments\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(period)}</div>\r\n              </CCol>\r\n            \r\n              <CCol sm=\"6\" className=\"text-right d-flex flex-center\">\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n                <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); }} custom name=\"groupBy\" id=\"groupBy\">\r\n                    <option value=\"day\">Day</option>\r\n                    <option value=\"week\" selected>Week</option>\r\n                    <option value=\"month\">Month</option>\r\n                </CSelect>\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n                <DateFilter value={period} options={['y','cm','cy','12w','12m','x']} disabled={loading} onChange={(value) => { setPeriod(value); }} />\r\n                <CButton color=\"primary\" disabled={loading} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n            </CCol>\r\n          </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n      <CCardBody>\r\n       { (loading || dataLoaded) &&\r\n        <div>\r\n          MWh\r\n          <CChartBar\r\n            datasets={graphData.datasets}\r\n            labels={graphData.labels}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n          <p class=\"text-center\">Week</p>\r\n        </div>\r\n       }\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}