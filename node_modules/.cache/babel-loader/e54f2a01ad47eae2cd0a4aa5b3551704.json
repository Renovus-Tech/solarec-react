{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _taggedTemplateLiteral = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toConsumableArray = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function get() {\n    return _getModuleName.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function get() {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function get() {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function get() {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function get() {\n    return _rewriteThis.default;\n  }\n});\nexports.wrapInterop = wrapInterop;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nvar booleanLiteral = _t.booleanLiteral,\n    callExpression = _t.callExpression,\n    cloneNode = _t.cloneNode,\n    directive = _t.directive,\n    directiveLiteral = _t.directiveLiteral,\n    expressionStatement = _t.expressionStatement,\n    identifier = _t.identifier,\n    isIdentifier = _t.isIdentifier,\n    memberExpression = _t.memberExpression,\n    stringLiteral = _t.stringLiteral,\n    valueToNode = _t.valueToNode,\n    variableDeclaration = _t.variableDeclaration,\n    variableDeclarator = _t.variableDeclarator;\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, _ref) {\n  var loose = _ref.loose,\n      exportName = _ref.exportName,\n      strict = _ref.strict,\n      allowTopLevelThis = _ref.allowTopLevelThis,\n      strictMode = _ref.strictMode,\n      noInterop = _ref.noInterop,\n      _ref$importInterop = _ref.importInterop,\n      importInterop = _ref$importInterop === void 0 ? noInterop ? \"none\" : \"babel\" : _ref$importInterop,\n      lazy = _ref.lazy,\n      esNamespaceOnly = _ref.esNamespaceOnly,\n      _ref$constantReexport = _ref.constantReexports,\n      constantReexports = _ref$constantReexport === void 0 ? loose : _ref$constantReexport,\n      _ref$enumerableModule = _ref.enumerableModuleMeta,\n      enumerableModuleMeta = _ref$enumerableModule === void 0 ? loose : _ref$enumerableModule,\n      noIncompleteNsImportDetection = _ref.noIncompleteNsImportDetection;\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  var meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop: importInterop,\n    initializeReexports: constantReexports,\n    lazy: lazy,\n    esNamespaceOnly: esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    var hasStrict = path.node.directives.some(function (directive) {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", directive(directiveLiteral(\"use strict\")));\n    }\n  }\n\n  var headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  var nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push.apply(headers, _toConsumableArray(buildExportInitializationStatements(path, meta, constantReexports, noIncompleteNsImportDetection)));\n  return {\n    meta: meta,\n    headers: headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(function (header) {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  var helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(\"Unknown interop: \".concat(type));\n  }\n\n  return callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata) {\n  var constantReexports = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var statements = [];\n  var srcNamespace = identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = callExpression(srcNamespace, []);\n\n  var _iterator = _createForOfIteratorHelper(sourceMetadata.importsNamespace),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var localName = _step.value;\n      if (localName === sourceMetadata.name) continue;\n      statements.push(_template.default.statement(_templateObject || (_templateObject = _taggedTemplateLiteral([\"var NAME = SOURCE;\"])))({\n        NAME: localName,\n        SOURCE: cloneNode(srcNamespace)\n      }));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (constantReexports) {\n    statements.push.apply(statements, _toConsumableArray(buildReexportsFromMeta(metadata, sourceMetadata, true)));\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(sourceMetadata.reexportNamespace),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var exportName = _step2.value;\n      statements.push((sourceMetadata.lazy ? _template.default.statement(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            Object.defineProperty(EXPORTS, \\\"NAME\\\", {\\n              enumerable: true,\\n              get: function() {\\n                return NAMESPACE;\\n              }\\n            });\\n          \"]))) : _template.default.statement(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"EXPORTS.NAME = NAMESPACE;\"]))))({\n        EXPORTS: metadata.exportName,\n        NAME: exportName,\n        NAMESPACE: cloneNode(srcNamespace)\n      }));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (sourceMetadata.reexportAll) {\n    var statement = buildNamespaceReexport(metadata, cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nvar ReexportTemplate = {\n  constant: _template.default.statement(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;\"]))),\n  constantComputed: _template.default.statement(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"EXPORTS[\\\"EXPORT_NAME\\\"] = NAMESPACE_IMPORT;\"]))),\n  spec: _template.default.statement(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    Object.defineProperty(EXPORTS, \\\"EXPORT_NAME\\\", {\\n      enumerable: true,\\n      get: function() {\\n        return NAMESPACE_IMPORT;\\n      },\\n    });\\n    \"])))\n};\n\nvar buildReexportsFromMeta = function buildReexportsFromMeta(meta, metadata, constantReexports) {\n  var namespace = metadata.lazy ? callExpression(identifier(metadata.name), []) : identifier(metadata.name);\n  var stringSpecifiers = meta.stringSpecifiers;\n  return Array.from(metadata.reexports, function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        exportName = _ref3[0],\n        importName = _ref3[1];\n\n    var NAMESPACE_IMPORT = cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = memberExpression(NAMESPACE_IMPORT, stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = memberExpression(NAMESPACE_IMPORT, identifier(importName));\n    }\n\n    var astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT: NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata) {\n  var enumerableModuleMeta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (enumerableModuleMeta ? _template.default.statement(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n        EXPORTS.__esModule = true;\\n      \"]))) : _template.default.statement(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n        Object.defineProperty(EXPORTS, \\\"__esModule\\\", {\\n          value: true,\\n        });\\n      \"]))))({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n        Object.keys(NAMESPACE).forEach(function(key) {\\n          if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n          VERIFY_NAME_LIST;\\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\\n\\n          EXPORTS[key] = NAMESPACE[key];\\n        });\\n      \"]))) : _template.default.statement(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n        Object.keys(NAMESPACE).forEach(function(key) {\\n          if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n          VERIFY_NAME_LIST;\\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\\n\\n          Object.defineProperty(EXPORTS, key, {\\n            enumerable: true,\\n            get: function() {\\n              return NAMESPACE[key];\\n            },\\n          });\\n        });\\n    \"]))))({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\\n          \"])))({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  var exportedVars = Object.create(null);\n\n  var _iterator3 = _createForOfIteratorHelper(metadata.local.values()),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var data = _step3.value;\n\n      var _iterator5 = _createForOfIteratorHelper(data.names),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _name = _step5.value;\n          exportedVars[_name] = true;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  var hasReexport = false;\n\n  var _iterator4 = _createForOfIteratorHelper(metadata.source.values()),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _data = _step4.value;\n\n      var _iterator6 = _createForOfIteratorHelper(_data.reexports.keys()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var exportName = _step6.value;\n          exportedVars[exportName] = true;\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var _iterator7 = _createForOfIteratorHelper(_data.reexportNamespace),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _exportName = _step7.value;\n          exportedVars[_exportName] = true;\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      hasReexport = hasReexport || !!_data.reexportAll;\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  var name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: variableDeclaration(\"var\", [variableDeclarator(name, valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata) {\n  var constantReexports = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var noIncompleteNsImportDetection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var initStatements = [];\n\n  var _iterator8 = _createForOfIteratorHelper(metadata.local),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var _step8$value = _slicedToArray(_step8.value, 2),\n          localName = _step8$value[0],\n          data = _step8$value[1];\n\n      if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n        initStatements.push([data.names[0], buildInitStatement(metadata, data.names, identifier(localName))]);\n      } else if (!noIncompleteNsImportDetection) {\n        var _iterator11 = _createForOfIteratorHelper(data.names),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var _exportName2 = _step11.value;\n            initStatements.push([_exportName2, null]);\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  var _iterator9 = _createForOfIteratorHelper(metadata.source.values()),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var _data2 = _step9.value;\n\n      if (!constantReexports) {\n        var reexportsStatements = buildReexportsFromMeta(metadata, _data2, false);\n\n        var reexports = _toConsumableArray(_data2.reexports.keys());\n\n        for (var _i = 0; _i < reexportsStatements.length; _i++) {\n          initStatements.push([reexports[_i], reexportsStatements[_i]]);\n        }\n      }\n\n      if (!noIncompleteNsImportDetection) {\n        var _iterator12 = _createForOfIteratorHelper(_data2.reexportNamespace),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var _exportName3 = _step12.value;\n            initStatements.push([_exportName3, null]);\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  initStatements.sort(function (a, b) {\n    return a[0] > b[0] ? 1 : -1;\n  });\n  var results = [];\n\n  if (noIncompleteNsImportDetection) {\n    var _iterator10 = _createForOfIteratorHelper(initStatements),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var _step10$value = _slicedToArray(_step10.value, 2),\n            initStatement = _step10$value[1];\n\n        results.push(initStatement);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n  } else {\n    var chunkSize = 100;\n\n    for (var i = 0, uninitializedExportNames = []; i < initStatements.length; i += chunkSize) {\n      for (var j = 0; j < chunkSize && i + j < initStatements.length; j++) {\n        var _initStatements = _slicedToArray(initStatements[i + j], 2),\n            exportName = _initStatements[0],\n            _initStatement = _initStatements[1];\n\n        if (_initStatement !== null) {\n          if (uninitializedExportNames.length > 0) {\n            results.push(buildInitStatement(metadata, uninitializedExportNames, programPath.scope.buildUndefinedNode()));\n            uninitializedExportNames = [];\n          }\n\n          results.push(_initStatement);\n        } else {\n          uninitializedExportNames.push(exportName);\n        }\n      }\n\n      if (uninitializedExportNames.length > 0) {\n        results.push(buildInitStatement(metadata, uninitializedExportNames, programPath.scope.buildUndefinedNode()));\n      }\n    }\n  }\n\n  return results;\n}\n\nvar InitTemplate = {\n  computed: _template.default.expression(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"EXPORTS[\\\"NAME\\\"] = VALUE\"]))),\n  default: _template.default.expression(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"EXPORTS.NAME = VALUE\"])))\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  var stringSpecifiers = metadata.stringSpecifiers,\n      EXPORTS = metadata.exportName;\n  return expressionStatement(exportNames.reduce(function (acc, exportName) {\n    var params = {\n      EXPORTS: EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/@babel/core/node_modules/@babel/helper-module-transforms/lib/index.js"],"names":["Object","defineProperty","exports","value","buildNamespaceInitStatements","ensureStatementsHoisted","enumerable","get","_getModuleName","default","_normalizeAndLoadMetadata","hasExports","_helperModuleImports","isModule","isSideEffectImport","rewriteModuleStatementsAndPrepareHeader","_rewriteThis","wrapInterop","_assert","require","_t","_template","_rewriteLiveReferences","booleanLiteral","callExpression","cloneNode","directive","directiveLiteral","expressionStatement","identifier","isIdentifier","memberExpression","stringLiteral","valueToNode","variableDeclaration","variableDeclarator","path","loose","exportName","strict","allowTopLevelThis","strictMode","noInterop","importInterop","lazy","esNamespaceOnly","constantReexports","enumerableModuleMeta","noIncompleteNsImportDetection","validateImportInteropOption","node","sourceType","meta","initializeReexports","hasStrict","directives","some","unshiftContainer","headers","push","buildESModuleHeader","nameList","buildExportNameListDeclaration","exportNameListName","name","statement","buildExportInitializationStatements","statements","forEach","header","_blockHoist","programPath","expr","type","hub","addHelper","helper","Error","metadata","sourceMetadata","srcNamespace","importsNamespace","localName","NAME","SOURCE","buildReexportsFromMeta","reexportNamespace","EXPORTS","NAMESPACE","reexportAll","buildNamespaceReexport","loc","ReexportTemplate","constant","constantComputed","spec","namespace","stringSpecifiers","Array","from","reexports","importName","NAMESPACE_IMPORT","interop","has","astNodes","EXPORT_NAME","VERIFY_NAME_LIST","EXPORTS_LIST","exportedVars","create","local","values","data","names","hasReexport","source","keys","length","scope","generateUidIdentifier","initStatements","kind","buildInitStatement","reexportsStatements","i","sort","a","b","results","initStatement","chunkSize","uninitializedExportNames","j","buildUndefinedNode","InitTemplate","computed","expression","exportNames","initExpr","reduce","acc","params","VALUE"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nexports.wrapInterop = wrapInterop;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nconst {\n  booleanLiteral,\n  callExpression,\n  cloneNode,\n  directive,\n  directiveLiteral,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  memberExpression,\n  stringLiteral,\n  valueToNode,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  loose,\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  noInterop,\n  importInterop = noInterop ? \"none\" : \"babel\",\n  lazy,\n  esNamespaceOnly,\n  constantReexports = loose,\n  enumerableModuleMeta = loose,\n  noIncompleteNsImportDetection\n}) {\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop,\n    initializeReexports: constantReexports,\n    lazy,\n    esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", directive(directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, constantReexports, noIncompleteNsImportDetection));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, constantReexports = false) {\n  const statements = [];\n  let srcNamespace = identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: cloneNode(srcNamespace)\n    }));\n  }\n\n  if (constantReexports) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, true));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  constant: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  constantComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: _template.default.statement`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, constantReexports) => {\n  const namespace = metadata.lazy ? callExpression(identifier(metadata.name), []) : identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT = cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = memberExpression(NAMESPACE_IMPORT, stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = memberExpression(NAMESPACE_IMPORT, identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerableModuleMeta = false) {\n  return (enumerableModuleMeta ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || !!data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: variableDeclaration(\"var\", [variableDeclarator(name, valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, constantReexports = false, noIncompleteNsImportDetection = false) {\n  const initStatements = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push([data.names[0], buildInitStatement(metadata, data.names, identifier(localName))]);\n    } else if (!noIncompleteNsImportDetection) {\n      for (const exportName of data.names) {\n        initStatements.push([exportName, null]);\n      }\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!constantReexports) {\n      const reexportsStatements = buildReexportsFromMeta(metadata, data, false);\n      const reexports = [...data.reexports.keys()];\n\n      for (let i = 0; i < reexportsStatements.length; i++) {\n        initStatements.push([reexports[i], reexportsStatements[i]]);\n      }\n    }\n\n    if (!noIncompleteNsImportDetection) {\n      for (const exportName of data.reexportNamespace) {\n        initStatements.push([exportName, null]);\n      }\n    }\n  }\n\n  initStatements.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  const results = [];\n\n  if (noIncompleteNsImportDetection) {\n    for (const [, initStatement] of initStatements) {\n      results.push(initStatement);\n    }\n  } else {\n    const chunkSize = 100;\n\n    for (let i = 0, uninitializedExportNames = []; i < initStatements.length; i += chunkSize) {\n      for (let j = 0; j < chunkSize && i + j < initStatements.length; j++) {\n        const [exportName, initStatement] = initStatements[i + j];\n\n        if (initStatement !== null) {\n          if (uninitializedExportNames.length > 0) {\n            results.push(buildInitStatement(metadata, uninitializedExportNames, programPath.scope.buildUndefinedNode()));\n            uninitializedExportNames = [];\n          }\n\n          results.push(initStatement);\n        } else {\n          uninitializedExportNames.push(exportName);\n        }\n      }\n\n      if (uninitializedExportNames.length > 0) {\n        results.push(buildInitStatement(metadata, uninitializedExportNames, programPath.scope.buildUndefinedNode()));\n      }\n    }\n  }\n\n  return results;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}"]},"metadata":{},"sourceType":"script"}