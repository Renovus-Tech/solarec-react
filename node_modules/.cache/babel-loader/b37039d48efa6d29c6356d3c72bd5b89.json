{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\solar\\\\overview\\\\Widgets.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CWidgetDropdown, CRow, CCol, CDropdown, CDropdownMenu, CDropdownItem, CDropdownToggle, CCard, CCardHeader, CCardBody, CCardTitle, CCardText } from '@coreui/react';\nimport { round } from '../../../../helpers/utils.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Widgets = function Widgets(props) {\n  _s();\n\n  console.log('widgets'); // const [data, setData] = useState(false);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      averageWindSpeed = _useState2[0],\n      setAverageWindSpeed = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      metMastWindSpeed = _useState4[0],\n      setMetMastWindSpeed = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataLoaded = _useState6[0],\n      setDataLoaded = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      availability = _useState8[0],\n      setAvailability = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loadFactor = _useState10[0],\n      setLoadFactor = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mWh = _useState12[0],\n      setMWh = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      availabilityChartData = _useState14[0],\n      setAvailabilityChartData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loadFactorChartData = _useState16[0],\n      setLoadFactorChartData = _useState16[1];\n\n  var _useState17 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      graphData = _useState18[0],\n      setGraphData = _useState18[1];\n\n  graph();\n\n  function graph() {\n    console.log('dataLoaded', dataLoaded);\n\n    if (!dataLoaded) {\n      var chartData = props.data && props.data.data && props.data.data[0];\n\n      if (chartData) {\n        // console.log('chartData', chartData);\n        var _availability = Math.round(chartData.timeBasedAvailability * 10) / 10;\n\n        var _loadFactor = Math.round(chartData.capacityFactor * 10) / 10;\n\n        var _mWh = Math.round(chartData.mWhFromWindTurbines * 10) / 10;\n\n        var loadFactorDataset = {\n          clip: true,\n          labels: ['Load Factor'],\n          datasets: [{\n            borderWidth: 0,\n            data: [_loadFactor, 100 - _loadFactor],\n            backgroundColor: ['#ca6510', 'rgba(0,0,0,.7)']\n          }]\n        };\n        var availabilityDataset = {\n          clip: true,\n          labels: ['Availability'],\n          datasets: [{\n            borderWidth: 0,\n            data: [_availability, 100 - _availability],\n            backgroundColor: ['#0a58ca', '#052c65']\n          }]\n        };\n        setAverageWindSpeed(props.data.data[0].averageWindSpeed);\n        setMetMastWindSpeed(props.data.data[0].metMastWindSpeed);\n        setAvailability(\"\".concat(_availability, \"%\"));\n        setLoadFactor(\"\".concat(_loadFactor, \"%\"));\n        setAvailabilityChartData(availabilityDataset);\n        setLoadFactorChartData(loadFactorDataset);\n        setMWh(_mWh);\n        setDataLoaded(true);\n      } // setGraphData(datasets2);\n\n    }\n  } // render\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: [/*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"6\",\n        lg: \"4\",\n        children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n          color: \"gradient-warning\",\n          header: \"LOAD FACTOR (%)\",\n          text: loadFactor,\n          footerSlot: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"px-lg-5 pb-lg-5\",\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: loadFactorChartData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"6\",\n        lg: \"4\",\n        children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n          color: \"gradient-info\",\n          header: \"AVAILABILITY (%)\",\n          text: availability,\n          footerSlot: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"px-lg-5 pb-lg-5\",\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: availabilityChartData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"6\",\n        lg: \"4\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          color: \"success\",\n          textColor: \"white\",\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n              children: \"PRODUCTION AND WIND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(CCardText, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"h6\",\n                children: [\"Production: \", round(mWh), \" MW\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"h6\",\n                children: [\"Turbine average wind speed: \", round(averageWindSpeed), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"h6\",\n                children: [\"Met mast average wind speed: \", round(metMastWindSpeed), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Widgets, \"vHXB2XyuTmiwXTlBRSLSAvZjEyI=\");\n\n_c = Widgets;\nexport default Widgets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Widgets\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/solar/overview/Widgets.js"],"names":["React","useState","useEffect","CWidgetDropdown","CRow","CCol","CDropdown","CDropdownMenu","CDropdownItem","CDropdownToggle","CCard","CCardHeader","CCardBody","CCardTitle","CCardText","round","Doughnut","Widgets","props","console","log","averageWindSpeed","setAverageWindSpeed","metMastWindSpeed","setMetMastWindSpeed","dataLoaded","setDataLoaded","availability","setAvailability","loadFactor","setLoadFactor","mWh","setMWh","availabilityChartData","setAvailabilityChartData","loadFactorChartData","setLoadFactorChartData","labels","datasets","graphData","setGraphData","graph","chartData","data","Math","timeBasedAvailability","capacityFactor","mWhFromWindTurbines","loadFactorDataset","clip","borderWidth","backgroundColor","availabilityDataset"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CCardTitle,\r\n  CCardText\r\n} from '@coreui/react'\r\n\r\nimport { round } from '../../../../helpers/utils.js'\r\n\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst Widgets = (props) => {\r\n\r\n  console.log('widgets');\r\n\r\n\t// const [data, setData] = useState(false);\r\n\r\n  const [averageWindSpeed, setAverageWindSpeed] = useState();\r\n  const [metMastWindSpeed, setMetMastWindSpeed] = useState();\r\n\r\n\tconst [dataLoaded, setDataLoaded] = useState(false);\r\n\tconst [availability, setAvailability] = useState('');\r\n\tconst [loadFactor, setLoadFactor] = useState();\r\n\tconst [mWh, setMWh] = useState([]);\r\n\r\n\tconst [availabilityChartData, setAvailabilityChartData] = useState([]);\r\n\tconst [loadFactorChartData, setLoadFactorChartData] = useState([]);\r\n\r\n\tconst [graphData, setGraphData] = useState({\r\n\t    labels: [],\r\n\t    datasets: []\r\n\t  });\r\n\r\n\r\n\r\n\r\n  graph();\r\n\r\n\r\n  function graph(){\r\n\r\n    console.log('dataLoaded', dataLoaded)\r\n\r\n    if (!dataLoaded) {\r\n\r\n      const chartData = props.data && props.data.data && props.data.data[0];\r\n\r\n      if (chartData){\r\n\r\n        // console.log('chartData', chartData);\r\n\r\n        const availability = Math.round(chartData.timeBasedAvailability*10)/10;\r\n        const loadFactor = Math.round(chartData.capacityFactor*10)/10;\r\n        const mWh = Math.round(chartData.mWhFromWindTurbines*10)/10;\r\n\r\n        const loadFactorDataset = {\r\n          clip:true,\r\n          labels: ['Load Factor'],\r\n          datasets: [{\r\n            borderWidth: 0,\r\n            data: [loadFactor,100-loadFactor],\r\n            backgroundColor: ['#ca6510', 'rgba(0,0,0,.7)']\r\n          }\r\n        ]}\r\n\r\n\r\n        const availabilityDataset = {\r\n          clip:true,\r\n          labels: ['Availability'],\r\n          datasets: [{\r\n            borderWidth: 0,\r\n            data: [availability,100-availability],\r\n            backgroundColor: ['#0a58ca', '#052c65']\r\n          }\r\n        ]}\r\n\r\n\r\n        setAverageWindSpeed(props.data.data[0].averageWindSpeed);\r\n        setMetMastWindSpeed(props.data.data[0].metMastWindSpeed);\r\n\r\n        setAvailability(`${availability}%`)\r\n        setLoadFactor(`${loadFactor}%`)\r\n        \r\n        setAvailabilityChartData(availabilityDataset)\r\n        setLoadFactorChartData(loadFactorDataset)\r\n\r\n        setMWh(mWh)\r\n\r\n        setDataLoaded(true);\r\n        \r\n      }\r\n\r\n      \r\n      // setGraphData(datasets2);\r\n\r\n    }\r\n  }\r\n\r\n  // render\r\n  return (\r\n    <>\r\n    <CRow>\r\n      \r\n\r\n      <CCol sm=\"6\" lg=\"4\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-warning\"\r\n          header=\"LOAD FACTOR (%)\"\r\n          text={loadFactor}\r\n          footerSlot={\r\n            <div class=\"px-lg-5 pb-lg-5\">\r\n            <Doughnut\r\n               data={loadFactorChartData}\r\n            />\r\n            </div>\r\n          }\r\n        >\r\n          \r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"4\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-info\"\r\n          header=\"AVAILABILITY (%)\"\r\n          text={availability}\r\n          footerSlot={\r\n            <div class=\"px-lg-5 pb-lg-5\">\r\n            <Doughnut\r\n               data={availabilityChartData}\r\n            />\r\n            </div>\r\n          }\r\n        >\r\n          \r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n\r\n\r\n\r\n      <CCol sm=\"6\" lg=\"4\">\r\n          \r\n\r\n          <CCard\r\n      color={\"success\"}\r\n      textColor={\"white\"}\r\n\r\n    >\r\n\r\n      <CCardBody>\r\n        <CCardTitle>PRODUCTION AND WIND</CCardTitle>\r\n        <CCardText>\r\n          <p class=\"h6\">Production: {round(mWh)} MW</p>\r\n          <p class=\"h6\">Turbine average wind speed: {round(averageWindSpeed)} m/s</p>\r\n          <p class=\"h6\">Met mast average wind speed: {round(metMastWindSpeed)} m/s</p>\r\n        </CCardText>\r\n      </CCardBody>\r\n    </CCard>\r\n\r\n      </CCol>\r\n    </CRow>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Widgets\r\n"]},"metadata":{},"sourceType":"module"}