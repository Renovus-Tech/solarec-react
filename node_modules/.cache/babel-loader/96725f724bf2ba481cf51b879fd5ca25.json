{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\diagnostics\\\\diagnostics.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CSelect } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport { formatDate, round, getDateLabel, DateFilter } from '../../../helpers/utils.js';\nimport { Scatter } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar rand = function rand() {\n  return 2;\n};\n\nvar ctx = document.getElementById('x');\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      graphData = _useState2[0],\n      setGraphData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generator = _useState4[0],\n      setGenerator = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generators = _useState6[0],\n      setGenerators = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      generatorsLoaded = _useState8[0],\n      setGeneratorsLoaded = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      park = _useState10[0],\n      setPark = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      date = _useState12[0],\n      setDate = _useState12[1];\n\n  var _useState13 = useState('cm'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dateRange = _useState14[0],\n      setDateRange = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      data = _useState16[0],\n      setData = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dataLoaded = _useState18[0],\n      setDataLoaded = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      dataLoadError = _useState20[0],\n      setDataLoadError = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      loading = _useState22[0],\n      setLoading = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      curves = _useState24[0],\n      setCurves = _useState24[1];\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      performance = _useState26[0],\n      setPerformance = _useState26[1];\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        generator = options.generator;\n    setLoading(true);\n    var body = {};\n    if (generator) body.generators = [generator]; // console.log('.....', period, period.split('-').length)\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    DataAPI({\n      'endpoint': 'chart/pitchWindspeed',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      } // if (!response.generator) return(alert('No generator datasets'));\n\n\n      var generatorData = response.generator && response.generator[0].data;\n      setDataLoaded(true);\n      setData(response);\n      if (generatorData.curves.length == 0) return;\n      var labels = [];\n      var curves = generatorData.curves;\n      curves[0].x.forEach(function (x) {\n        labels.push(round(x));\n      });\n      var graphData = {\n        labels: [],\n        datasets: [{\n          label: curves[0].label,\n          data: curves[0].x.map(function (x, i) {\n            return {\n              x: x,\n              y: curves[0].y[i]\n            };\n          }),\n          backgroundColor: '#003f5c'\n        }, {\n          label: curves[1].label,\n          data: curves[1].x.map(function (x, i) {\n            return {\n              x: x,\n              y: curves[0].y[i]\n            };\n          }),\n          backgroundColor: '#ef5675'\n        }],\n        backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\n      };\n      setGraphData(graphData);\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerator(response.generators[0].id);\n        setGenerators(response.generators);\n        fetchData({\n          period: dateRange,\n          generator: response.generators[0].id\n        });\n      }\n    });\n  };\n\n  var processTableData1 = function processTableData1(dataUse) {\n    var tableData = [];\n    dataUse.forEach(function (item) {\n      var appendSymbol = item.info == 'As percentage of time' || item.info == 'As percentage of MWh' ? '%' : '';\n\n      if (item.info == 'As MWh generated') {\n        var usedData = (Math.round(item.usedData) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        var filteredData = (Math.round(item.filteredData) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        var total = (Math.round(item.total) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      } else {\n        var usedData = (round(item.usedData) + appendSymbol).replace('.', ',');\n        var filteredData = (round(item.filteredData) + appendSymbol).replace('.', ',');\n        var total = (round(item.total) + appendSymbol).replace('.', ',');\n      }\n\n      tableData.push({\n        '': item.info,\n        'Used Data': usedData,\n        'Filtered Data': filteredData,\n        'Total': total\n      });\n    });\n    setTableData1(tableData);\n    setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\n  };\n\n  var processTableData2 = function processTableData2(dataFilteredDueTo) {\n    var tableData = [];\n    tableData.push({\n      '': dataFilteredDueTo.info,\n      'Missing Data': round(dataFilteredDueTo.missingData) + '%',\n      'Curtailment': round(dataFilteredDueTo.curtailment) + '%',\n      'Other': round(dataFilteredDueTo.other) + '%',\n      'Total': round(dataFilteredDueTo.total) + '%'\n    });\n    setTableData2(tableData);\n    setTableFields2(['', 'Missing Data', 'Curtailment', 'Other', 'Total']);\n  };\n\n  var change = function change(ev) {};\n\n  var optionsScatter = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Diagnostics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['cm',\n            /*'cy','12w','12m',*/\n            'x'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n              fetchData({\n                generator: generator,\n                period: value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 16\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-center\",\n              style: {\n                width: '100%'\n              },\n              children: \"Turbine Average Wind Speed (m/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: graphData,\n              options: optionsScatter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              style: {\n                width: '100%'\n              },\n              children: \"Turbine Average Blade Pitch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Data Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData1,\n              fields: tableFields1,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Reasons for Filtered Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData2,\n              fields: tableFields2,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 25\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(Charts, \"kOr6PldlaaybkQuJGXD0+6bfdLc=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/diagnostics/diagnostics.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CSelect","CIcon","DataAPI","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","formatDate","round","getDateLabel","DateFilter","Scatter","rand","ctx","document","getElementById","Charts","labels","datasets","graphData","setGraphData","generator","setGenerator","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","park","setPark","date","setDate","dateRange","setDateRange","data","setData","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","curves","setCurves","performance","setPerformance","loadGenerators","fetchData","options","period","body","split","length","from","to","then","response","error","message","alert","generatorData","x","forEach","push","label","map","i","y","backgroundColor","id","processTableData1","dataUse","tableData","item","appendSymbol","info","usedData","Math","toString","replace","filteredData","total","setTableData1","setTableFields1","processTableData2","dataFilteredDueTo","missingData","curtailment","other","setTableData2","setTableFields2","change","ev","optionsScatter","animation","duration","tooltips","enabled","value","marginBottom","width","textAlign","tableData1","tableFields1","getBadge","status","tableData2","tableFields2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CSelect\r\n} from '@coreui/react'\r\n\r\n\r\n\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport {formatDate, round, getDateLabel, DateFilter} from '../../../helpers/utils.js'\r\n\r\nimport { Scatter } from 'react-chartjs-2';\r\n\r\nconst rand = () => {\r\n  return 2;\r\n}\r\n\r\n\r\nconst ctx = document.getElementById('x');\r\n\r\nconst Charts = () => {\r\n\r\n\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  const [generator, setGenerator] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [park, setPark] = useState();\r\n  const [date, setDate] = useState();\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [data, setData] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [curves, setCurves] = useState([]);\r\n  const [performance, setPerformance] = useState({});\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const fetchData = (options = {}) => {\r\n\r\n    const {period, generator} = options\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n\r\n    if (generator) body.generators = [generator];\r\n\r\n    // console.log('.....', period, period.split('-').length)\r\n\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    \r\n    DataAPI({\r\n      'endpoint': 'chart/pitchWindspeed',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n          // if (!response.generator) return(alert('No generator datasets'));\r\n\r\n          const generatorData = response.generator && response.generator[0].data;\r\n\r\n          setDataLoaded(true);\r\n          setData(response);\r\n\r\n          if (generatorData.curves.length==0) return;\r\n\r\n          const labels = [];\r\n\r\n          const curves = generatorData.curves;\r\n\r\n          curves[0].x.forEach(\r\n            x => {\r\n              labels.push(round(x))\r\n            }\r\n          );\r\n\r\n          const graphData = {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label:  curves[0].label,\r\n                data: curves[0].x.map((x, i) => ({ x, y: curves[0].y[i] })),\r\n                backgroundColor: '#003f5c',\r\n              },\r\n              {\r\n                label:  curves[1].label,\r\n                data: curves[1].x.map((x, i) => ({ x, y: curves[0].y[i] })),\r\n                backgroundColor: '#ef5675',\r\n              },\r\n            ],\r\n            backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\r\n        \r\n          }\r\n\r\n          setGraphData(graphData);\r\n\r\n        }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerator(response.generators[0].id);\r\n          setGenerators(response.generators);\r\n\r\n          fetchData({period: dateRange,  generator: response.generators[0].id});\r\n\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const processTableData1 = (dataUse) => {\r\n\r\n    const tableData = [];\r\n\r\n    dataUse.forEach(\r\n      item => {\r\n\r\n        const appendSymbol = (item.info=='As percentage of time' || item.info=='As percentage of MWh')?'%':'';\r\n\r\n        if (item.info == 'As MWh generated') {\r\n\r\n          var usedData = (Math.round(item.usedData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n          var filteredData = (Math.round(item.filteredData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n          var total = (Math.round(item.total)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n\r\n        } else {\r\n\r\n          var usedData = (round(item.usedData)+appendSymbol).replace('.',',');\r\n          var filteredData = (round(item.filteredData)+appendSymbol).replace('.',',');\r\n          var total = (round(item.total)+appendSymbol).replace('.',',');\r\n\r\n        }\r\n\r\n        tableData.push({\r\n          '': item.info,\r\n          'Used Data': usedData,\r\n          'Filtered Data': filteredData,\r\n          'Total': total\r\n        })\r\n\r\n      }\r\n    );\r\n\r\n    setTableData1(tableData);\r\n    setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\r\n\r\n  }\r\n\r\n\r\n  const processTableData2 = (dataFilteredDueTo) => {\r\n\r\n    const tableData = [];\r\n\r\n    tableData.push({\r\n          '': dataFilteredDueTo.info,\r\n          'Missing Data': round(dataFilteredDueTo.missingData)+'%',\r\n          'Curtailment': round(dataFilteredDueTo.curtailment)+'%',\r\n          'Other': round(dataFilteredDueTo.other)+'%',\r\n          'Total': round(dataFilteredDueTo.total)+'%'\r\n        })\r\n\r\n    setTableData2(tableData);\r\n    setTableFields2(['', 'Missing Data', 'Curtailment', 'Other', 'Total']);\r\n    \r\n  }\r\n\r\n\r\n  const change = (ev) => {\r\n  }\r\n\r\n  const optionsScatter = {\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n      <CCard className=\"mb-4\">\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"7\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Diagnostics\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n              </CCol>\r\n\r\n               <CCol sm=\"5\" class=\"text-right\">\r\n\r\n            <DateFilter value={dateRange} options={['cm',/*'cy','12w','12m',*/'x']} disabled={loading} onChange={(value) => { setDateRange(value); fetchData({generator: generator, period: value});}} />\r\n\r\n                            </CCol>\r\n\r\n            \r\n                            </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n\r\n        <CRow>\r\n          <CCol sm=\"7\">\r\n            <div style={{marginBottom:'50px'}}>\r\n              <div className=\"left-center\" style={{width: '100%'}}>Turbine Average Wind Speed (m/s)</div>\r\n                <Scatter data={graphData} options={optionsScatter} />\r\n              <div className=\"text-center\" style={{width: '100%'}}>Turbine Average Blade Pitch</div>\r\n            </div>\r\n          </CCol>\r\n          <CCol sm=\"5\">\r\n\r\n\r\n            {/* % data above Reference Power Curve: {round(performance['Percentage data above manufacturer power curve']) }%<br />\r\n            % data below Reference Power Curve: {round(performance['Percentage data below manufacturer power curve']) }%<br />\r\n            Performance index {round(performance['Performance index'])}%<br /><br /> */}\r\n\r\n            <h4>Data Use</h4>\r\n\r\n            <div style={{textAlign:'right'}}>\r\n                {dataLoaded || dataLoadError\r\n                  ? <CDataTable\r\n                  items={tableData1}\r\n                  fields={tableFields1}\r\n                  striped\r\n                  itemsPerPage={5}\r\n                  pagination\r\n                  scopedSlots = {{\r\n                    'status':\r\n                      (item)=>(\r\n                        <td>\r\n                          <CBadge color={getBadge(item.status)}>\r\n                            {item.status}\r\n                          </CBadge>\r\n                        </td>\r\n                      )\r\n\r\n                  }}\r\n                />\r\n                  : \r\n                  <ChartLoading/>\r\n              \r\n            }\r\n            </div>\r\n\r\n\r\n            <h4>Reasons for Filtered Data</h4>\r\n\r\n            <div style={{textAlign:'right'}}>\r\n\r\n            {dataLoaded || dataLoadError\r\n                  ? \r\n                  <CDataTable\r\n                  items={tableData2}\r\n                  fields={tableFields2}\r\n                  striped\r\n                  itemsPerPage={5}\r\n                  pagination\r\n                  scopedSlots = {{\r\n                    'status':\r\n                      (item)=>(\r\n                        <td>\r\n                          <CBadge color={getBadge(item.status)}>\r\n                            {item.status}\r\n                          </CBadge>\r\n                        </td>\r\n                      )\r\n\r\n                  }}\r\n                />\r\n                : \r\n                <ChartLoading/>\r\n            } \r\n            </div>\r\n\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n          \r\n          {/* <Scatter data={graphData} options={optionsScatter} /> */}\r\n        </CCardBody>\r\n\r\n      </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}