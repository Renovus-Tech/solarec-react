{"ast":null,"code":"import _readOnlyError from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\solar\\\\climate\\\\forecast.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport DataAPI from '../../../../helpers/DataAPI.js';\nimport { round } from '../../../../helpers/utils.js';\nimport { setCookie, getCookie } from '../../../../helpers/sessionCookie.js';\nimport moment from 'moment-timezone';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CSpinner, CLabel } from '@coreui/react';\nimport { Chart, Plugin } from 'chart.js';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { Line } from 'react-chartjs-2';\nimport arrow from '../../../../assets/arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SolarClimateForecast = function SolarClimateForecast() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataLoadError = _useState4[0],\n      setDataLoadError = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      arrowImage = _useState8[0],\n      setArrowImage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      datetimes = _useState10[0],\n      _setDatetimes = _useState10[1];\n\n  var datetimesRef = useRef(datetimes);\n\n  var setDatetimes = function setDatetimes(datetimes) {\n    datetimesRef.current = datetimes;\n\n    _setDatetimes(datetimes);\n  };\n\n  var _useState11 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      lineChartOneData = _useState12[0],\n      setLineChartOneData = _useState12[1];\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var arrowImage = new Image(22, 22);\n    arrowImage.src = arrow;\n\n    arrowImage.onload = function () {\n      setArrowImage(this);\n    };\n\n    DataAPI({\n      'endpoint': 'solar/weather',\n      'method': 'GET'\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload(); // if (response.error.message) {\n        //   return(alert(response.error.message))\n        // } else {\n        //   return(alert(response.error)) \n        // }\n      }\n\n      var graphData = {\n        labels: [],\n        datasets: []\n      };\n      graphData.labels = response.hours.filter(function (x, i) {\n        return i % 6 == 0;\n      }).map(function (x, i) {\n        return x.time;\n      });\n      var dataset = {\n        label: '',\n        borderColor: '#ff764a',\n        pointBackgroundColor: '#ef5675',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        data: response.hours.filter(function (x, i) {\n          return i % 6 == 0;\n        }).map(function (x, i) {\n          return x.downwardShortWaveRadiationFlux.sg;\n        })\n      };\n      graphData.datasets.push(dataset);\n      var datetimes = [];\n      response.hours.forEach(function (value, i) {\n        if (i % 6 == 0) datetimes.push(value.time);\n      });\n      setDatetimes(datetimes);\n      setLineChartOneData(graphData);\n      setLoading(false);\n    });\n  };\n\n  var plugins = [{\n    afterDraw: function afterDraw(chart) {\n      var ctx = chart.ctx;\n      var xAxis = chart.scales['x'];\n      var yAxis = chart.scales['y'];\n      xAxis.ticks.forEach(function (value, index) {\n        if (index % 2 == 0) {\n          var x = xAxis.getPixelForTick(index);\n          var datetime = datetimesRef.current[index].split('T');\n          datetime[0].split(), _readOnlyError(\"date\");\n          var month = datetime.month() + 1 > 9 ? datetime.month() + 1 : '0' + (datetime.month() + 1);\n          var day = datetime.date() > 9 ? datetime.date() : '0' + datetime.date();\n          var hour = datetime.hour() > 9 ? datetime.hour() : '0' + datetime.hour();\n          var minute = datetime.minutes() > 9 ? datetime.minutes() : '0' + datetime.minutes();\n          var date = day + \"-\" + month;\n          var time = hour + \":\" + minute;\n          ctx.font = \"11px Arial\";\n          ctx.fillText(date, x - 12, yAxis.bottom + 16);\n          ctx.fillText(time, x - 12, yAxis.bottom + 28);\n        }\n      });\n      ctx.font = \"12px Arial\";\n    }\n  }];\n  var options = {\n    type: 'line',\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: true\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      line: {\n        tension: .4\n      }\n    },\n    layout: {\n      padding: {\n        bottom: 80,\n        left: 20,\n        right: 20\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          display: false\n        }\n      },\n      y: {\n        min: 0,\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title: function title(tooltipItem) {\n            return '';\n          },\n          label: function label(tooltipItem) {\n            var datetime = moment(datetimes[tooltipItem.dataIndex]);\n            var month = datetime.month() + 1 > 9 ? datetime.month() + 1 : '0' + (datetime.month() + 1);\n            var day = datetime.date() > 9 ? datetime.date() : '0' + datetime.date();\n            var hour = datetime.hour() > 9 ? datetime.hour() : '0' + datetime.hour();\n            var minute = datetime.minutes() > 9 ? datetime.minutes() : '0' + datetime.minutes();\n            var date = day + \"-\" + month;\n            var time = hour + \":\" + minute;\n            return [\"Date: \" + date + \" \" + time, \"Irradiance: \" + round(tooltipItem.raw, 1) + ' m/s'];\n          }\n        }\n      },\n      legend: {\n        display: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Climate - Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"8\",\n          className: \"text-right d-flex flex-center flex-justify-end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          className: 'mb-5',\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"pb-2 mb-4 border-bottom\",\n              children: \"Irradiance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"W/m2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Line, {\n              data: lineChartOneData,\n              options: options,\n              plugins: plugins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(CSpinner, {\n          className: \"loading-spinner\",\n          color: \"#321fdb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(SolarClimateForecast, \"fdWlVoIjSECLTouuNy8K3CMWlXA=\");\n\n_c = SolarClimateForecast;\nexport default SolarClimateForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolarClimateForecast\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/solar/climate/forecast.js"],"names":["React","useEffect","useState","useRef","DataAPI","round","setCookie","getCookie","moment","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CSpinner","CLabel","Chart","Plugin","CChartLine","Line","arrow","SolarClimateForecast","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","arrowImage","setArrowImage","datetimes","_setDatetimes","datetimesRef","setDatetimes","current","labels","datasets","lineChartOneData","setLineChartOneData","fetchData","Image","src","onload","then","response","error","window","location","reload","graphData","hours","filter","x","i","map","time","dataset","label","borderColor","pointBackgroundColor","pointBorderColor","backgroundColor","data","downwardShortWaveRadiationFlux","sg","push","forEach","value","plugins","afterDraw","chart","ctx","xAxis","scales","yAxis","ticks","index","getPixelForTick","datetime","split","month","day","date","hour","minute","minutes","font","fillText","bottom","options","type","responsive","animation","duration","tooltips","enabled","legend","display","elements","line","tension","layout","padding","left","right","y","min","beginAtZero","tooltip","callbacks","title","tooltipItem","dataIndex","raw"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAAQC,KAAR,QAAoB,8BAApB;AACA,SAAQC,SAAR,EAAkBC,SAAlB,QAAkC,sCAAlC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SACEC,KADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,QARF,EASEC,MATF,QAUO,eAVP;AAYA,SACEC,KADF,EAEEC,MAFF,QAGO,UAHP;AAKA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA;;AAEjC,kBAAoCrB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOsB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0CvB,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOwB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA8BzB,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAO0B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoC3B,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAO4B,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAmC7B,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAO8B,SAAP;AAAA,MAAkBC,aAAlB;;AACA,MAAMC,YAAY,GAAG/B,MAAM,CAAC6B,SAAD,CAA3B;;AACA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAH,SAAS,EAAI;AAChCE,IAAAA,YAAY,CAACE,OAAb,GAAuBJ,SAAvB;;AACAC,IAAAA,aAAa,CAACD,SAAD,CAAb;AACD,GAHD;;AAKA,oBAAgD9B,QAAQ,CAAC;AACvDmC,IAAAA,MAAM,EAAE,EAD+C;AAEvDC,IAAAA,QAAQ,EAAE;AAF6C,GAAD,CAAxD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAKAvC,EAAAA,SAAS,CAAC,YAAM;AACdwC,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEtBZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAIC,UAAU,GAAG,IAAIY,KAAJ,CAAU,EAAV,EAAa,EAAb,CAAjB;AACAZ,IAAAA,UAAU,CAACa,GAAX,GAAiBrB,KAAjB;;AACAQ,IAAAA,UAAU,CAACc,MAAX,GAAoB,YAAW;AAC7Bb,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD;;AAIA3B,IAAAA,OAAO,CAAC;AACN,kBAAY,eADN;AAEN,gBAAU;AAFJ,KAAD,CAAP,CAGGyC,IAHH,CAIE,UAAAC,QAAQ,EAAI;AACVjB,MAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,UAAIiB,QAAQ,CAACC,KAAb,EAAoB;AAElBzC,QAAAA,SAAS,CAAC,eAAD,EAAkB,EAAlB,CAAT;AACAA,QAAAA,SAAS,CAAC,MAAD,EAAS,EAAT,CAAT;AACA0C,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAJkB,CAMlB;AACA;AACA;AACA;AACA;AACD;;AAED,UAAMC,SAAS,GAAG;AAChBd,QAAAA,MAAM,EAAE,EADQ;AAEhBC,QAAAA,QAAQ,EAAE;AAFM,OAAlB;AAKAa,MAAAA,SAAS,CAACd,MAAV,GAAmBS,QAAQ,CAACM,KAAT,CAAeC,MAAf,CAAuB,UAACC,CAAD,EAAGC,CAAH;AAAA,eAAUA,CAAC,GAAC,CAAF,IAAK,CAAf;AAAA,OAAvB,EAA2CC,GAA3C,CAAgD,UAACF,CAAD,EAAGC,CAAH,EAAS;AAC1E,eAAOD,CAAC,CAACG,IAAT;AACD,OAFkB,CAAnB;AAIA,UAAMC,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAG,EADM;AAEdC,QAAAA,WAAW,EAAE,SAFC;AAGdC,QAAAA,oBAAoB,EAAE,SAHR;AAIdC,QAAAA,gBAAgB,EAAE,aAJJ;AAKdC,QAAAA,eAAe,EAAE,aALH;AAMdC,QAAAA,IAAI,EAAElB,QAAQ,CAACM,KAAT,CAAeC,MAAf,CAAuB,UAACC,CAAD,EAAGC,CAAH;AAAA,iBAAUA,CAAC,GAAC,CAAF,IAAK,CAAf;AAAA,SAAvB,EAA2CC,GAA3C,CAAgD,UAACF,CAAD,EAAGC,CAAH,EAAS;AAC7D,iBAAOD,CAAC,CAACW,8BAAF,CAAiCC,EAAxC;AACD,SAFK;AANQ,OAAhB;AAUAf,MAAAA,SAAS,CAACb,QAAV,CAAmB6B,IAAnB,CAAwBT,OAAxB;AAEA,UAAM1B,SAAS,GAAG,EAAlB;AACAc,MAAAA,QAAQ,CAACM,KAAT,CAAegB,OAAf,CAAuB,UAACC,KAAD,EAAOd,CAAP,EAAa;AAClC,YAAIA,CAAC,GAAC,CAAF,IAAK,CAAT,EACEvB,SAAS,CAACmC,IAAV,CAAeE,KAAK,CAACZ,IAArB;AACH,OAHD;AAIAtB,MAAAA,YAAY,CAACH,SAAD,CAAZ;AAEAQ,MAAAA,mBAAmB,CAACW,SAAD,CAAnB;AAEAtB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAED,KApDH;AAsDD,GAhED;;AAkEA,MAAMyC,OAAO,GAAG,CAAC;AACfC,IAAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;AACA,UAAIC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa,GAAb,CAAZ;AACA,UAAIC,KAAK,GAAGJ,KAAK,CAACG,MAAN,CAAa,GAAb,CAAZ;AACAD,MAAAA,KAAK,CAACG,KAAN,CAAYT,OAAZ,CAAoB,UAACC,KAAD,EAAQS,KAAR,EAAkB;AAEpC,YAAIA,KAAK,GAAC,CAAN,IAAS,CAAb,EAAgB;AACd,cAAIxB,CAAC,GAAGoB,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CAAR;AAEA,cAAME,QAAQ,GAAG9C,YAAY,CAACE,OAAb,CAAqB0C,KAArB,EAA4BG,KAA5B,CAAkC,GAAlC,CAAjB;AACOD,UAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYC,KAAZ,EAAP;AACA,cAAMC,KAAK,GAAGF,QAAQ,CAACE,KAAT,KAAiB,CAAjB,GAAqB,CAArB,GAAyBF,QAAQ,CAACE,KAAT,KAAiB,CAA1C,GAA8C,OAAKF,QAAQ,CAACE,KAAT,KAAiB,CAAtB,CAA5D;AACA,cAAMC,GAAG,GAAGH,QAAQ,CAACI,IAAT,KAAkB,CAAlB,GAAsBJ,QAAQ,CAACI,IAAT,EAAtB,GAAwC,MAAIJ,QAAQ,CAACI,IAAT,EAAxD;AACA,cAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAT,KAAkB,CAAlB,GAAsBL,QAAQ,CAACK,IAAT,EAAtB,GAAwC,MAAKL,QAAQ,CAACK,IAAT,EAA1D;AACA,cAAMC,MAAM,GAAGN,QAAQ,CAACO,OAAT,KAAqB,CAArB,GAAyBP,QAAQ,CAACO,OAAT,EAAzB,GAA8C,MAAIP,QAAQ,CAACO,OAAT,EAAjE;AACA,cAAMH,IAAI,GAAGD,GAAG,GAAC,GAAJ,GAAQD,KAArB;AACA,cAAMzB,IAAI,GAAG4B,IAAI,GAAC,GAAL,GAASC,MAAtB;AACAb,UAAAA,GAAG,CAACe,IAAJ,GAAW,YAAX;AACAf,UAAAA,GAAG,CAACgB,QAAJ,CAAaL,IAAb,EAAmB9B,CAAC,GAAG,EAAvB,EAA2BsB,KAAK,CAACc,MAAN,GAAe,EAA1C;AACAjB,UAAAA,GAAG,CAACgB,QAAJ,CAAahC,IAAb,EAAmBH,CAAC,GAAG,EAAvB,EAA2BsB,KAAK,CAACc,MAAN,GAAe,EAA1C;AAED;AACF,OAlBD;AAmBAjB,MAAAA,GAAG,CAACe,IAAJ,GAAW,YAAX;AACD;AAzBc,GAAD,CAAhB;AA6BA,MAAMG,OAAO,GAAI;AACfC,IAAAA,IAAI,EAAE,MADS;AAEfC,IAAAA,UAAU,EAAE,IAFG;AAGfC,IAAAA,SAAS,EAAE;AAACC,MAAAA,QAAQ,EAAEnE,OAAO,GAAG,CAAH,GAAO;AAAzB,KAHI;AAIfoE,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE;AADD,KAJK;AAOfC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KAPO;AAUfC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAE;AADP;AADE,KAVK;AAefC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE;AACLd,QAAAA,MAAM,EAAE,EADH;AAELe,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF;AADL,KAfO;AAsBf/B,IAAAA,MAAM,EAAE;AACNrB,MAAAA,CAAC,EAAE;AACDuB,QAAAA,KAAK,EAAE;AACHsB,UAAAA,OAAO,EAAE;AADN;AADN,OADG;AAMNQ,MAAAA,CAAC,EAAE;AACDC,QAAAA,GAAG,EAAE,CADJ;AAEDC,QAAAA,WAAW,EAAE;AAFZ;AANG,KAtBO;AAiCfvC,IAAAA,OAAO,EAAE;AACPwC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,eAASC,WAAT,EAAqB;AAC1B,mBAAO,EAAP;AACD,WAHQ;AAITtD,UAAAA,KAAK,EAAE,eAASsD,WAAT,EAAsB;AAC3B,gBAAMjC,QAAQ,GAAGxE,MAAM,CAACwB,SAAS,CAACiF,WAAW,CAACC,SAAb,CAAV,CAAvB;AACA,gBAAMhC,KAAK,GAAGF,QAAQ,CAACE,KAAT,KAAiB,CAAjB,GAAqB,CAArB,GAAyBF,QAAQ,CAACE,KAAT,KAAiB,CAA1C,GAA8C,OAAKF,QAAQ,CAACE,KAAT,KAAiB,CAAtB,CAA5D;AACA,gBAAMC,GAAG,GAAGH,QAAQ,CAACI,IAAT,KAAkB,CAAlB,GAAsBJ,QAAQ,CAACI,IAAT,EAAtB,GAAwC,MAAIJ,QAAQ,CAACI,IAAT,EAAxD;AACA,gBAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAT,KAAkB,CAAlB,GAAsBL,QAAQ,CAACK,IAAT,EAAtB,GAAwC,MAAKL,QAAQ,CAACK,IAAT,EAA1D;AACA,gBAAMC,MAAM,GAAGN,QAAQ,CAACO,OAAT,KAAqB,CAArB,GAAyBP,QAAQ,CAACO,OAAT,EAAzB,GAA8C,MAAIP,QAAQ,CAACO,OAAT,EAAjE;AACA,gBAAMH,IAAI,GAAGD,GAAG,GAAC,GAAJ,GAAQD,KAArB;AACA,gBAAMzB,IAAI,GAAG4B,IAAI,GAAC,GAAL,GAASC,MAAtB;AACA,mBAAO,CAAC,WAASF,IAAT,GAAc,GAAd,GAAkB3B,IAAnB,EAAwB,iBAAepD,KAAK,CAAC4G,WAAW,CAACE,GAAb,EAAiB,CAAjB,CAApB,GAA0C,MAAlE,CAAP;AACD;AAbQ;AADJ,OADF;AAkBPjB,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AAlBD;AAjCM,GAAjB;AA0DA,sBAEI,QAAC,KAAD;AAAA,4BAEA,QAAC,WAAD;AAAA,6BACI,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE;AAAI,YAAA,EAAE,EAAC,SAAP;AAAiB,YAAA,SAAS,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAQE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,iBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFA,eAmBE,QAAC,SAAD;AAAA,gBAEK,CAACvE,OAAD,IAAYF,aAAZ,gBAEC;AAAA,+BAEE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAE,MAAjB;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE,QAAC,IAAD;AACE,cAAA,IAAI,EAAEa,gBADR;AAEE,cAAA,OAAO,EAAEoD,OAFX;AAGE,cAAA,OAAO,EAAErB;AAHX;AAAA;AAAA;AAAA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,eAFD,gBAmBC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AArBN;AAAA;AAAA;AAAA;AAAA,aAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ;AAsDD,CArOD;;GAAM/C,oB;;KAAAA,oB;AAuON,eAAeA,oBAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport DataAPI from '../../../../helpers/DataAPI.js'\r\nimport {round} from '../../../../helpers/utils.js'\r\nimport {setCookie,getCookie} from '../../../../helpers/sessionCookie.js'\r\nimport moment from 'moment-timezone';\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSpinner,\r\n  CLabel,\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  Chart,\r\n  Plugin\r\n} from 'chart.js';\r\n\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nimport arrow from '../../../../assets/arrow.png'\r\n\r\n\r\nconst SolarClimateForecast = () => {\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false)\r\n  const [dataLoadError, setDataLoadError] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [arrowImage, setArrowImage] = useState(null)\r\n  const [datetimes, _setDatetimes] = useState([])\r\n  const datetimesRef = useRef(datetimes);\r\n  const setDatetimes = datetimes => {\r\n    datetimesRef.current = datetimes;\r\n    _setDatetimes(datetimes);\r\n  };\r\n\r\n  const [lineChartOneData, setLineChartOneData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    var arrowImage = new Image(22,22);\r\n    arrowImage.src = arrow\r\n    arrowImage.onload = function() {\r\n      setArrowImage(this);\r\n    }\r\n\r\n    DataAPI({\r\n      'endpoint': 'solar/weather',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n\r\n          // if (response.error.message) {\r\n          //   return(alert(response.error.message))\r\n          // } else {\r\n          //   return(alert(response.error)) \r\n          // }\r\n        }\r\n\r\n        const graphData = {\r\n          labels: [],\r\n          datasets: []\r\n        }\r\n\r\n        graphData.labels = response.hours.filter( (x,i) => (i%6==0) ).map( (x,i) => {\r\n          return x.time;\r\n        })\r\n  \r\n        const dataset = {\r\n          label:  '',\r\n          borderColor: '#ff764a',\r\n          pointBackgroundColor: '#ef5675',\r\n          pointBorderColor: 'transparent',\r\n          backgroundColor: 'transparent',\r\n          data: response.hours.filter( (x,i) => (i%6==0) ).map( (x,i) => {\r\n            return x.downwardShortWaveRadiationFlux.sg;\r\n          })\r\n        }\r\n        graphData.datasets.push(dataset)\r\n  \r\n        const datetimes = []\r\n        response.hours.forEach((value,i) => {\r\n          if (i%6==0)\r\n            datetimes.push(value.time);\r\n        })\r\n        setDatetimes(datetimes)\r\n        \r\n        setLineChartOneData(graphData)\r\n\r\n        setLoading(false)\r\n\r\n      })\r\n\r\n  }\r\n\r\n  const plugins = [{\r\n    afterDraw: (chart) => {\r\n      let ctx = chart.ctx;\r\n      var xAxis = chart.scales['x'];\r\n      var yAxis = chart.scales['y'];\r\n      xAxis.ticks.forEach((value, index) => {\r\n        \r\n        if (index%2==0) {\r\n          var x = xAxis.getPixelForTick(index);\r\n        \r\n          const datetime = datetimesRef.current[index].split('T')\r\n          date = datetime[0].split()\r\n          const month = datetime.month()+1 > 9 ? datetime.month()+1 : '0'+(datetime.month()+1)\r\n          const day = datetime.date() > 9 ? datetime.date() : '0'+datetime.date()\r\n          const hour = datetime.hour() > 9 ? datetime.hour() : '0'+(datetime.hour())\r\n          const minute = datetime.minutes() > 9 ? datetime.minutes() : '0'+datetime.minutes()\r\n          const date = day+\"-\"+month\r\n          const time = hour+\":\"+minute\r\n          ctx.font = \"11px Arial\";\r\n          ctx.fillText(date, x - 12, yAxis.bottom + 16);\r\n          ctx.fillText(time, x - 12, yAxis.bottom + 28);\r\n          \r\n        }\r\n      });\r\n      ctx.font = \"12px Arial\";\r\n    }\r\n  }]\r\n\r\n\r\n  const options =  {\r\n    type: 'line',\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: true\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    elements: {\r\n      line: {\r\n          tension: .4\r\n      }\r\n    },\r\n    layout: {\r\n        padding: {\r\n            bottom: 80,\r\n            left: 20,\r\n            right: 20\r\n        }\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n            display: false\r\n        }\r\n      },\r\n      y: {\r\n        min: 0,\r\n        beginAtZero: true\r\n      }\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          title: function(tooltipItem){\r\n            return '';\r\n          },\r\n          label: function(tooltipItem) {\r\n            const datetime = moment(datetimes[tooltipItem.dataIndex])\r\n            const month = datetime.month()+1 > 9 ? datetime.month()+1 : '0'+(datetime.month()+1)\r\n            const day = datetime.date() > 9 ? datetime.date() : '0'+datetime.date()\r\n            const hour = datetime.hour() > 9 ? datetime.hour() : '0'+(datetime.hour())\r\n            const minute = datetime.minutes() > 9 ? datetime.minutes() : '0'+datetime.minutes()\r\n            const date = day+\"-\"+month\r\n            const time = hour+\":\"+minute\r\n            return [\"Date: \"+date+\" \"+time,\"Irradiance: \"+round(tooltipItem.raw,1) + ' m/s']\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        display: false\r\n      },\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n\r\n      <CCard>\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"4\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Climate - Forecast\r\n              </h3>\r\n              {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n            </CCol>\r\n\r\n            <CCol sm=\"8\" className=\"text-right d-flex flex-center flex-justify-end\">\r\n              {/* <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:1.2}}>Period</h6>\r\n              <DateFilter options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); }} /> */}\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n            {!loading || dataLoadError ? \r\n\r\n              <div>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Irradiance</h4>\r\n                    <div>W/m2</div>\r\n                    <Line\r\n                      data={lineChartOneData}\r\n                      options={options}\r\n                      plugins={plugins}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n  )\r\n}\r\n\r\nexport default SolarClimateForecast\r\n"]},"metadata":{},"sourceType":"module"}