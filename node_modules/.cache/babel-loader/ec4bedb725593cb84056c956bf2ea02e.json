{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\reports\\\\settings.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CAlert, CLabel } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport Tables from 'src/views/base/tables/Tables';\nimport { concat } from 'core-js/core/array';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Reports = function Reports() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      parksRows = _useState2[0],\n      setParksRows = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  useEffect(function () {\n    loadConfiguration();\n  }, []);\n\n  var loadConfiguration = function loadConfiguration() {\n    setLoading(true);\n    DataAPI({\n      'endpoint': 'report/configure',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (response.loaded) {\n        setLoaded(true);\n        curves[0].x.map(function (x, i) {\n          return {\n            x: x,\n            y: curves[0].y[i]\n          };\n        });\n        var tableData = []; // const tablefields = response.reports.map((x, i) => { \n        //   return x.title\n        // });\n        // tablefields.push('Wind Farm');\n\n        var reports = [];\n        response.reports.forEach(function (report, index) {\n          reports[report.id] = report.title;\n        });\n        var locations = [];\n        var rows = [];\n        response.locations.forEach(function (location, index) {\n          locations[location.id] = location.name;\n          rows[location.id] = [];\n        }); // tableData.push({\n        //   'Wind Farm': dataUse.info,\n        //   'Used Data': round(dataUse.usedData)+'%',\n        //   'Filtered Data': round(dataUse.filteredData)+'%',\n        //   'Total': round(dataUse.total)+'%'\n        // })\n\n        response.settings.forEach(function (setting, index) {\n          reports[setting.repId];\n          rows[setting.locId][setting.repId] = setting.selected;\n        });\n        rows.map(function (row, locId) {\n          var rowData = {};\n          row.map(function (setting, repId) {\n            rowData[repId] = setting.selected;\n          });\n          rowData['windFarm'] = locations[locId];\n          tableData.push(rowData);\n        }); // tableData.push({\n        //   'Wind Farm': locations[setting.locId],\n        //   reports[setting.repId]+'' : setting.selected,\n        // });\n\n        var tablefields = reports.map(function (x, i) {\n          return {\n            key: x.id,\n            label: x.title\n          };\n        });\n        tablefields.push({\n          key: 'windFarm',\n          label: 'Wind Farm'\n        });\n        setTableData(tableData);\n        setTableFields(tablefields);\n      }\n    });\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(CRow, {\n    children: /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"traffic\",\n        className: \"card-title mb-0\",\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small text-medium-emphasis\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n        children: \"Please select reports you wish to receive by e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, _this), parksRows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Reports, \"6Av7XVP6uRtv6rN4q7uop0aSv4w=\");\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/reports/settings.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CAlert","CLabel","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","Tables","concat","Reports","parksRows","setParksRows","loaded","setLoaded","loadConfiguration","setLoading","DataAPI","then","response","error","message","alert","curves","x","map","i","y","tableData","reports","forEach","report","index","id","title","locations","rows","location","name","settings","setting","repId","locId","selected","row","rowData","push","tablefields","key","label","setTableData","setTableFields"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CAlert,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\nimport { DocsLink } from 'src/reusable'\r\nimport Tables from 'src/views/base/tables/Tables'\r\nimport { concat } from 'core-js/core/array'\r\n\r\n\r\nconst Reports = () => {\r\n\r\n  const [parksRows, setParksRows] = useState('');\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    loadConfiguration();\r\n  }, []);\r\n\r\n\r\n  const loadConfiguration = () => {\r\n\r\n    setLoading(true);\r\n    \r\n    DataAPI({\r\n      'endpoint': 'report/configure',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        if (response.loaded) {\r\n          setLoaded(true);\r\n\r\n          curves[0].x.map((x, i) => ({ x, y: curves[0].y[i] }))\r\n\r\n\r\n          const tableData = [];\r\n          // const tablefields = response.reports.map((x, i) => { \r\n          //   return x.title\r\n          // });\r\n          // tablefields.push('Wind Farm');\r\n\r\n          let reports = [];\r\n          response.reports.forEach((report,index) => {\r\n            reports[report.id] = report.title;\r\n          });\r\n\r\n          let locations = [];\r\n          let rows = [];\r\n          response.locations.forEach((location,index) => {\r\n              locations[location.id] = location.name;\r\n              rows[location.id] = [];\r\n          });\r\n\r\n          // tableData.push({\r\n          //   'Wind Farm': dataUse.info,\r\n          //   'Used Data': round(dataUse.usedData)+'%',\r\n          //   'Filtered Data': round(dataUse.filteredData)+'%',\r\n          //   'Total': round(dataUse.total)+'%'\r\n          // })\r\n\r\n          response.settings.forEach((setting,index) => {\r\n            reports[setting.repId]\r\n            rows[setting.locId][setting.repId] = setting.selected\r\n\r\n          });\r\n\r\n          rows.map((row, locId) => {\r\n\r\n            let rowData = {};\r\n            row.map((setting, repId) => {\r\n              rowData[repId] = setting.selected;\r\n            });\r\n            rowData['windFarm'] = locations[locId];\r\n\r\n            tableData.push(rowData);\r\n\r\n          });\r\n\r\n          // tableData.push({\r\n          //   'Wind Farm': locations[setting.locId],\r\n          //   reports[setting.repId]+'' : setting.selected,\r\n\r\n          // });\r\n\r\n\r\n          const tablefields = reports.map((x, i) => ({\r\n              key: x.id,\r\n              label: x.title\r\n            }\r\n          ));\r\n          tablefields.push({\r\n            key: 'windFarm',\r\n            label: 'Wind Farm'\r\n          });\r\n\r\n          setTableData(tableData);\r\n          setTableFields(tablefields);\r\n\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  <CRow>\r\n          <CCol sm=\"6\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Reports\r\n            </h3>\r\n            <div className=\"small text-medium-emphasis\">Settings</div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"6\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Reports\r\n            </h3>\r\n            <div className=\"small text-medium-emphasis\">Settings</div>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CLabel>Please select reports you wish to receive by e-mail</CLabel>\r\n\r\n        {parksRows}\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"]},"metadata":{},"sourceType":"module"}