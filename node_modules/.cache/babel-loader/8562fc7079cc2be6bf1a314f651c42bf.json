{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\alarms\\\\alarms.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CDataTable, CRow, CCol, CSpinner, CSelect } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable'; // import {\n//   CTable,\n//   CTableHead,\n//   CTableRow,\n//   CTableHeaderCell,\n//   CTableBody,\n//   CTableDataCell,\n// } from '@coreui/react';\n\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, round, formatDate, getDateLabel } from '../../../helpers/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState('12w'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateRange = _useState2[0],\n      setDateRange = _useState2[1];\n\n  var _useState3 = useState('week'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataLoadError = _useState8[0],\n      setDataLoadError = _useState8[1];\n\n  var _useState9 = useState({\n    items: [],\n    fields: []\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tablehData = _useState10[0],\n      setTablehData = _useState10[1];\n\n  useEffect(function () {\n    loadGenerators();\n    refreshChart({\n      period: dateRange,\n      groupBy: groupBy\n    });\n  }, []);\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerators(response.generators);\n        fetchData({\n          period: dateRange,\n          groupBy: groupBy\n        });\n      }\n    });\n  };\n\n  var refreshChart = function refreshChart() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        groupBy = options.groupBy;\n    var body = {};\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    body.groupBy = groupBy;\n    setLoading(true);\n    DataAPI({\n      'endpoint': 'chart/alarms',\n      'body': body\n    }).then(function (responseData) {\n      setLoading(false);\n\n      if (responseData.error) {\n        setDataLoadError(true);\n\n        if (responseData.error.message) {\n          return alert(responseData.error.message);\n        } else {\n          return alert(responseData.error);\n        }\n      }\n\n      var dataKeys = ['from', 'to'].concat(_toConsumableArray(responseData.dataKeys.map(function (x) {\n        return x.replace('.0', '');\n      })));\n      var alarms = responseData.data.map(function (d) {\n        d.from = formatDate(d.from);\n        d.to = formatDate(d.to);\n        d.alarms = d.alarms.map(function (alarm, index) {\n          var rAlarm = {};\n          d[responseData.dataKeys[index].replace('.0', '')] = round(alarm) + '%';\n        });\n        delete d.alarms;\n        return d;\n      });\n      setTablehData({\n        items: alarms,\n        fields: dataKeys\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Alarms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          className: \"text-right d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n              fetchData({\n                period: dateRange,\n                groupBy: groupBy,\n                generator: ev.target.value\n              });\n            },\n            custom: true,\n            name: \"ccmonth\",\n            id: \"ccmonth\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"All generators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, _this), generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '60px'\n            },\n            children: \"Group by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            value: groupBy,\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGroupBy(ev.target.value);\n              refreshChart({\n                period: dateRange,\n                groupBy: ev.target.value\n              });\n            },\n            custom: true,\n            name: \"ccmonth\",\n            id: \"ccmonth\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"day\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              selected: true,\n              children: \"Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['y', 'cm', 'cy', '12w', '12m', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n              refreshChart({\n                period: value,\n                groupBy: groupBy\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, _this), !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CDataTable, {\n        striped: true,\n        items: tablehData.items,\n        fields: tablehData.fields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }, _this) : /*#__PURE__*/_jsxDEV(CCardBody, {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CSpinner, {\n        className: \"loading-spinner\",\n        color: \"#321fdb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"1B63EUAZrHF+GvFqSyDssmWMZdc=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/alarms/alarms.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CDataTable","CRow","CCol","CSpinner","CSelect","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","DataAPI","DateFilter","round","formatDate","getDateLabel","Charts","dateRange","setDateRange","groupBy","setGroupBy","loading","setLoading","dataLoadError","setDataLoadError","items","fields","tablehData","setTablehData","loadGenerators","refreshChart","period","then","response","dataLoaded","error","setGenerators","generators","fetchData","options","body","split","length","from","to","responseData","message","alert","dataKeys","map","x","replace","alarms","data","d","alarm","index","rAlarm","lineHeight","minWidth","ev","setGenerator","target","value","generator","oGenerator","id","code","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CDataTable,\r\n  CRow,\r\n  CCol,\r\n  CSpinner,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\nimport { DocsLink } from 'src/reusable'\r\n// import {\r\n//   CTable,\r\n//   CTableHead,\r\n//   CTableRow,\r\n//   CTableHeaderCell,\r\n//   CTableBody,\r\n//   CTableDataCell,\r\n// } from '@coreui/react';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {DateFilter, round, formatDate, getDateLabel} from '../../../helpers/utils.js'\r\n\r\nconst Charts = () => {\r\n\r\n  const [dateRange, setDateRange] = useState('12w');\r\n  const [groupBy, setGroupBy] = useState('week');\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n\r\n  const [tablehData, setTablehData] = useState({\r\n    items: [],\r\n    fields: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n    refreshChart({period: dateRange, groupBy: groupBy});\r\n    \r\n  }, []);\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n          setGenerators(response.generators);\r\n          fetchData({period: dateRange, groupBy: groupBy});\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  const refreshChart = (options = {}) => {\r\n\r\n    const {period, groupBy} = options\r\n\r\n    const body = {}\r\n    \r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n    body.groupBy = groupBy\r\n\r\n    setLoading(true);\r\n\r\n    DataAPI(\r\n      {\r\n      'endpoint': 'chart/alarms',\r\n      'body': body\r\n    }).then(function (responseData) {\r\n\r\n      setLoading(false);\r\n\r\n\r\n\r\n        if (responseData.error) {\r\n          setDataLoadError(true);\r\n           if (responseData.error.message) {\r\n            return(alert(responseData.error.message))\r\n           } else {\r\n            return(alert(responseData.error)) \r\n           }\r\n        }\r\n\r\n        const dataKeys = ['from', 'to', ...(responseData.dataKeys.map(x => {return x.replace('.0','')}))];\r\n\r\n        const alarms = responseData.data.map((d) => {\r\n\r\n          d.from = formatDate(d.from);\r\n          d.to = formatDate(d.to);\r\n          \r\n          d.alarms = d.alarms.map((alarm, index) => {\r\n\r\n            const rAlarm = {};\r\n\r\n            d[responseData.dataKeys[index].replace('.0','')] = round(alarm)+'%'\r\n\r\n          });\r\n          delete d.alarms;\r\n          return d;\r\n        });\r\n\r\n        setTablehData({\r\n          items: alarms,\r\n          fields: dataKeys\r\n        })\r\n      });\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Alarms\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n              </CCol>\r\n            \r\n              <CCol sm=\"7\" className=\"text-right d-flex\">\r\n                <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4,minWidth:'64px'}}>Generator</h6>\r\n                <CSelect disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); fetchData({period: dateRange, groupBy: groupBy, generator: ev.target.value});}} custom name=\"ccmonth\" id=\"ccmonth\">\r\n                  <option value=\"0\">All generators</option>\r\n                {generators.map((oGenerator) => (\r\n                                    <option value={oGenerator.id}>\r\n                                      {oGenerator.code}\r\n                                    </option>\r\n                                  ))}</CSelect>\r\n                <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n                <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); refreshChart({period: dateRange, groupBy: ev.target.value});}} custom name=\"ccmonth\" id=\"ccmonth\">\r\n                    <option value=\"day\">Day</option>\r\n                    <option value=\"week\" selected>Week</option>\r\n                    <option value=\"month\">Month</option>\r\n                </CSelect>\r\n                <h6 className=\"mr-2 ml-4\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','12w','12m','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); refreshChart({period: value, groupBy: groupBy});}} />\r\n            </CCol>\r\n                            </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n        {!loading || dataLoadError\r\n                    ? \r\n          <CCardBody>\r\n            <CDataTable\r\n              striped\r\n              items={tablehData.items}\r\n              fields={tablehData.fields}\r\n            />\r\n          </CCardBody>\r\n          :\r\n          <CCardBody style={{textAlign:'center'}}>\r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          </CCardBody>\r\n        }\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}