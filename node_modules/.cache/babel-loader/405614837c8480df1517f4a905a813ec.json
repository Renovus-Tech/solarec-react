{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\power-curve\\\\power-curve.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CDataTable, CBadge, CSelect, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle } from '@coreui/react';\nimport { CCard } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { Line } from 'react-chartjs-2';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, formatDate, round, getDateLabel } from '../../../helpers/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData1 = _useState2[0],\n      setTableData1 = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableFields1 = _useState4[0],\n      setTableFields1 = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tableData2 = _useState6[0],\n      setTableData2 = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tableFields2 = _useState8[0],\n      setTableFields2 = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      data = _useState14[0],\n      setData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      curves = _useState16[0],\n      setCurves = _useState16[1];\n\n  var _useState17 = useState('cm'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dateRange = _useState18[0],\n      setDateRange = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      labels = _useState20[0],\n      setLabels = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      generator = _useState22[0],\n      setGenerator = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      generators = _useState24[0],\n      setGenerators = _useState24[1];\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      performance = _useState26[0],\n      setPerformance = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      performanceItems = _useState28[0],\n      setPerformanceItems = _useState28[1];\n\n  var _useState29 = useState({}),\n      _useState30 = _slicedToArray(_useState29, 2),\n      graphOptions = _useState30[0],\n      setGraphOptions = _useState30[1];\n\n  var _useState31 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      graphData = _useState32[0],\n      setGraphData = _useState32[1];\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        generator = options.generator;\n    setLoading(true);\n    var body = {};\n    if (generator) body.generators = [generator]; // console.log('.....', period, period.split('-').length)\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    DataAPI({\n      'endpoint': 'chart/powerCurve',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      } // if (!response.generator) return(alert('No generator datasets'));\n\n\n      var generatorData = response.generator && response.generator[0].data;\n      setDataLoaded(true);\n      setData(response);\n\n      if (generatorData && generatorData.hasOwnProperty('curves')) {\n        setCurves(generatorData.curves);\n        refreshChart(generatorData.curves);\n      } else {\n        setCurves([]);\n      }\n\n      console.log('generatorData', generatorData);\n\n      if (generatorData) {\n        if (generatorData.hasOwnProperty('dataUse')) processTableData1(generatorData.dataUse);\n        if (generatorData.hasOwnProperty('dataFilteredDueTo')) processTableData2(generatorData.dataFilteredDueTo);\n        if (generatorData.hasOwnProperty('performance')) setPerformance(generatorData.performance);\n      }\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerator(response.generators[0].id);\n        setGenerators(response.generators);\n        fetchData({\n          period: dateRange,\n          generator: response.generators[0].id\n        });\n      }\n    });\n  };\n\n  var processTableData1 = function processTableData1(dataUse) {\n    var tableData = [];\n    dataUse.forEach(function (item) {\n      var appendSymbol = item.info == 'As percentage of time' || item.info == 'As percentage of MWh' ? '%' : '';\n\n      if (item.info == 'As MWh generated') {\n        var usedData = (Math.round(item.usedData) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        var filteredData = (Math.round(item.filteredData) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        var total = (Math.round(item.total) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      } else {\n        var usedData = (round(item.usedData) + appendSymbol).replace('.', ',');\n        var filteredData = (round(item.filteredData) + appendSymbol).replace('.', ',');\n        var total = (round(item.total) + appendSymbol).replace('.', ',');\n      }\n\n      tableData.push({\n        '': item.info,\n        'Used Data': usedData,\n        'Filtered Data': filteredData,\n        'Total': total\n      });\n    });\n    setTableData1(tableData);\n    setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\n  };\n\n  var processTableData2 = function processTableData2(dataFilteredDueTo) {\n    var tableData = [];\n    tableData.push({\n      '': dataFilteredDueTo.info,\n      'Missing Data': round(dataFilteredDueTo.missingData) + '%',\n      'Curtailment': round(dataFilteredDueTo.curtailment) + '%',\n      'Other': round(dataFilteredDueTo.other) + '%',\n      'Total': round(dataFilteredDueTo.total) + '%'\n    });\n    setTableData2(tableData);\n    setTableFields2(['', 'Missing Data', 'Curtailment', 'Other', 'Total']);\n  };\n\n  var refreshChart = function refreshChart(curves) {\n    if (curves.length == 0) return;\n    var graphData = {\n      labels: [],\n      datasets: [],\n      backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\n    };\n    var dataset = {\n      title: '',\n      labels: [],\n      label: \"Reference Power Curve\",\n      backgroundColor: 'red',\n      data: []\n    };\n    var dataset2 = {\n      labels: [],\n      label: \"Turbine Power Curve\",\n      backgroundColor: 'blue',\n      data: []\n    };\n    var dataset3 = {\n      labels: [],\n      label: \"y\",\n      backgroundColor: 'blue',\n      data: []\n    };\n    var labels = [];\n    curves[0].x.forEach(function (x) {\n      labels.push(round(x));\n    });\n    dataset.data = curves[0].y;\n    dataset2.data = curves[1].y;\n    dataset3.data = curves[2].y;\n    graphData.datasets.push(dataset);\n    graphData.datasets.push(dataset2); // graphData.datasets.push(dataset3);\n\n    graphData.labels = labels;\n    setGraphData(graphData);\n  };\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n\n    setGraphOptions({\n      animation: {\n        duration: 0\n      },\n      responsive: true,\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Month',\n            color: '#911',\n            font: {\n              family: 'Comic Sans MS',\n              size: 20,\n              weight: 'bold',\n              lineHeight: 1.2\n            },\n            padding: {\n              top: 20,\n              left: 0,\n              right: 0,\n              bottom: 0\n            }\n          }\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Value',\n            color: '#191',\n            font: {\n              family: 'Times',\n              size: 20,\n              style: 'normal',\n              lineHeight: 1.2\n            },\n            padding: {\n              top: 30,\n              left: 0,\n              right: 0,\n              bottom: 0\n            }\n          }\n        }\n      }\n    });\n  };\n\n  var performanceFields = ['a', 'b', 'c'];\n  var fields = ['', 'Used Data', 'Filtered Data', 'Total'];\n  var options = {\n    animation: {\n      duration: loading ? 0 : 1000\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Power Curve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"2\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n              fetchData({\n                period: dateRange,\n                generator: ev.target.value\n              });\n            },\n            custom: true,\n            name: \"ccmonth\",\n            id: \"ccmonth\",\n            children: generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['cm', 'cy', '12w', '12m', 'x'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n              fetchData({\n                generator: generator,\n                period: value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"left-center\",\n            style: {\n              width: '100%'\n            },\n            children: \"Power (KWh)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Line, {\n            data: graphData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text-center\",\n            style: {\n              width: '100%'\n            },\n            children: \"Wind speed (m/s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [\"% data above Reference Power Curve: \", round(performance['Percentage data above manufacturer power curve']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 121\n          }, _this), \"% data below Reference Power Curve: \", round(performance['Percentage data below manufacturer power curve']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 121\n          }, _this), \"Performance index \", round(performance['Performance index']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 73\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 79\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Data Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData1,\n              fields: tableFields1,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Reasons for Filtered Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData2,\n              fields: tableFields2,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"NWWAT63qcO+FB2wHkZi6p4pV79w=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/power-curve/power-curve.js"],"names":["React","useState","useEffect","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CDataTable","CBadge","CSelect","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","CCard","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","Line","DataAPI","DateFilter","formatDate","round","getDateLabel","Charts","tableData1","setTableData1","tableFields1","setTableFields1","tableData2","setTableData2","tableFields2","setTableFields2","dataLoaded","setDataLoaded","loading","setLoading","data","setData","curves","setCurves","dateRange","setDateRange","labels","setLabels","generator","setGenerator","generators","setGenerators","performance","setPerformance","performanceItems","setPerformanceItems","graphOptions","setGraphOptions","datasets","graphData","setGraphData","loadGenerators","fetchData","options","period","body","split","length","from","to","then","response","error","message","alert","generatorData","hasOwnProperty","refreshChart","console","log","processTableData1","dataUse","processTableData2","dataFilteredDueTo","id","tableData","forEach","item","appendSymbol","info","usedData","Math","toString","replace","filteredData","total","push","missingData","curtailment","other","backgroundColor","dataset","title","label","dataset2","dataset3","x","y","getBadge","status","animation","duration","responsive","scales","display","text","color","font","family","size","weight","lineHeight","padding","top","left","right","bottom","style","performanceFields","fields","ev","target","value","map","oGenerator","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CCard,\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {DateFilter, formatDate, round, getDateLabel} from '../../../helpers/utils.js'\r\n\r\nconst Charts = () => {\r\n\r\n  const [tableData1, setTableData1] = useState([]);\r\n  const [tableFields1, setTableFields1] = useState([]);\r\n  const [tableData2, setTableData2] = useState([]);\r\n  const [tableFields2, setTableFields2] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [curves, setCurves] = useState([]);\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [labels, setLabels] = useState([]);\r\n  const [generator, setGenerator] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [performance, setPerformance] = useState({});\r\n  const [performanceItems, setPerformanceItems] = useState([]);\r\n\r\n  const [graphOptions, setGraphOptions] = useState({});\r\n\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const fetchData = (options = {}) => {\r\n\r\n    const {period, generator} = options\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n\r\n    if (generator) body.generators = [generator];\r\n\r\n    // console.log('.....', period, period.split('-').length)\r\n\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/powerCurve',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n           if (response.error.message) {\r\n            return(alert(response.error.message))\r\n           } else {\r\n            return(alert(response.error)) \r\n           }\r\n        }\r\n\r\n          // if (!response.generator) return(alert('No generator datasets'));\r\n\r\n\r\n          const generatorData = response.generator && response.generator[0].data;\r\n\r\n          setDataLoaded(true);\r\n          setData(response);\r\n          \r\n\r\n          if(generatorData && generatorData.hasOwnProperty('curves')){\r\n            setCurves(generatorData.curves);\r\n            refreshChart(generatorData.curves);\r\n          } else {\r\n            setCurves([]);\r\n          }\r\n\r\n          console.log('generatorData', generatorData)\r\n\r\n          if (generatorData){\r\n            if(generatorData.hasOwnProperty('dataUse')) processTableData1(generatorData.dataUse);\r\n            if(generatorData.hasOwnProperty('dataFilteredDueTo')) processTableData2(generatorData.dataFilteredDueTo);\r\n            if(generatorData.hasOwnProperty('performance')) setPerformance(generatorData.performance);\r\n\r\n          }\r\n      }\r\n    );\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerator(response.generators[0].id);\r\n          setGenerators(response.generators);\r\n\r\n          fetchData({period: dateRange,  generator: response.generators[0].id});\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n    const processTableData1 = (dataUse) => {\r\n\r\n      const tableData = [];\r\n\r\n      dataUse.forEach(\r\n        item => {\r\n\r\n          const appendSymbol = (item.info=='As percentage of time' || item.info=='As percentage of MWh')?'%':'';\r\n\r\n          if (item.info == 'As MWh generated') {\r\n\r\n            var usedData = (Math.round(item.usedData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            var filteredData = (Math.round(item.filteredData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            var total = (Math.round(item.total)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n\r\n          } else {\r\n\r\n            var usedData = (round(item.usedData)+appendSymbol).replace('.',',');\r\n            var filteredData = (round(item.filteredData)+appendSymbol).replace('.',',');\r\n            var total = (round(item.total)+appendSymbol).replace('.',',');\r\n\r\n          }\r\n\r\n          \r\n\r\n          tableData.push({\r\n            '': item.info,\r\n            'Used Data': usedData,\r\n            'Filtered Data': filteredData,\r\n            'Total': total\r\n          })\r\n\r\n        }\r\n      );\r\n\r\n      setTableData1(tableData);\r\n      setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\r\n\r\n    }\r\n\r\n\r\n    const processTableData2 = (dataFilteredDueTo) => {\r\n\r\n      const tableData = [];\r\n\r\n      tableData.push({\r\n            '': dataFilteredDueTo.info,\r\n            'Missing Data': round(dataFilteredDueTo.missingData)+'%',\r\n            'Curtailment': round(dataFilteredDueTo.curtailment)+'%',\r\n            'Other': round(dataFilteredDueTo.other)+'%',\r\n            'Total': round(dataFilteredDueTo.total)+'%'\r\n          })\r\n\r\n      setTableData2(tableData);\r\n      setTableFields2(['', 'Missing Data', 'Curtailment', 'Other', 'Total']);\r\n      \r\n    }\r\n\r\n    const refreshChart = (curves) => {\r\n\r\n\r\n\r\n\r\n          if (curves.length==0) return;\r\n          \r\n\r\n          const graphData = {\r\n              labels: [],\r\n              datasets: [],\r\n              backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\r\n            }\r\n\r\n\r\n            const dataset = {\r\n              title: '',\r\n              labels: [],\r\n              label: \"Reference Power Curve\",\r\n              backgroundColor: 'red',\r\n              data: []\r\n            };\r\n\r\n            const dataset2 = {\r\n              labels: [],\r\n              label: \"Turbine Power Curve\",\r\n              backgroundColor: 'blue',\r\n              data: []\r\n            };\r\n\r\n            const dataset3 = {\r\n              labels: [],\r\n              label: \"y\",\r\n              backgroundColor: 'blue',\r\n              data: []\r\n            };\r\n\r\n            const labels = [];\r\n\r\n\r\n            curves[0].x.forEach(\r\n              x => {\r\n                labels.push(round(x))\r\n              }\r\n            );\r\n\r\n\r\n            dataset.data = curves[0].y;\r\n            dataset2.data = curves[1].y;\r\n            dataset3.data = curves[2].y;\r\n            \r\n\r\n            graphData.datasets.push(dataset);\r\n            graphData.datasets.push(dataset2);\r\n            // graphData.datasets.push(dataset3);\r\n\r\n            graphData.labels = labels;\r\n\r\n            setGraphData(graphData);\r\n\r\n\r\n    }\r\n\r\n\r\n    const getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n\r\n\r\n  setGraphOptions({\r\n                animation: {\r\n        duration: 0\r\n    },\r\n                responsive: true,\r\n                scales: {\r\n                  x: {\r\n                    display: true,\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Month',\r\n                      color: '#911',\r\n                      font: {\r\n                        family: 'Comic Sans MS',\r\n                        size: 20,\r\n                        weight: 'bold',\r\n                        lineHeight: 1.2,\r\n                      },\r\n                      padding: {top: 20, left: 0, right: 0, bottom: 0}\r\n                    }\r\n                  },\r\n                  y: {\r\n                    display: true,\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Value',\r\n                      color: '#191',\r\n                      font: {\r\n                        family: 'Times',\r\n                        size: 20,\r\n                        style: 'normal',\r\n                        lineHeight: 1.2\r\n                      },\r\n                      padding: {top: 30, left: 0, right: 0, bottom: 0}\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n}\r\n\r\n\r\nconst performanceFields = [\r\n  'a', 'b', 'c'\r\n];\r\n\r\nconst fields = [\r\n  '',\r\n  'Used Data',\r\n  'Filtered Data',\r\n  'Total'\r\n]\r\n\r\nconst options = {animation: {duration: loading ? 0 : 1000}};\r\n\r\n  return (\r\n    <CCard>\r\n\r\n    <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"7\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Power Curve\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n              </CCol>\r\n            <CCol sm=\"2\" class=\"text-right\">\r\n            <CSelect disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); fetchData({period: dateRange, generator: ev.target.value});}} custom name=\"ccmonth\" id=\"ccmonth\">\r\n\r\n            {generators.map((oGenerator) => (\r\n                                <option value={oGenerator.id}>\r\n                                  {oGenerator.id}\r\n                                </option>\r\n                              ))}</CSelect>\r\n            </CCol>\r\n            <CCol sm=\"3\" class=\"text-right\">\r\n            <DateFilter value={dateRange} options={['cm','cy','12w','12m','x']} disabled={loading} onChange={(value) => { setDateRange(value); fetchData({generator: generator, period: value});}} />\r\n\r\n                            </CCol>\r\n                            </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n      \r\n      <CCardBody>\r\n\r\n        \r\n        <CRow>\r\n          <CCol sm=\"7\">\r\n            <div class=\"left-center\" style={{width: '100%'}}>Power (KWh)</div>\r\n            <Line data={graphData} options={options} />\r\n            <div class=\"text-center\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n          </CCol>\r\n          <CCol sm=\"5\">\r\n\r\n\r\n            % data above Reference Power Curve: {round(performance['Percentage data above manufacturer power curve']) }%<br />\r\n            % data below Reference Power Curve: {round(performance['Percentage data below manufacturer power curve']) }%<br />\r\n            Performance index {round(performance['Performance index'])}%<br /><br />\r\n\r\n\r\n\r\n              <h4>Data Use</h4>\r\n\r\n              <div style={{textAlign:'right'}}>\r\n              <CDataTable\r\n                items={tableData1}\r\n                fields={tableFields1}\r\n                striped\r\n                itemsPerPage={5}\r\n                pagination\r\n                scopedSlots = {{\r\n                  'status':\r\n                    (item)=>(\r\n                      <td>\r\n                        <CBadge color={getBadge(item.status)}>\r\n                          {item.status}\r\n                        </CBadge>\r\n                      </td>\r\n                    )\r\n\r\n                }}\r\n              />\r\n              </div>\r\n\r\n              <div style={{textAlign:'right'}}>\r\n              <h4>Reasons for Filtered Data</h4>\r\n\r\n              <CDataTable\r\n                items={tableData2}\r\n                fields={tableFields2}\r\n                striped\r\n                itemsPerPage={5}\r\n                pagination\r\n                scopedSlots = {{\r\n                  'status':\r\n                    (item)=>(\r\n                      <td>\r\n                        <CBadge color={getBadge(item.status)}>\r\n                          {item.status}\r\n                        </CBadge>\r\n                      </td>\r\n                    )\r\n\r\n                }}\r\n              />\r\n              </div>\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n      </CCardBody>\r\n\r\n\r\n\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}