{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\budget\\\\budget.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CDataTable, CBadge, CSelect, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle, CSpinner } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, formatDate, formatDate2, round, getDateLabel, formatNumber } from '../../../helpers/utils.js';\nimport { getCookie, setCookie } from '../../../helpers/sessionCookie.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Budget = function Budget() {\n  _s();\n\n  var currentYear = new Date().getFullYear();\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataLoadError = _useState4[0],\n      setDataLoadError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(currentYear),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fiscalYear = _useState8[0],\n      setFiscalYear = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addEstimatedCurtailments = _useState10[0],\n      setAddEstimatedCurtailments = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      parks = _useState12[0],\n      setParks = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      parksLoaded = _useState14[0],\n      setParksLoaded = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      park = _useState16[0],\n      setPark = _useState16[1];\n\n  var _useState17 = useState(\"Estimate 1\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      estimatesLabel1 = _useState18[0],\n      setEstimatesLabel1 = _useState18[1];\n\n  var _useState19 = useState(\"Estimate 2\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      estimatesLabel2 = _useState20[0],\n      setEstimatesLabel2 = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      estimates1 = _useState22[0],\n      setEstimates1 = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      estimates2 = _useState24[0],\n      setEstimates2 = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      cumulativeEstimates1 = _useState26[0],\n      setCumulativeEstimates1 = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      cumulativeEstimates2 = _useState28[0],\n      setCumulativeEstimates2 = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      difference1 = _useState30[0],\n      setDifference1 = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      difference2 = _useState32[0],\n      setDifference2 = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      cumulativeDifference1 = _useState34[0],\n      setCumulativeDifference1 = _useState34[1];\n\n  var _useState35 = useState([]),\n      _useState36 = _slicedToArray(_useState35, 2),\n      cumulativeDifference2 = _useState36[0],\n      setCumulativeDifference2 = _useState36[1];\n\n  var _useState37 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      graphData1 = _useState38[0],\n      setGraphData1 = _useState38[1];\n\n  var _useState39 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState40 = _slicedToArray(_useState39, 2),\n      graphData2 = _useState40[0],\n      setGraphData2 = _useState40[1];\n\n  useEffect(function () {\n    fetchParks();\n  }, []);\n\n  var fetchParks = function fetchParks() {\n    DataAPI({\n      'endpoint': 'security/authenticate/location',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.status == 401) {\n          setCookie('name', '');\n          setCookie('parkType', '');\n          window.location.reload();\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (!parksLoaded) {\n        setParks(response);\n        setParksLoaded(true);\n        setPark(response[0].id);\n      }\n    });\n  };\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n    body.locIds = [park];\n    body.fiscalYear = fiscalYear;\n    body.addEstimatedCurtailments = addEstimatedCurtailments;\n    DataAPI({\n      'endpoint': 'chart/budget',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var budgetData = response.budgetData;\n      setDataLoaded(true);\n      if (budgetData.length == 0) return;\n      setEstimatesLabel1(budgetData[0].estimates[0].label);\n      setEstimatesLabel2(budgetData[0].estimates[1].label);\n      setEstimates1(budgetData.map(function (x, i) {\n        return x.estimates[0].estimateMwh;\n      }));\n      setEstimates2(budgetData.map(function (x, i) {\n        return x.estimates[1].estimateMwh;\n      }));\n      var graphData = {\n        labels: budgetData.map(function (x, i) {\n          var startDate = new Date(x.startDate);\n          return months[startDate.getMonth()];\n        }),\n        datasets: [{\n          label: estimatesLabel1,\n          data: estimates1,\n          borderColor: '#bc5090',\n          backgroundColor: '#bc5090',\n          order: 1\n        }, {\n          label: estimatesLabel2,\n          data: estimates2,\n          borderColor: '#7a5195',\n          backgroundColor: '#7a5195',\n          order: 1\n        }, {\n          label: 'Actual Production',\n          data: budgetData.map(function (x, i) {\n            return x.actualProductionMwh;\n          }),\n          borderColor: '#ffa600',\n          backgroundColor: '#ffa600',\n          type: 'line',\n          order: 0\n        }]\n      };\n      var dif1 = budgetData.map(function (x, i) {\n        return x.estimates[0].actualVsEstimate;\n      });\n      var dif2 = budgetData.map(function (x, i) {\n        return x.estimates[1].actualVsEstimate;\n      });\n      setDifference1(dif1);\n      setDifference2(dif2);\n      setGraphData1(graphData);\n    });\n    DataAPI({\n      'endpoint': 'chart/budgetCumulative',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var budgetData = response.budgetData;\n      setDataLoaded(true);\n      if (budgetData.length == 0) return;\n      setCumulativeEstimates1(budgetData.map(function (x, i) {\n        return x.estimates[0].estimateMwh;\n      }));\n      setCumulativeEstimates2(budgetData.map(function (x, i) {\n        return x.estimates[1].estimateMwh;\n      }));\n      var graphData = {\n        labels: budgetData.map(function (x, i) {\n          var startDate = new Date(x.startDate);\n          return months[startDate.getMonth()];\n        }),\n        datasets: [{\n          label: budgetData[0].estimates[0].label,\n          data: cumulativeEstimates1,\n          borderColor: '#bc5090',\n          backgroundColor: '#bc5090',\n          order: 1\n        }, {\n          label: budgetData[0].estimates[1].label,\n          data: cumulativeEstimates2,\n          borderColor: '#7a5195',\n          backgroundColor: '#7a5195',\n          order: 1\n        }, {\n          label: 'Actual Production',\n          data: budgetData.map(function (x, i) {\n            return x.actualProductionMwh;\n          }),\n          borderColor: '#ffa600',\n          backgroundColor: '#ffa600',\n          type: 'line',\n          order: 0\n        }]\n      };\n      var dif1 = budgetData.map(function (x, i) {\n        return x.estimates[0].actualVsEstimate;\n      });\n      var dif2 = budgetData.map(function (x, i) {\n        return x.estimates[1].actualVsEstimate;\n      });\n      setCumulativeDifference1(dif1);\n      setCumulativeDifference2(dif2);\n      setGraphData2(graphData);\n    });\n  };\n\n  var options = {\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: true\n    }\n  };\n\n  var optionsGraph1 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        // mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            if (tooltipItem.dataset.label === \"Actual Production\") {\n              return [tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw, 1)) + 'MWh', \"% Difference vs. \" + estimatesLabel1 + \": \" + difference1[tooltipItem.dataIndex] + \" %\", \"% Difference vs. \" + estimatesLabel2 + \": \" + difference2[tooltipItem.dataIndex] + \" %\"];\n            }\n\n            var unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %';\n          }\n        }\n      }\n    }\n  });\n\n  var optionsGraph2 = _objectSpread(_objectSpread({}, options), {}, {\n    plugins: {\n      tooltip: {\n        // mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            if (tooltipItem.dataset.label === \"Actual Production\") {\n              return [tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw, 1)) + 'MWh', \"% Difference vs. \" + estimatesLabel1 + \": \" + cumulativeDifference1[tooltipItem.dataIndex] + \" %\", \"% Difference vs. \" + estimatesLabel2 + \": \" + cumulativeDifference2[tooltipItem.dataIndex] + \" %\"];\n            }\n\n            var unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %';\n          }\n        }\n      }\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"8\",\n          className: \"text-right d-flex px-2 flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Fiscal Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            custom: true,\n            name: \"fiscalYear\",\n            id: \"fiscalYear\",\n            className: \"\",\n            onChange: function onChange(ev) {\n              setFiscalYear(ev.target.value);\n            },\n            children: [0, 1, 2, 3, 4].map(function (x) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currentYear - x,\n                children: currentYear - x\n              }, currentYear - x, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '170px'\n            },\n            children: \"Add Estimated Curtailments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            custom: true,\n            defaultValue: \"1\",\n            name: \"addEstimatedCurtailments\",\n            id: \"addEstimatedCurtailments\",\n            className: \"\",\n            onChange: function onChange(ev) {\n              setAddEstimatedCurtailments(ev.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Yes\"\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Park\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            defaultValue: park,\n            custom: true,\n            name: \"park\",\n            id: \"park\",\n            className: \"\",\n            onChange: function onChange(ev) {\n              setPark(ev.target.value);\n            },\n            children: parks && parks.map(function (park) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: park.id,\n                children: park.name\n              }, park.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading || !parksLoaded,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: (loading || dataLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Monthly Production\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"MWh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: graphData1,\n                options: optionsGraph1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Cumulative Production\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"MWh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: graphData2,\n                options: optionsGraph2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Budget, \"eeXhQC2QgurK+2GmhdStJZ+4p0g=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/budget/budget.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CDataTable","CBadge","CSelect","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","CSpinner","DocsLink","DataAPI","DateFilter","formatDate","formatDate2","round","getDateLabel","formatNumber","getCookie","setCookie","Bar","Budget","currentYear","Date","getFullYear","months","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","fiscalYear","setFiscalYear","addEstimatedCurtailments","setAddEstimatedCurtailments","parks","setParks","parksLoaded","setParksLoaded","park","setPark","estimatesLabel1","setEstimatesLabel1","estimatesLabel2","setEstimatesLabel2","estimates1","setEstimates1","estimates2","setEstimates2","cumulativeEstimates1","setCumulativeEstimates1","cumulativeEstimates2","setCumulativeEstimates2","difference1","setDifference1","difference2","setDifference2","cumulativeDifference1","setCumulativeDifference1","cumulativeDifference2","setCumulativeDifference2","labels","datasets","graphData1","setGraphData1","graphData2","setGraphData2","fetchParks","then","response","error","status","window","location","reload","alert","id","fetchData","body","locIds","message","budgetData","length","estimates","label","map","x","i","estimateMwh","graphData","startDate","getMonth","data","borderColor","backgroundColor","order","actualProductionMwh","type","dif1","actualVsEstimate","dif2","options","responsive","animation","duration","tooltips","enabled","optionsGraph1","plugins","tooltip","callbacks","tooltipItem","dataset","raw","dataIndex","unit","optionsGraph2","lineHeight","minWidth","ev","target","value","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CSpinner\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, formatDate, formatDate2, round, getDateLabel, formatNumber} from '../../../helpers/utils.js'\r\nimport {getCookie,setCookie} from '../../../helpers/sessionCookie.js'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Budget = () => {\r\n\r\n  const currentYear = new Date().getFullYear()\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [fiscalYear, setFiscalYear] = useState(currentYear);\r\n  const [addEstimatedCurtailments, setAddEstimatedCurtailments] = useState(true);\r\n  const [parks, setParks] = useState([]);\r\n  const [parksLoaded, setParksLoaded] = useState(false);\r\n  const [park, setPark] = useState(null);\r\n  const [estimatesLabel1, setEstimatesLabel1] = useState(\"Estimate 1\");\r\n  const [estimatesLabel2, setEstimatesLabel2] = useState(\"Estimate 2\");\r\n  const [estimates1, setEstimates1] = useState([]);\r\n  const [estimates2, setEstimates2] = useState([]);\r\n  const [cumulativeEstimates1, setCumulativeEstimates1] = useState([]);\r\n  const [cumulativeEstimates2, setCumulativeEstimates2] = useState([]);\r\n  const [difference1, setDifference1] = useState([]);\r\n  const [difference2, setDifference2] = useState([]);\r\n  const [cumulativeDifference1, setCumulativeDifference1] = useState([]);\r\n  const [cumulativeDifference2, setCumulativeDifference2] = useState([]);\r\n  const [graphData1, setGraphData1] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [graphData2, setGraphData2] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    fetchParks();\r\n  },[]);\r\n\r\n\r\n  const fetchParks = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'security/authenticate/location',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.status == 401) {\r\n            setCookie('name', ''); \r\n            setCookie('parkType', ''); \r\n            window.location.reload(); \r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n        \r\n        if (!parksLoaded) {\r\n          setParks(response);\r\n          setParksLoaded(true);\r\n          setPark(response[0].id)\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.locIds = [park];\r\n    body.fiscalYear = fiscalYear\r\n    body.addEstimatedCurtailments = addEstimatedCurtailments\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/budget',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        const budgetData = response.budgetData;\r\n\r\n        setDataLoaded(true);\r\n\r\n        if (budgetData.length==0) return;\r\n\r\n        setEstimatesLabel1(budgetData[0].estimates[0].label)\r\n        setEstimatesLabel2(budgetData[0].estimates[1].label)\r\n        setEstimates1(budgetData.map((x, i) => { return x.estimates[0].estimateMwh }))\r\n        setEstimates2(budgetData.map((x, i) => { return x.estimates[1].estimateMwh }))\r\n\r\n        const graphData = {\r\n          labels: budgetData.map((x, i) => { \r\n            const startDate = new Date(x.startDate);\r\n            return months[startDate.getMonth()]; \r\n          }),\r\n          datasets: [\r\n            {\r\n              label: estimatesLabel1,\r\n              data: estimates1,\r\n              borderColor: '#bc5090',\r\n              backgroundColor: '#bc5090',\r\n              order: 1\r\n            },\r\n            {\r\n              label: estimatesLabel2,\r\n              data: estimates2,\r\n              borderColor: '#7a5195',\r\n              backgroundColor: '#7a5195',\r\n              order: 1\r\n            },\r\n            {\r\n              label: 'Actual Production',\r\n              data: budgetData.map((x, i) => { return x.actualProductionMwh }),\r\n              borderColor: '#ffa600',\r\n              backgroundColor: '#ffa600',\r\n              type: 'line',\r\n              order: 0\r\n            },\r\n          ],\r\n        }\r\n\r\n        const dif1 = budgetData.map((x, i) => { return x.estimates[0].actualVsEstimate })\r\n        const dif2 = budgetData.map((x, i) => { return x.estimates[1].actualVsEstimate })\r\n        setDifference1(dif1)\r\n        setDifference2(dif2)\r\n\r\n        setGraphData1(graphData);\r\n\r\n      }\r\n    );\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/budgetCumulative',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        const budgetData = response.budgetData;\r\n\r\n        setDataLoaded(true);\r\n\r\n        if (budgetData.length==0) return;\r\n\r\n        setCumulativeEstimates1(budgetData.map((x, i) => { return x.estimates[0].estimateMwh }))\r\n        setCumulativeEstimates2(budgetData.map((x, i) => { return x.estimates[1].estimateMwh }))\r\n\r\n        const graphData = {\r\n          labels: budgetData.map((x, i) => { \r\n            const startDate = new Date(x.startDate);\r\n            return months[startDate.getMonth()]; \r\n          }),\r\n          datasets: [\r\n            {\r\n              label: budgetData[0].estimates[0].label,\r\n              data: cumulativeEstimates1,\r\n              borderColor: '#bc5090',\r\n              backgroundColor: '#bc5090',\r\n              order: 1\r\n            },\r\n            {\r\n              label: budgetData[0].estimates[1].label,\r\n              data: cumulativeEstimates2,\r\n              borderColor: '#7a5195',\r\n              backgroundColor: '#7a5195',\r\n              order: 1\r\n            },\r\n            {\r\n              label: 'Actual Production',\r\n              data: budgetData.map((x, i) => { return x.actualProductionMwh }),\r\n              borderColor: '#ffa600',\r\n              backgroundColor: '#ffa600',\r\n              type: 'line',\r\n              order: 0\r\n            },\r\n          ],\r\n        }\r\n\r\n        const dif1 = budgetData.map((x, i) => { return x.estimates[0].actualVsEstimate })\r\n        const dif2 = budgetData.map((x, i) => { return x.estimates[1].actualVsEstimate })\r\n        setCumulativeDifference1(dif1)\r\n        setCumulativeDifference2(dif2)\r\n\r\n        setGraphData2(graphData);\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: true\r\n    }\r\n  };\r\n\r\n  const optionsGraph1 =  {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        // mode: 'index',\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            if (tooltipItem.dataset.label === \"Actual Production\")  {\r\n              return [\r\n                tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw,1)) + 'MWh',\r\n                \"% Difference vs. \" + estimatesLabel1 + \": \" + difference1[tooltipItem.dataIndex] + \" %\",\r\n                \"% Difference vs. \" + estimatesLabel2 + \": \" + difference2[tooltipItem.dataIndex] + \" %\"\r\n            \r\n              ];\r\n            }\r\n            let unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %'\r\n              \r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const optionsGraph2 =  {\r\n    ...options,\r\n    plugins: {\r\n      tooltip: {\r\n        // mode: 'index',\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            if (tooltipItem.dataset.label === \"Actual Production\")  {\r\n              return [\r\n                tooltipItem.dataset.label + ': ' + formatNumber(round(tooltipItem.raw,1)) + 'MWh',\r\n                \"% Difference vs. \" + estimatesLabel1 + \": \" + cumulativeDifference1[tooltipItem.dataIndex] + \" %\",\r\n                \"% Difference vs. \" + estimatesLabel2 + \": \" + cumulativeDifference2[tooltipItem.dataIndex] + \" %\"\r\n            \r\n              ];\r\n            }\r\n            let unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %'\r\n              \r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"4\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Budget\r\n            </h3>\r\n            {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n          </CCol>\r\n\r\n          <CCol sm=\"8\" className=\"text-right d-flex px-2 flex-center\">\r\n            <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Fiscal Year</h6>\r\n            <CSelect disabled={loading} custom name=\"fiscalYear\" id=\"fiscalYear\" className=\"\" onChange={(ev) => {setFiscalYear(ev.target.value);}}>\r\n              {[0,1,2,3,4].map((x) => (\r\n                                <option key={currentYear-x} value={currentYear-x}>\r\n                                  {currentYear-x}\r\n                                </option>\r\n                              ))}\r\n            </CSelect>\r\n\r\n            <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'170px'}}>Add Estimated Curtailments</h6>\r\n            <CSelect disabled={loading} custom defaultValue={\"1\"} name=\"addEstimatedCurtailments\" id=\"addEstimatedCurtailments\" className=\"\" onChange={(ev) => {setAddEstimatedCurtailments(ev.target.value);}}>\r\n              <option key={1} value=\"1\">Yes</option>\r\n              <option value=\"0\">No</option>\r\n            </CSelect>\r\n\r\n            <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Park</h6>\r\n            <CSelect disabled={loading} defaultValue={park} custom name=\"park\" id=\"park\" className=\"\" onChange={(ev) => {setPark(ev.target.value);}}>\r\n                {parks && parks.map((park) => (\r\n                    <option key={park.id} value={park.id}>\r\n                      {park.name}\r\n                    </option>\r\n                      ))}\r\n            </CSelect>\r\n\r\n            <CButton color=\"primary\" disabled={loading || !parksLoaded} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n          </CCol>\r\n\r\n          </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n\r\n        { (loading || dataLoaded) &&\r\n          <div>\r\n\r\n            { !loading || dataLoadError ? \r\n              <div>\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Monthly Production</h4>\r\n                    <div>MWh</div>\r\n                    <Bar \r\n                      data={graphData1}\r\n                      options={optionsGraph1} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Cumulative Production</h4>\r\n                    <div>MWh</div>\r\n                    <Bar \r\n                      data={graphData2}\r\n                      options={optionsGraph2} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Budget\r\n"]},"metadata":{},"sourceType":"module"}