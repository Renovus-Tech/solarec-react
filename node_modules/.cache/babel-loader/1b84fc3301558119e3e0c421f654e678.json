{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _regeneratorRuntime = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigPrinter = exports.ChainFormatter = void 0;\n\nfunction _gensync() {\n  var data = require(\"gensync\");\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar ChainFormatter = {\n  Programmatic: 0,\n  Config: 1\n};\nexports.ChainFormatter = ChainFormatter;\nvar Formatter = {\n  title: function title(type, callerName, filepath) {\n    var title = \"\";\n\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n\n    return title;\n  },\n  loc: function loc(index, envName) {\n    var loc = \"\";\n\n    if (index != null) {\n      loc += \".overrides[\".concat(index, \"]\");\n    }\n\n    if (envName != null) {\n      loc += \".env[\\\"\".concat(envName, \"\\\"]\");\n    }\n\n    return loc;\n  },\n  optionsAndDescriptors: /*#__PURE__*/_regeneratorRuntime.mark(function optionsAndDescriptors(opt) {\n    var content, pluginDescriptors, presetDescriptors;\n    return _regeneratorRuntime.wrap(function optionsAndDescriptors$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            content = Object.assign({}, opt.options);\n            delete content.overrides;\n            delete content.env;\n            _context.t0 = _toConsumableArray;\n            return _context.delegateYield(opt.plugins(), \"t1\", 5);\n\n          case 5:\n            _context.t2 = _context.t1;\n            pluginDescriptors = (0, _context.t0)(_context.t2);\n\n            if (pluginDescriptors.length) {\n              content.plugins = pluginDescriptors.map(function (d) {\n                return descriptorToConfig(d);\n              });\n            }\n\n            _context.t3 = _toConsumableArray;\n            return _context.delegateYield(opt.presets(), \"t4\", 10);\n\n          case 10:\n            _context.t5 = _context.t4;\n            presetDescriptors = (0, _context.t3)(_context.t5);\n\n            if (presetDescriptors.length) {\n              content.presets = _toConsumableArray(presetDescriptors).map(function (d) {\n                return descriptorToConfig(d);\n              });\n            }\n\n            return _context.abrupt(\"return\", JSON.stringify(content, undefined, 2));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, optionsAndDescriptors);\n  })\n};\n\nfunction descriptorToConfig(d) {\n  var _d$file;\n\n  var name = (_d$file = d.file) == null ? void 0 : _d$file.request;\n\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      name = \"[Function: \".concat(d.value.toString().substr(0, 50), \" ... ]\");\n    }\n  }\n\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nvar ConfigPrinter = /*#__PURE__*/function () {\n  function ConfigPrinter() {\n    _classCallCheck(this, ConfigPrinter);\n\n    this._stack = [];\n  }\n\n  _createClass(ConfigPrinter, [{\n    key: \"configure\",\n    value: function configure(enabled, type, _ref) {\n      var _this = this;\n\n      var callerName = _ref.callerName,\n          filepath = _ref.filepath;\n      if (!enabled) return function () {};\n      return function (content, index, envName) {\n        _this._stack.push({\n          type: type,\n          callerName: callerName,\n          filepath: filepath,\n          content: content,\n          index: index,\n          envName: envName\n        });\n      };\n    }\n  }, {\n    key: \"output\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function output() {\n      var configs;\n      return _regeneratorRuntime.wrap(function output$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this._stack.length === 0)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"\");\n\n            case 2:\n              return _context2.delegateYield(_gensync().all(this._stack.map(function (s) {\n                return ConfigPrinter.format(s);\n              })), \"t0\", 3);\n\n            case 3:\n              configs = _context2.t0;\n              return _context2.abrupt(\"return\", configs.join(\"\\n\\n\"));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, output, this);\n    })\n  }], [{\n    key: \"format\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function format(config) {\n      var title, loc, content;\n      return _regeneratorRuntime.wrap(function format$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              title = Formatter.title(config.type, config.callerName, config.filepath);\n              loc = Formatter.loc(config.index, config.envName);\n              if (loc) title += \" \".concat(loc);\n              return _context3.delegateYield(Formatter.optionsAndDescriptors(config.content), \"t0\", 4);\n\n            case 4:\n              content = _context3.t0;\n              return _context3.abrupt(\"return\", \"\".concat(title, \"\\n\").concat(content));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, format);\n    })\n  }]);\n\n  return ConfigPrinter;\n}();\n\nexports.ConfigPrinter = ConfigPrinter;","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/@babel/core/lib/config/printer.js"],"names":["Object","defineProperty","exports","value","ConfigPrinter","ChainFormatter","_gensync","data","require","Programmatic","Config","Formatter","title","type","callerName","filepath","loc","index","envName","optionsAndDescriptors","opt","content","assign","options","overrides","env","plugins","pluginDescriptors","length","map","d","descriptorToConfig","presets","presetDescriptors","JSON","stringify","undefined","_d$file","name","file","request","toString","substr","_stack","enabled","push","all","s","format","configs","join","config"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigPrinter = exports.ChainFormatter = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst ChainFormatter = {\n  Programmatic: 0,\n  Config: 1\n};\nexports.ChainFormatter = ChainFormatter;\nconst Formatter = {\n  title(type, callerName, filepath) {\n    let title = \"\";\n\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n\n    return title;\n  },\n\n  loc(index, envName) {\n    let loc = \"\";\n\n    if (index != null) {\n      loc += `.overrides[${index}]`;\n    }\n\n    if (envName != null) {\n      loc += `.env[\"${envName}\"]`;\n    }\n\n    return loc;\n  },\n\n  *optionsAndDescriptors(opt) {\n    const content = Object.assign({}, opt.options);\n    delete content.overrides;\n    delete content.env;\n    const pluginDescriptors = [...(yield* opt.plugins())];\n\n    if (pluginDescriptors.length) {\n      content.plugins = pluginDescriptors.map(d => descriptorToConfig(d));\n    }\n\n    const presetDescriptors = [...(yield* opt.presets())];\n\n    if (presetDescriptors.length) {\n      content.presets = [...presetDescriptors].map(d => descriptorToConfig(d));\n    }\n\n    return JSON.stringify(content, undefined, 2);\n  }\n\n};\n\nfunction descriptorToConfig(d) {\n  var _d$file;\n\n  let name = (_d$file = d.file) == null ? void 0 : _d$file.request;\n\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      name = `[Function: ${d.value.toString().substr(0, 50)} ... ]`;\n    }\n  }\n\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nclass ConfigPrinter {\n  constructor() {\n    this._stack = [];\n  }\n\n  configure(enabled, type, {\n    callerName,\n    filepath\n  }) {\n    if (!enabled) return () => {};\n    return (content, index, envName) => {\n      this._stack.push({\n        type,\n        callerName,\n        filepath,\n        content,\n        index,\n        envName\n      });\n    };\n  }\n\n  static *format(config) {\n    let title = Formatter.title(config.type, config.callerName, config.filepath);\n    const loc = Formatter.loc(config.index, config.envName);\n    if (loc) title += ` ${loc}`;\n    const content = yield* Formatter.optionsAndDescriptors(config.content);\n    return `${title}\\n${content}`;\n  }\n\n  *output() {\n    if (this._stack.length === 0) return \"\";\n    const configs = yield* _gensync().all(this._stack.map(s => ConfigPrinter.format(s)));\n    return configs.join(\"\\n\\n\");\n  }\n\n}\n\nexports.ConfigPrinter = ConfigPrinter;"]},"metadata":{},"sourceType":"script"}