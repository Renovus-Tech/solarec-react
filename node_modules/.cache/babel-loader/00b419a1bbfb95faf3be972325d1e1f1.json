{"ast":null,"code":"import _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\budget\\\\budget.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CDataTable, CBadge, CSelect, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle, CSpinner } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, formatDate, formatDate2, round, getDateLabel, formatNumber } from '../../../helpers/utils.js';\nimport { getCookie } from '../../../helpers/sessionCookie.js';\nimport { months } from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Budget = function Budget() {\n  _s();\n\n  var currentYear = new Date().getFullYear();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataLoadError = _useState4[0],\n      setDataLoadError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      curves = _useState10[0],\n      setCurves = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filtersSelected = _useState12[0],\n      setFiltersSelected = _useState12[1];\n\n  var _useState13 = useState(currentYear),\n      _useState14 = _slicedToArray(_useState13, 2),\n      fiscalYear = _useState14[0],\n      setFiscalYear = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      addEstimatedCurtailments = _useState16[0],\n      setAddEstimatedCurtailments = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      parks = _useState18[0],\n      setParks = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      parksLoaded = _useState20[0],\n      setParksLoaded = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      park = _useState22[0],\n      setPark = _useState22[1];\n\n  var _useState23 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState24 = _slicedToArray(_useState23, 2),\n      graphData = _useState24[0],\n      setGraphData = _useState24[1];\n\n  var _useState25 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      graphData2 = _useState26[0],\n      setGraphData2 = _useState26[1];\n\n  useEffect(function () {\n    fetchParks();\n  });\n\n  var fetchParks = function fetchParks() {\n    DataAPI({\n      'endpoint': 'security/authenticate/location',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!parksLoaded) {\n        setParks(response);\n        setParksLoaded(true);\n      }\n    });\n  };\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n    body.location = getCookie('location');\n    body.fiscalYear = fiscalYear;\n    body.addEstimatedCurtailments = addEstimatedCurtailments;\n    body.park = park;\n    DataAPI({\n      'endpoint': 'chart/budget',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      var budgetData = response.budgetData;\n      setDataLoaded(true);\n      if (budgetData.length == 0) return;\n      var graphData = {\n        labels: budgetData.map(function (x, i) {\n          var startDate = new Date(x.startDate);\n          return months[startDate.getMonth()];\n        }),\n        datasets: [{\n          label: budgetData[0].estimates[0].label,\n          data: budgetData.map(function (x, i) {\n            return x.estimates[0].estimateMwh;\n          }),\n          borderColor: '#7a5195',\n          backgroundColor: '#7a5195',\n          order: 1\n        }, {\n          label: budgetData[0].estimates[1].label,\n          data: budgetData.map(function (x, i) {\n            return x.estimates[1].estimateMwh;\n          }),\n          borderColor: '#bc5090',\n          backgroundColor: '#bc5090',\n          order: 1\n        }, {\n          label: 'Actual Production',\n          data: curves.map(function (x, i) {\n            return x.actualProductionMwh;\n          }),\n          borderColor: '#ffa600',\n          backgroundColor: '#ffa600',\n          type: 'line',\n          order: 0\n        }]\n      };\n      setGraphData1(graphData);\n    });\n  };\n\n  var options = {\n    responsive: true,\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      enabled: true\n    }\n  };\n\n  var optionsGraph1 = _objectSpread(_objectSpread({}, options), {}, {\n    scales: {\n      yDeviation: {\n        type: 'linear',\n        display: true,\n        position: 'left'\n      },\n      yWindSpeed: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        beginAtZero: false,\n        grid: {\n          drawOnChartArea: false // only want the grid lines for one axis to show up\n\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        mode: 'index',\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %'; // let decimals = tooltipItem.dataset.label === \"Average Wind Speed\" ? 1 : 0\n\n            return tooltipItem.dataset.label + ': ' + round(tooltipItem.raw, 1) + unit;\n          }\n        }\n      }\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"8\",\n          className: \"text-right d-flex px-2 flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Fiscal Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            custom: true,\n            name: \"fiscalYear\",\n            id: \"fiscalYear\",\n            className: \"\",\n            onChange: function onChange(ev) {\n              setFiscalYear(ev.target.value);\n            },\n            children: [0, 1, 2, 3, 4].map(function (x) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currentYear - x,\n                children: currentYear - x\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '170px'\n            },\n            children: \"Add Estimated Curtailments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            custom: true,\n            name: \"addEstimatedCurtailments\",\n            id: \"addEstimatedCurtailments\",\n            className: \"\",\n            onChange: function onChange(ev) {\n              setAddEstimatedCurtailments(ev.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Park\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            custom: true,\n            name: \"park\",\n            id: \"park\",\n            className: \"\",\n            onChange: function onChange(ev) {\n              setPark(ev.target.value);\n            },\n            children: parks && parks.map(function (park) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: park.id,\n                children: park.name\n              }, park.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading || !parksLoaded,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          className: 'mb-5',\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"pb-2 mb-4 border-bottom\",\n              children: \"Monthly Production\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"MWh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: graphData1,\n              options: optionsGraph1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(CSpinner, {\n          className: \"loading-spinner\",\n          color: \"#321fdb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Budget, \"iZs/rv1mE1AbO07p8KCGBlnzlfI=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/budget/budget.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CDataTable","CBadge","CSelect","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","CSpinner","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","DataAPI","DateFilter","formatDate","formatDate2","round","getDateLabel","formatNumber","getCookie","months","Budget","currentYear","Date","getFullYear","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","data","setData","curves","setCurves","filtersSelected","setFiltersSelected","fiscalYear","setFiscalYear","addEstimatedCurtailments","setAddEstimatedCurtailments","parks","setParks","parksLoaded","setParksLoaded","park","setPark","labels","datasets","graphData","setGraphData","graphData2","setGraphData2","fetchParks","then","response","fetchData","body","location","error","message","alert","budgetData","length","map","x","i","startDate","getMonth","label","estimates","estimateMwh","borderColor","backgroundColor","order","actualProductionMwh","type","setGraphData1","options","responsive","animation","duration","tooltips","enabled","optionsGraph1","scales","yDeviation","display","position","yWindSpeed","beginAtZero","grid","drawOnChartArea","plugins","tooltip","mode","callbacks","tooltipItem","unit","dataset","raw","lineHeight","minWidth","ev","target","value","id","name","graphData1"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CSpinner\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, formatDate, formatDate2, round, getDateLabel, formatNumber} from '../../../helpers/utils.js'\r\nimport {getCookie} from '../../../helpers/sessionCookie.js'\r\nimport { months } from 'moment'\r\n\r\nconst Budget = () => {\r\n\r\n  const currentYear = new Date().getFullYear()\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [curves, setCurves] = useState([]);\r\n  const [filtersSelected, setFiltersSelected] = useState(false);\r\n  const [fiscalYear, setFiscalYear] = useState(currentYear);\r\n  const [addEstimatedCurtailments, setAddEstimatedCurtailments] = useState(true);\r\n  const [parks, setParks] = useState([]);\r\n  const [parksLoaded, setParksLoaded] = useState(false);\r\n  const [park, setPark] = useState(null);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [graphData2, setGraphData2] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    fetchParks();\r\n  });\r\n\r\n\r\n  const fetchParks = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'security/authenticate/location',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!parksLoaded) {\r\n          setParks(response);\r\n          setParksLoaded(true);\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n    body.location = getCookie('location');\r\n    body.fiscalYear = fiscalYear\r\n    body.addEstimatedCurtailments = addEstimatedCurtailments\r\n    body.park = park\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/budget',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        const budgetData = response.budgetData;\r\n\r\n        setDataLoaded(true);\r\n\r\n        if (budgetData.length==0) return;\r\n\r\n        const graphData = {\r\n          labels: budgetData.map((x, i) => { \r\n            const startDate = new Date(x.startDate);\r\n            return months[startDate.getMonth()]; \r\n          }),\r\n          datasets: [\r\n            {\r\n              label: budgetData[0].estimates[0].label,\r\n              data: budgetData.map((x, i) => { return x.estimates[0].estimateMwh }),\r\n              borderColor: '#7a5195',\r\n              backgroundColor: '#7a5195',\r\n              order: 1\r\n            },\r\n            {\r\n              label: budgetData[0].estimates[1].label,\r\n              data: budgetData.map((x, i) => { return x.estimates[1].estimateMwh }),\r\n              borderColor: '#bc5090',\r\n              backgroundColor: '#bc5090',\r\n              order: 1\r\n            },\r\n            {\r\n              label: 'Actual Production',\r\n              data: curves.map((x, i) => { return x.actualProductionMwh }),\r\n              borderColor: '#ffa600',\r\n              backgroundColor: '#ffa600',\r\n              type: 'line',\r\n              order: 0\r\n            },\r\n          ],\r\n        }\r\n\r\n        setGraphData1(graphData);\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    animation: {duration: loading ? 0 : 1000},\r\n    tooltips: {\r\n      enabled: true\r\n    }\r\n  };\r\n\r\n  const optionsGraph1 =  {\r\n    ...options,\r\n    scales: {\r\n      yDeviation: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'left',\r\n      },\r\n      yWindSpeed: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'right',\r\n        beginAtZero: false,\r\n        grid: {\r\n          drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        mode: 'index',\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n              let unit = tooltipItem.dataset.label === \"Average Wind Speed\" ? ' m/s' : ' %'\r\n              // let decimals = tooltipItem.dataset.label === \"Average Wind Speed\" ? 1 : 0\r\n              return tooltipItem.dataset.label + ': ' + round(tooltipItem.raw,1) + unit;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"4\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Budget\r\n            </h3>\r\n            {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n          </CCol>\r\n\r\n          <CCol sm=\"8\" className=\"text-right d-flex px-2 flex-center\">\r\n            <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Fiscal Year</h6>\r\n            <CSelect disabled={loading} custom name=\"fiscalYear\" id=\"fiscalYear\" className=\"\" onChange={(ev) => {setFiscalYear(ev.target.value);}}>\r\n              {[0,1,2,3,4].map((x) => (\r\n                                <option value={currentYear-x}>\r\n                                  {currentYear-x}\r\n                                </option>\r\n                              ))}\r\n            </CSelect>\r\n\r\n            <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'170px'}}>Add Estimated Curtailments</h6>\r\n            <CSelect disabled={loading} custom name=\"addEstimatedCurtailments\" id=\"addEstimatedCurtailments\" className=\"\" onChange={(ev) => {setAddEstimatedCurtailments(ev.target.value);}}>\r\n              <option value=\"1\">Yes</option>\r\n              <option value=\"0\">No</option>\r\n            </CSelect>\r\n\r\n            <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Park</h6>\r\n            <CSelect disabled={loading} custom name=\"park\" id=\"park\" className=\"\" onChange={(ev) => {setPark(ev.target.value);}}>\r\n                {parks && parks.map((park) => (\r\n                    <option key={park.id} value={park.id}>\r\n                      {park.name}\r\n                    </option>\r\n                      ))}\r\n            </CSelect>\r\n\r\n            <CButton color=\"primary\" disabled={loading || !parksLoaded} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n          </CCol>\r\n\r\n          </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n\r\n        {!loading || dataLoadError ? \r\n\r\n          <div>\r\n\r\n            <CRow className={'mb-5'}>\r\n              <CCol>\r\n                <h4 className=\"pb-2 mb-4 border-bottom\" >Monthly Production</h4>\r\n                <div>MWh</div>\r\n                <Bar \r\n                  data={graphData1}\r\n                  options={optionsGraph1} \r\n                />\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </div>\r\n        : \r\n          <div className='text-center'>\r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          </div>\r\n        }\r\n\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Budget\r\n"]},"metadata":{},"sourceType":"module"}