{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\climate\\\\summary.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, getDateLabel, formatDate, formatDate2, round } from '../../../helpers/utils.js';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CSelect, CButton, CRow, CCol, CLabel, CSpinner } from '@coreui/react';\nimport { CChartLine, CChartPolarArea } from '@coreui/react-chartjs';\nimport { Bar } from 'react-chartjs-2';\nimport { DocsLink } from 'src/reusable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ClimateSummary = function ClimateSummary() {\n  _s();\n\n  var _useState = useState('y'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateRange = _useState2[0],\n      setDateRange = _useState2[1];\n\n  var _useState3 = useState('day'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupBy = _useState4[0],\n      setGroupBy = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataLoaded = _useState8[0],\n      setDataLoaded = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoadError = _useState10[0],\n      setDataLoadError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      generatorsLoaded = _useState12[0],\n      setGeneratorsLoaded = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedGenerators = _useState14[0],\n      setSelectedGenerators = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filterSubmitted = _useState16[0],\n      setFilterSubmitted = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      generators = _useState18[0],\n      setGenerators = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      generatorColors = _useState20[0],\n      setGeneratorColors = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      generatorsSelected = _useState22[0],\n      setGeneratorsSelected = _useState22[1];\n\n  var _useState23 = useState(true),\n      _useState24 = _slicedToArray(_useState23, 2),\n      metMastSelected = _useState24[0],\n      setMetMastSelected = _useState24[1];\n\n  var _useState25 = useState(true),\n      _useState26 = _slicedToArray(_useState25, 2),\n      allSelected = _useState26[0],\n      setAllSelected = _useState26[1];\n\n  var _useState27 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      barChartOneData = _useState28[0],\n      setBarChartOneData = _useState28[1];\n\n  var _useState29 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState30 = _slicedToArray(_useState29, 2),\n      barChartTwoData = _useState30[0],\n      setBarChartTwoData = _useState30[1];\n\n  var _useState31 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      barChartThreeData = _useState32[0],\n      setBarChartThreeData = _useState32[1];\n\n  var _useState33 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      barChartFourData = _useState34[0],\n      setBarChartFourData = _useState34[1];\n\n  var _useState35 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState36 = _slicedToArray(_useState35, 2),\n      barChartFiveData = _useState36[0],\n      setBarChartFiveData = _useState36[1];\n\n  var colors = ['#003f5c', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600', '#9ceb01'];\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var body = {};\n\n    if (dateRange && dateRange.split('--').length == 2) {\n      body.from = dateRange.split('--')[0];\n      body.to = dateRange.split('--')[1];\n    } else {\n      body.period = dateRange;\n    }\n\n    body.groupBy = groupBy;\n    body.generators = selectedGenerators;\n    DataAPI({\n      'endpoint': 'chart/climate',\n      'method': 'POST',\n      'body': body\n    }).then(function (responseData) {\n      if (responseData.error && responseData.error.message) {\n        setDataLoadError(true);\n        alert(responseData.error.message);\n      }\n\n      setLoading(false);\n\n      if (responseData && responseData.graphs) {\n        var labels = responseData.graphs[0].data.map(function (x, i) {\n          return x.datetimeFrom.split(' ')[0];\n        });\n        var graphData1 = {\n          labels: labels,\n          datasets: []\n        };\n        var graphData2 = {\n          labels: labels,\n          datasets: []\n        };\n        var graphData3 = {\n          labels: labels,\n          datasets: []\n        };\n        var graphData4 = {\n          labels: labels,\n          datasets: []\n        };\n        var graphData5 = {\n          labels: labels,\n          datasets: []\n        };\n\n        if (metMastSelected) {\n          var dataset1MetMast = {\n            label: 'Met Mast Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.mmWindSpeed;\n            }),\n            backgroundColor: '#f32e2e'\n          };\n          var dataset2MetMast = {\n            label: 'Met Mast Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.mmTemperature;\n            }),\n            backgroundColor: '#f32e2e'\n          };\n          var dataset3MetMast = {\n            label: 'Met Mast Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.mmAirDensity;\n            }),\n            backgroundColor: '#f32e2e'\n          };\n          var dataset4MetMast = {\n            label: 'Met Mast Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.mmWindDirection;\n            }),\n            backgroundColor: '#f32e2e'\n          };\n          var dataset5MetMast = {\n            label: 'Met Mast Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.mmTurbulenceIntensity;\n            }),\n            backgroundColor: '#f32e2e'\n          };\n          graphData1.datasets.push(dataset1MetMast);\n          graphData2.datasets.push(dataset2MetMast);\n          graphData3.datasets.push(dataset3MetMast);\n          graphData4.datasets.push(dataset4MetMast);\n          graphData5.datasets.push(dataset5MetMast);\n        }\n\n        if (allSelected) {\n          var datasetAllDefault = {\n            label: 'Turbine Average',\n            backgroundColor: '#222222'\n          };\n\n          var dataset1All = _objectSpread(_objectSpread({}, datasetAllDefault), {}, {\n            label: 'Turbine Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taWindSpeed;\n            }),\n            backgroundColor: '#222222'\n          });\n\n          var dataset2All = {\n            label: 'Turbine Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taTemperature;\n            }),\n            backgroundColor: '#222222'\n          };\n          var dataset4All = {\n            label: 'Turbine Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taWindDirection;\n            }),\n            backgroundColor: '#222222'\n          };\n          var dataset5All = {\n            label: 'Turbine Average',\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.taTurbulenceIntensity;\n            }),\n            backgroundColor: '#222222'\n          };\n          graphData1.datasets.push(dataset1All);\n          graphData2.datasets.push(dataset2All);\n          graphData4.datasets.push(dataset4All);\n          graphData5.datasets.push(dataset5All);\n        }\n\n        responseData.graphs[0].gen_code.forEach(function (gen, index) {\n          var dataset1 = {\n            label: gen,\n            backgroundColor: generatorColors[gen],\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.genWindSpeed[index];\n            })\n          };\n          var dataset4 = {\n            label: gen,\n            backgroundColor: generatorColors[gen],\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.genWindDirection[index];\n            })\n          };\n          var dataset5 = {\n            label: gen,\n            backgroundColor: generatorColors[gen],\n            data: responseData.graphs[0].data.map(function (x, i) {\n              return x.genTubulenceInstensity[index];\n            })\n          };\n          graphData1.datasets.push(dataset1);\n          graphData4.datasets.push(dataset4);\n          graphData5.datasets.push(dataset5);\n        });\n        setBarChartOneData(graphData1);\n        setBarChartTwoData(graphData2);\n        setBarChartThreeData(graphData3);\n        setBarChartFourData(graphData4);\n        setBarChartFiveData(graphData5);\n      }\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerators(response.generators); // setSelectedGenerators(response.generators.map((gen) => (gen.id)));\n\n        var colorIndex = 0;\n        response.generators.forEach(function (gen) {\n          generatorColors[gen.code] = colors[colorIndex % colors.length];\n          setGeneratorColors(generatorColors);\n          colorIndex++;\n        });\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  var selectGenerator = function selectGenerator(id) {\n    var newSelected = selectedGenerators;\n    newSelected = newSelected.includes(id) ? newSelected.filter(function (i) {\n      return i !== id;\n    }) // remove item\n    : [].concat(_toConsumableArray(newSelected), [id]); // add item\n\n    setSelectedGenerators(newSelected.sort());\n  };\n\n  var filterGenerators = function filterGenerators() {\n    setDataLoaded(false);\n    setGeneratorsSelected(false);\n    setFilterSubmitted(true);\n\n    if (selectedGenerators.length > 0 || allSelected || metMastSelected) {\n      setLoading(true);\n      setGeneratorsSelected(true);\n      fetchData(dateRange);\n    }\n  };\n\n  var optionsBarGraph = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n\n  var options1 = _objectSpread(_objectSpread({}, optionsBarGraph), {}, {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + ' m/s';\n          }\n        }\n      }\n    }\n  });\n\n  var options2 = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + ' °C';\n          }\n        }\n      }\n    }\n  };\n  var options3 = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 2) + ' kg/m3';\n          }\n        }\n      }\n    }\n  };\n  var options4 = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + '°';\n          }\n        }\n      }\n    }\n  };\n  var options5 = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw, 1) + ' %';\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Climate - Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          className: \"text-right d-flex flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '60px'\n            },\n            children: \"Group by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            value: groupBy,\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGroupBy(ev.target.value);\n            },\n            custom: true,\n            name: \"period\",\n            id: \"period\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"day\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              children: \"Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        className: \"py-3 mb-4 mx-0 bg-light\",\n        style: {\n          borderRadius: \"3px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"10\",\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mx-2 my-2 pt-1\",\n            style: {\n              lineHeight: 1.2,\n              minWidth: '110px'\n            },\n            children: \"Select generators:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, _this), generatorsLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              style: {\n                backgroundColor: '#f32e2e',\n                color: 'white'\n              },\n              className: (metMastSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n              onClick: function onClick() {\n                return setMetMastSelected(!metMastSelected);\n              },\n              children: \"Met\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n              style: {\n                backgroundColor: '#222222',\n                color: 'white'\n              },\n              className: (allSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n              onClick: function onClick() {\n                return setAllSelected(!allSelected);\n              },\n              children: \"ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, _this), generators.map(function (gen, index) {\n              return /*#__PURE__*/_jsxDEV(CButton, {\n                style: {\n                  backgroundColor: generatorColors[gen.code],\n                  color: 'white'\n                },\n                className: (selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\",\n                onClick: function onClick() {\n                  return selectGenerator(gen.id);\n                },\n                id: gen.id,\n                children: gen.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(CSpinner, {\n            size: \"sm\",\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"2\",\n          className: \"text-right d-flex flex-end flex-justify-end \",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            className: \"mx-2 mb-1\",\n            onClick: function onClick() {\n              return filterGenerators();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, _this), generatorsSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Average Wind Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"m/s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: barChartOneData,\n                options: options1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Average Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\xB0C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: barChartTwoData,\n                options: options2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Average Air Density\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"kg/m3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: barChartThreeData,\n                options: options3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Wind Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Degrees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: barChartFourData,\n                options: options4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              className: 'mt-4',\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                className: 'pl-3 pr-2',\n                style: {\n                  maxWidth: '480px',\n                  marginLeft: 'auto',\n                  marginRight: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CRow, {\n                    children: [/*#__PURE__*/_jsxDEV(CCol, {\n                      sm: \"6\",\n                      xs: \"12\",\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"0-45 North to Northeast\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"45-90 NorthEast to East\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 90-135 East to SouthEast\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"135-180 SouthEast to South\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n                      sm: \"6\",\n                      xs: \"12\",\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 180-225 South to SouthWest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 504,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \"225-270 SouthWest to West\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 270-315 West to NorthWest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n                        className: 'w-100 mb-0',\n                        children: \" 315-360 NorthWest to North\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 507,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: 'mb-5',\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"pb-2 mb-4 border-bottom\",\n                children: \"Turbulence Intensity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n                data: barChartFiveData,\n                options: options5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filterSubmitted && /*#__PURE__*/_jsxDEV(CRow, {\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            className: \"text-center\",\n            children: \"Select one or more generators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(ClimateSummary, \"Yd6Bk/edTLboRLOaivd6OU417Eg=\");\n\n_c = ClimateSummary;\nexport default ClimateSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClimateSummary\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/climate/summary.js"],"names":["React","useEffect","useState","DataAPI","DateFilter","getDateLabel","formatDate","formatDate2","round","CCard","CCardBody","CCardGroup","CCardHeader","CSelect","CButton","CRow","CCol","CLabel","CSpinner","CChartLine","CChartPolarArea","Bar","DocsLink","ClimateSummary","dateRange","setDateRange","groupBy","setGroupBy","loading","setLoading","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","generatorsLoaded","setGeneratorsLoaded","selectedGenerators","setSelectedGenerators","filterSubmitted","setFilterSubmitted","generators","setGenerators","generatorColors","setGeneratorColors","generatorsSelected","setGeneratorsSelected","metMastSelected","setMetMastSelected","allSelected","setAllSelected","labels","datasets","barChartOneData","setBarChartOneData","barChartTwoData","setBarChartTwoData","barChartThreeData","setBarChartThreeData","barChartFourData","setBarChartFourData","barChartFiveData","setBarChartFiveData","colors","loadGenerators","fetchData","body","split","length","from","to","period","then","responseData","error","message","alert","graphs","data","map","x","i","datetimeFrom","graphData1","graphData2","graphData3","graphData4","graphData5","dataset1MetMast","label","mmWindSpeed","backgroundColor","dataset2MetMast","mmTemperature","dataset3MetMast","mmAirDensity","dataset4MetMast","mmWindDirection","dataset5MetMast","mmTurbulenceIntensity","push","datasetAllDefault","dataset1All","taWindSpeed","dataset2All","taTemperature","dataset4All","taWindDirection","dataset5All","taTurbulenceIntensity","gen_code","forEach","gen","index","dataset1","genWindSpeed","dataset4","genWindDirection","dataset5","genTubulenceInstensity","response","colorIndex","code","selectGenerator","id","newSelected","includes","filter","sort","filterGenerators","optionsBarGraph","animation","duration","responsive","plugins","legend","position","options1","tooltip","callbacks","tooltipItem","dataset","raw","options2","options3","options4","options5","lineHeight","minWidth","ev","target","value","borderRadius","color","maxWidth","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\nimport {DateFilter, getDateLabel, formatDate, formatDate2, round} from '../../../helpers/utils.js'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CSelect,\r\n  CButton,\r\n  CRow,\r\n  CCol,\r\n  CLabel,\r\n  CSpinner,\r\n\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartLine,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst ClimateSummary = () => {\r\n\r\n  const [dateRange, setDateRange] = useState('y');\r\n  const [groupBy, setGroupBy] = useState('day');\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [selectedGenerators, setSelectedGenerators] = useState([]);\r\n  const [filterSubmitted, setFilterSubmitted] = useState(false);\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorColors, setGeneratorColors] = useState([]);\r\n  const [generatorsSelected, setGeneratorsSelected] = useState(false);\r\n  const [metMastSelected, setMetMastSelected] = useState(true);\r\n  const [allSelected, setAllSelected] = useState(true);\r\n\r\n  const [barChartOneData, setBarChartOneData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [barChartTwoData, setBarChartTwoData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [barChartThreeData, setBarChartThreeData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [barChartFourData, setBarChartFourData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [barChartFiveData, setBarChartFiveData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  const colors =  ['#003f5c', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600','#9ceb01']\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n  \r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n\r\n    if (dateRange && dateRange.split('--').length==2) {\r\n      body.from = dateRange.split('--')[0]\r\n      body.to = dateRange.split('--')[1]\r\n    } else {\r\n      body.period = dateRange\r\n    }\r\n    body.groupBy = groupBy;\r\n    body.generators = selectedGenerators;\r\n    \r\n    DataAPI(\r\n      {\r\n      'endpoint': 'chart/climate',\r\n      'method': 'POST',\r\n      'body': body\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        if (responseData.error && responseData.error.message) {\r\n          setDataLoadError(true)\r\n          alert(responseData.error.message)\r\n        } \r\n\r\n        setLoading(false);\r\n\r\n        if (responseData && responseData.graphs) {\r\n\r\n          const labels = responseData.graphs[0].data.map( (x,i) => {\r\n            return x.datetimeFrom.split(' ')[0];\r\n          })\r\n          const graphData1 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n          const graphData2 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n          const graphData3 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n          const graphData4 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n          const graphData5 = {\r\n            labels: labels,\r\n            datasets: []\r\n          };\r\n\r\n          if (metMastSelected) {\r\n            const dataset1MetMast = {\r\n              label: 'Met Mast Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.mmWindSpeed;\r\n                      }),\r\n              backgroundColor: '#f32e2e',\r\n            }\r\n            const dataset2MetMast = {\r\n              label: 'Met Mast Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.mmTemperature;\r\n                      }),\r\n              backgroundColor: '#f32e2e',\r\n            }\r\n            const dataset3MetMast = {\r\n              label: 'Met Mast Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.mmAirDensity;\r\n                      }),\r\n              backgroundColor: '#f32e2e',\r\n            }\r\n            const dataset4MetMast = {\r\n              label: 'Met Mast Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.mmWindDirection;\r\n                      }),\r\n              backgroundColor: '#f32e2e',\r\n            }\r\n            const dataset5MetMast = {\r\n              label: 'Met Mast Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.mmTurbulenceIntensity;\r\n                      }),\r\n              backgroundColor: '#f32e2e',\r\n            }\r\n            graphData1.datasets.push(dataset1MetMast)\r\n            graphData2.datasets.push(dataset2MetMast)\r\n            graphData3.datasets.push(dataset3MetMast)\r\n            graphData4.datasets.push(dataset4MetMast)\r\n            graphData5.datasets.push(dataset5MetMast)\r\n          }\r\n\r\n          if (allSelected) {\r\n            const datasetAllDefault = {\r\n              label: 'Turbine Average',\r\n              backgroundColor: '#222222',\r\n            }\r\n            const dataset1All = {\r\n              ...datasetAllDefault,\r\n              label: 'Turbine Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taWindSpeed;\r\n                      }),\r\n              backgroundColor: '#222222',\r\n            }\r\n            const dataset2All = {\r\n              label: 'Turbine Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taTemperature;\r\n                      }),\r\n              backgroundColor: '#222222',\r\n            }\r\n            const dataset4All = {\r\n              label: 'Turbine Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taWindDirection;\r\n                      }),\r\n              backgroundColor: '#222222',\r\n            }\r\n            const dataset5All = {\r\n              label: 'Turbine Average',\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                        return x.taTurbulenceIntensity;\r\n                      }),\r\n              backgroundColor: '#222222',\r\n            }\r\n            graphData1.datasets.push(dataset1All)\r\n            graphData2.datasets.push(dataset2All)\r\n            graphData4.datasets.push(dataset4All)\r\n            graphData5.datasets.push(dataset5All)\r\n          }\r\n\r\n\r\n          responseData.graphs[0].gen_code.forEach((gen,index) => {\r\n            const dataset1 = {\r\n              label:  gen,\r\n              backgroundColor: generatorColors[gen],\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                return x.genWindSpeed[index];\r\n              })\r\n            };\r\n            const dataset4 = {\r\n              label:  gen,\r\n              backgroundColor: generatorColors[gen],\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                return x.genWindDirection[index];\r\n              })\r\n            };\r\n            const dataset5 = {\r\n              label:  gen,\r\n              backgroundColor: generatorColors[gen],\r\n              data: responseData.graphs[0].data.map( (x,i) => {\r\n                return x.genTubulenceInstensity[index];\r\n              })\r\n            };\r\n            graphData1.datasets.push(dataset1);\r\n            graphData4.datasets.push(dataset4);\r\n            graphData5.datasets.push(dataset5);\r\n          });\r\n\r\n          \r\n\r\n          setBarChartOneData(graphData1);\r\n          setBarChartTwoData(graphData2);\r\n          setBarChartThreeData(graphData3);\r\n          setBarChartFourData(graphData4);\r\n          setBarChartFiveData(graphData5);\r\n        \r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerators(response.generators);\r\n          // setSelectedGenerators(response.generators.map((gen) => (gen.id)));\r\n\r\n          let colorIndex = 0\r\n          response.generators.forEach((gen) => {\r\n            generatorColors[gen.code] = colors[colorIndex%colors.length];\r\n            setGeneratorColors(generatorColors);\r\n            colorIndex++\r\n          });\r\n\r\n          setGeneratorsLoaded(true);\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const selectGenerator = (id) => {\r\n\r\n    let newSelected = selectedGenerators;\r\n    newSelected = newSelected.includes(id)\r\n                          ? newSelected.filter(i => i !== id) // remove item\r\n                          : [ ...newSelected, id ]; // add item\r\n    setSelectedGenerators(newSelected.sort());\r\n  }\r\n\r\n  const filterGenerators = () => {\r\n\r\n    setDataLoaded(false);\r\n    setGeneratorsSelected(false);\r\n    setFilterSubmitted(true);\r\n    if (selectedGenerators.length > 0 || allSelected || metMastSelected) {\r\n      setLoading(true);\r\n      setGeneratorsSelected(true);\r\n      fetchData(dateRange);\r\n    }\r\n\r\n  }\r\n\r\n  const optionsBarGraph = {\r\n    animation: {duration: loading ? 0 : 1000},\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    }\r\n  };\r\n  const options1 = {\r\n    ...optionsBarGraph,\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + ' m/s';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const options2 = {\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + ' °C';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const options3 = {\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,2) + ' kg/m3';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const options4 = {\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + '°';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const options5 = {\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            return tooltipItem.dataset.label + \": \" + round(tooltipItem.raw,1) + ' %';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n\r\n      <CCard>\r\n\r\n      <CCardHeader>\r\n          <CRow>\r\n            \r\n            <CCol sm=\"6\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Climate - Summary\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n            \r\n            <CCol sm=\"6\" className=\"text-right d-flex flex-center\">\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'60px'}}>Group by</h6>\r\n                <CSelect value={groupBy} disabled={loading} onChange={(ev) => { setGroupBy(ev.target.value); }} custom name=\"period\" id=\"period\">\r\n                    <option value=\"day\">Day</option>\r\n                    <option value=\"week\">Week</option>\r\n                    <option value=\"month\">Month</option>\r\n                </CSelect>\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value);}} />\r\n              {/* <CButton color=\"primary\" disabled={loading} className=\"mr-2 ml-3\" onClick={() => { fetchData({period: dateRange, groupBy: groupBy});}} >Submit</CButton> */}\r\n            </CCol>\r\n\r\n          </CRow>\r\n\r\n        </CCardHeader>\r\n\r\n        <CCardBody>\r\n\r\n          <CRow className={\"py-3 mb-4 mx-0 bg-light\"} style={{borderRadius:\"3px\"}}>\r\n            <CCol sm=\"10\" className={\"d-flex \"} >\r\n              <h6 className=\"mx-2 my-2 pt-1\" style={{lineHeight:1.2,minWidth:'110px'}}>Select generators:</h6>   \r\n              {generatorsLoaded ? \r\n                <div>\r\n                  <CButton \r\n                    style={{backgroundColor:'#f32e2e',color: 'white'}} \r\n                    className={(metMastSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                    onClick={() => setMetMastSelected(!metMastSelected)}\r\n                    >\r\n                    Met\r\n                  </CButton>\r\n                  <CButton \r\n                    style={{backgroundColor:'#222222',color: 'white'}} \r\n                    className={(allSelected ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                    onClick={() => setAllSelected(!allSelected)}\r\n                    >\r\n                    ALL\r\n                  </CButton>\r\n                  { generators.map((gen, index) => (  \r\n                    <CButton \r\n                      style={{backgroundColor:generatorColors[gen.code],color: 'white'}} \r\n                      className={(selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \" btn-generator mx-1 my-1\"}\r\n                      onClick={() => selectGenerator(gen.id)} \r\n                      id={gen.id}\r\n                      >\r\n                        {gen.code}\r\n                    </CButton>\r\n                  )) }\r\n                </div>\r\n                :\r\n                <CSpinner \r\n                  size=\"sm\"\r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              }\r\n            </CCol>\r\n            <CCol sm=\"2\" className=\"text-right d-flex flex-end flex-justify-end \">\r\n              <CButton color=\"primary\" className=\"mx-2 mb-1\" onClick={() => filterGenerators()} >Submit</CButton>\r\n            </CCol>\r\n          </CRow>\r\n\r\n          { generatorsSelected ?\r\n\r\n            <div>\r\n\r\n            {!loading || dataLoadError ? \r\n\r\n              <div>\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Average Wind Speed</h4>\r\n                    <div>m/s</div>\r\n                    <Bar \r\n                      data={barChartOneData}\r\n                      options={options1} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\">Average Temperature</h4>\r\n                    <div>°C</div>\r\n                    <Bar \r\n                      data={barChartTwoData}\r\n                      options={options2} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol xs=\"12\">\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Average Air Density</h4>\r\n                    <div>kg/m3</div>\r\n                    <Bar \r\n                      data={barChartThreeData}\r\n                      options={options3} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                \r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Wind Direction</h4>\r\n                    <div>Degrees</div>\r\n                    <Bar \r\n                      data={barChartFourData}\r\n                      options={options4} \r\n                    />\r\n                  </CCol>\r\n                  <CCol xs=\"12\" className={'mt-4'}>\r\n                    <CCard className={'pl-3 pr-2'} style={{maxWidth: '480px', marginLeft: 'auto', marginRight: 'auto'}}>\r\n                      <CCardBody>\r\n                        <CRow>\r\n                          <CCol sm=\"6\" xs=\"12\">\r\n                            <CLabel className={'w-100 mb-0'}>0-45 North to Northeast</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>45-90 NorthEast to East</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 90-135 East to SouthEast</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>135-180 SouthEast to South</CLabel>\r\n                          </CCol>\r\n                          <CCol sm=\"6\" xs=\"12\">\r\n                            <CLabel className={'w-100 mb-0'}> 180-225 South to SouthWest</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}>225-270 SouthWest to West</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 270-315 West to NorthWest</CLabel>\r\n                            <CLabel className={'w-100 mb-0'}> 315-360 NorthWest to North</CLabel>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className={'mb-5'}>\r\n                  <CCol>\r\n                    <h4 className=\"pb-2 mb-4 border-bottom\" >Turbulence Intensity</h4>\r\n                    <div>%</div>\r\n                    <Bar \r\n                      data={barChartFiveData}\r\n                      options={options5} \r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n\r\n              </div>\r\n            : \r\n              <div className='text-center'>\r\n                <CSpinner \r\n                  className=\"loading-spinner\"\r\n                  color='#321fdb'\r\n                />\r\n              </div>\r\n            }\r\n\r\n          </div>\r\n\r\n        :\r\n\r\n        <div>\r\n          { filterSubmitted &&\r\n            <CRow>\r\n              <CCol className=\"text-center\">\r\n                Select one or more generators\r\n              </CCol>\r\n            </CRow>\r\n          }\r\n        </div>\r\n\r\n}\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n  )\r\n}\r\n\r\nexport default ClimateSummary\r\n"]},"metadata":{},"sourceType":"module"}