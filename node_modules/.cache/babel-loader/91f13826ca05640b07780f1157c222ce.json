{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_STOP = exports.SHOULD_SKIP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nvar validate = _t.validate;\n\nvar _debug2 = _debug(\"babel\");\n\nvar REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nvar SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nvar SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nvar NodePath = /*#__PURE__*/function () {\n  function NodePath(hub, parent) {\n    _classCallCheck(this, NodePath);\n\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  _createClass(NodePath, [{\n    key: \"getScope\",\n    value: function getScope(scope) {\n      return this.isScope() ? new _scope.default(this) : scope;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(key, val) {\n      if (this.data == null) {\n        this.data = Object.create(null);\n      }\n\n      return this.data[key] = val;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(key, def) {\n      if (this.data == null) {\n        this.data = Object.create(null);\n      }\n\n      var val = this.data[key];\n      if (val === undefined && def !== undefined) val = this.data[key] = def;\n      return val;\n    }\n  }, {\n    key: \"buildCodeFrameError\",\n    value: function buildCodeFrameError(msg) {\n      var Error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SyntaxError;\n      return this.hub.buildError(this.node, msg, Error);\n    }\n  }, {\n    key: \"traverse\",\n    value: function traverse(visitor, state) {\n      (0, _index.default)(this.node, visitor, this.scope, state, this);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, node) {\n      validate(this.node, key, node);\n      this.node[key] = node;\n    }\n  }, {\n    key: \"getPathLocation\",\n    value: function getPathLocation() {\n      var parts = [];\n      var path = this;\n\n      do {\n        var key = path.key;\n        if (path.inList) key = \"\".concat(path.listKey, \"[\").concat(key, \"]\");\n        parts.unshift(key);\n      } while (path = path.parentPath);\n\n      return parts.join(\".\");\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      if (!_debug2.enabled) return;\n\n      _debug2(\"\".concat(this.getPathLocation(), \" \").concat(this.type, \": \").concat(message));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return (0, _generator.default)(this.node).code;\n    }\n  }, {\n    key: \"inList\",\n    get: function get() {\n      return !!this.listKey;\n    },\n    set: function set(inList) {\n      if (!inList) {\n        this.listKey = null;\n      }\n    }\n  }, {\n    key: \"parentKey\",\n    get: function get() {\n      return this.listKey || this.key;\n    }\n  }, {\n    key: \"shouldSkip\",\n    get: function get() {\n      return !!(this._traverseFlags & SHOULD_SKIP);\n    },\n    set: function set(v) {\n      if (v) {\n        this._traverseFlags |= SHOULD_SKIP;\n      } else {\n        this._traverseFlags &= ~SHOULD_SKIP;\n      }\n    }\n  }, {\n    key: \"shouldStop\",\n    get: function get() {\n      return !!(this._traverseFlags & SHOULD_STOP);\n    },\n    set: function set(v) {\n      if (v) {\n        this._traverseFlags |= SHOULD_STOP;\n      } else {\n        this._traverseFlags &= ~SHOULD_STOP;\n      }\n    }\n  }, {\n    key: \"removed\",\n    get: function get() {\n      return !!(this._traverseFlags & REMOVED);\n    },\n    set: function set(v) {\n      if (v) {\n        this._traverseFlags |= REMOVED;\n      } else {\n        this._traverseFlags &= ~REMOVED;\n      }\n    }\n  }], [{\n    key: \"get\",\n    value: function get(_ref) {\n      var hub = _ref.hub,\n          parentPath = _ref.parentPath,\n          parent = _ref.parent,\n          container = _ref.container,\n          listKey = _ref.listKey,\n          key = _ref.key;\n\n      if (!hub && parentPath) {\n        hub = parentPath.hub;\n      }\n\n      if (!parent) {\n        throw new Error(\"To get a node path the parent needs to exist\");\n      }\n\n      var targetNode = container[key];\n\n      var paths = _cache.path.get(parent);\n\n      if (!paths) {\n        paths = new Map();\n\n        _cache.path.set(parent, paths);\n      }\n\n      var path = paths.get(targetNode);\n\n      if (!path) {\n        path = new NodePath(hub, parent);\n        if (targetNode) paths.set(targetNode, path);\n      }\n\n      path.setup(parentPath, container, listKey, key);\n      return path;\n    }\n  }]);\n\n  return NodePath;\n}();\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nvar _iterator = _createForOfIteratorHelper(t.TYPES),\n    _step;\n\ntry {\n  var _loop2 = function _loop2() {\n    var type = _step.value;\n    var typeKey = \"is\".concat(type);\n    var fn = t[typeKey];\n\n    NodePath.prototype[typeKey] = function (opts) {\n      return fn(this.node, opts);\n    };\n\n    NodePath.prototype[\"assert\".concat(type)] = function (opts) {\n      if (!fn(this.node, opts)) {\n        throw new TypeError(\"Expected node path of type \".concat(type));\n      }\n    };\n  };\n\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    _loop2();\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}\n\nvar _loop = function _loop() {\n  var type = _Object$keys[_i];\n  if (type[0] === \"_\") return \"continue\";\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  var virtualType = virtualTypes[type];\n\n  NodePath.prototype[\"is\".concat(type)] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(virtualTypes); _i < _Object$keys.length; _i++) {\n  var _ret = _loop();\n\n  if (_ret === \"continue\") continue;\n}\n\nvar _default = NodePath;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/@babel/core/node_modules/@babel/traverse/lib/path/index.js"],"names":["Object","defineProperty","exports","value","default","SHOULD_STOP","SHOULD_SKIP","REMOVED","virtualTypes","require","_debug","_index","_scope","_t","t","_cache","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","validate","debug","NodePath","hub","parent","contexts","state","opts","_traverseFlags","skipKeys","parentPath","container","listKey","key","node","type","data","context","scope","isScope","val","create","def","undefined","msg","Error","SyntaxError","buildError","visitor","parts","path","inList","unshift","join","message","enabled","getPathLocation","code","v","targetNode","paths","get","Map","set","setup","assign","prototype","TYPES","typeKey","fn","TypeError","indexOf","push","virtualType","checkPath","keys","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_STOP = exports.SHOULD_SKIP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}