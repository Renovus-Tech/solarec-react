{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\power-curve\\\\summary.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CDataTable, CBadge, CSelect, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle, CSpinner } from '@coreui/react';\nimport { CCard } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { Line } from 'react-chartjs-2';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, formatDate, round, getDateLabel, formatNumber } from '../../../helpers/utils.js';\nimport ChartLoading from '../../others/ChartLoading.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData1 = _useState2[0],\n      setTableData1 = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableFields1 = _useState4[0],\n      setTableFields1 = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tableData2 = _useState6[0],\n      setTableData2 = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tableFields2 = _useState8[0],\n      setTableFields2 = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataLoadError = _useState12[0],\n      setDataLoadError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      data = _useState16[0],\n      setData = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      curves = _useState18[0],\n      setCurves = _useState18[1];\n\n  var _useState19 = useState('cm'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      dateRange = _useState20[0],\n      setDateRange = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      labels = _useState22[0],\n      setLabels = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      generator = _useState24[0],\n      setGenerator = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      generators = _useState26[0],\n      setGenerators = _useState26[1];\n\n  var _useState27 = useState({}),\n      _useState28 = _slicedToArray(_useState27, 2),\n      performance = _useState28[0],\n      setPerformance = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      performanceItems = _useState30[0],\n      setPerformanceItems = _useState30[1];\n\n  var _useState31 = useState({}),\n      _useState32 = _slicedToArray(_useState31, 2),\n      graphOptions = _useState32[0],\n      setGraphOptions = _useState32[1];\n\n  var _useState33 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      graphData = _useState34[0],\n      setGraphData = _useState34[1];\n\n  var _useState35 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState36 = _slicedToArray(_useState35, 2),\n      graphData2 = _useState36[0],\n      setGraphData2 = _useState36[1];\n\n  var _useState37 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      graphData3 = _useState38[0],\n      setGraphData3 = _useState38[1];\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var period = options.period,\n        generator = options.generator;\n    setLoading(true);\n    var body = {};\n    if (generator) body.generators = [generator]; // console.log('.....', period, period.split('-').length)\n\n    if (period && period.split('--').length == 2) {\n      body.from = period.split('--')[0];\n      body.to = period.split('--')[1];\n    } else {\n      body.period = period;\n    }\n\n    DataAPI({\n      'endpoint': 'chart/powerCurve',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      } // if (!response.generator) return(alert('No generator datasets'));\n\n\n      var generatorData = response.generator && response.generator[0].data;\n      setDataLoaded(true);\n      setData(response);\n\n      if (generatorData && generatorData.hasOwnProperty('curves')) {\n        setCurves(generatorData.curves);\n        refreshChart(generatorData);\n      } else {\n        setCurves([]);\n      }\n\n      if (generatorData) {\n        if (generatorData.hasOwnProperty('dataUse')) processTableData1(generatorData.dataUse);\n        if (generatorData.hasOwnProperty('dataFilteredDueTo')) processTableData2(generatorData.dataFilteredDueTo);\n        if (generatorData.hasOwnProperty('performance')) setPerformance(generatorData.performance);\n      }\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        setGenerator(response.generators[0].id);\n        setGenerators(response.generators);\n        fetchData({\n          period: dateRange,\n          generator: response.generators[0].id\n        });\n      }\n    });\n  };\n\n  var processTableData1 = function processTableData1(dataUse) {\n    var tableData = [];\n    dataUse.forEach(function (item) {\n      var appendSymbol = item.info == 'As percentage of time' || item.info == 'As percentage of MWh' ? '%' : '';\n\n      if (item.info == 'As MWh generated') {\n        var usedData = (Math.round(item.usedData) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        var filteredData = (Math.round(item.filteredData) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        var total = (Math.round(item.total) + appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      } else {\n        var usedData = (round(item.usedData) + appendSymbol).replace('.', ',');\n        var filteredData = (round(item.filteredData) + appendSymbol).replace('.', ',');\n        var total = (round(item.total) + appendSymbol).replace('.', ',');\n      }\n\n      tableData.push({\n        '': item.info,\n        'Used Data': usedData,\n        'Filtered Data': filteredData,\n        'Total': total\n      });\n    });\n    setTableData1(tableData);\n    setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\n  };\n\n  var processTableData2 = function processTableData2(dataFilteredDueTo) {\n    var tableData = [];\n    tableData.push({\n      '': dataFilteredDueTo.info,\n      'Missing Data': round(dataFilteredDueTo.missingData) + '%',\n      'Curtailment': round(dataFilteredDueTo.curtailment) + '%',\n      'Alarms, Outliers, Frozen Sensors': round(dataFilteredDueTo.other) + '%',\n      'Total': round(dataFilteredDueTo.total) + '%'\n    });\n    setTableData2(tableData);\n    setTableFields2(['', 'Missing Data', 'Curtailment', 'Alarms, Outliers, Frozen Sensors', 'Total']);\n  };\n\n  var refreshChart = function refreshChart(generatorData) {\n    // if (curves.length==0) return;\n    var curves = generatorData.curves;\n    var performance = generatorData.performance;\n    var dataset = {\n      title: '',\n      labels: [],\n      label: \"Manufacturer Curve\",\n      backgroundColor: '#003f5c',\n      data: []\n    };\n    var dataset2 = {\n      labels: [],\n      label: \"Turbine Power Curve\",\n      backgroundColor: '#bc5090',\n      data: []\n    };\n    var dataset3 = {\n      labels: [],\n      label: \"Time percentage\",\n      backgroundColor: '#7a5195',\n      data: []\n    };\n    var labels = [];\n    var graphData = {\n      labels: [],\n      datasets: []\n    };\n    var graphData2 = {\n      labels: [],\n      datasets: []\n    };\n    var graphData3 = {\n      labels: [],\n      datasets: []\n    };\n    curves[0].x.forEach(function (x) {\n      labels.push(round(x));\n    });\n    graphData.labels = labels;\n    dataset.data = curves[0].y;\n    dataset2.data = curves[1].y;\n    var max = Math.ceil(Math.max.apply(Math, _toConsumableArray(curves[2].x)));\n    var windSpeeds = Array(max - 1 + 1).fill().map(function (_, idx) {\n      return 1 + idx;\n    });\n    var percentages = [];\n    var aux;\n    var qty;\n    var percentage;\n    var qtyTotal = curves[2].x.length;\n    windSpeeds.forEach(function process(windSpeed) {\n      aux = curves[2].x.filter(function (x) {\n        return x < windSpeed && x > windSpeed - 1;\n      });\n      qty = aux.length;\n      percentage = (Math.round(qty * 100 / qtyTotal * 100) / 100).toFixed(2);\n      percentages.push(percentage);\n      graphData2.labels.push(windSpeed - 1 + \" - \" + windSpeed);\n    });\n    dataset3.data = percentages;\n    var datasetPerformance = {\n      labels: [],\n      label: \"\",\n      backgroundColor: '#ef5675',\n      data: []\n    };\n    performance.curves.forEach(function (wS) {\n      // graphData3.labels.push(wS.v_min+\"-\"+wS.v_max);\n      graphData3.labels.push(wS.v_max);\n      datasetPerformance.data.push(wS.mean);\n    });\n    graphData.datasets.push(dataset);\n    graphData.datasets.push(dataset2);\n    graphData2.datasets.push(dataset3);\n    graphData3.datasets.push(datasetPerformance);\n    setGraphData(graphData);\n    setGraphData2(graphData2);\n    setGraphData3(graphData3);\n  };\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n\n    setGraphOptions({\n      animation: {\n        duration: 0\n      },\n      responsive: true,\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Month',\n            color: '#911',\n            font: {\n              family: 'Comic Sans MS',\n              size: 20,\n              weight: 'bold',\n              lineHeight: 1.2\n            },\n            padding: {\n              top: 20,\n              left: 0,\n              right: 0,\n              bottom: 0\n            }\n          }\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Value',\n            color: '#191',\n            font: {\n              family: 'Times',\n              size: 20,\n              style: 'normal',\n              lineHeight: 1.2\n            },\n            padding: {\n              top: 30,\n              left: 0,\n              right: 0,\n              bottom: 0\n            }\n          }\n        }\n      }\n    });\n  };\n\n  var fields = ['', 'Used Data', 'Filtered Data', 'Total'];\n  var options = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title: function title(tooltipItem, data) {\n            return tooltipItem[0].label + ' m/s';\n          },\n          label: function label(tooltipItem, data) {\n            return formatNumber(round(tooltipItem.raw, 1)) + ' kWh';\n          }\n        }\n      }\n    }\n  };\n  var options2 = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      callbacks: {\n        title: function title(tooltipItem, data) {\n          return tooltipItem[0].label + ' m/s';\n        },\n        label: function label(tooltipItem, data) {\n          return round(tooltipItem.value, 1) + ' %';\n        }\n      }\n    }\n  };\n  var options3 = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    scales: {\n      x: {\n        ticks: {\n          callback: function callback(value, index, ticks) {\n            return '$' + value.split('-');\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          title: function title(tooltipItem, data) {\n            return tooltipItem[0].label + ' m/s';\n          },\n          label: function label(tooltipItem, data) {\n            return round(tooltipItem.raw, 1) + ' %';\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Power Curve - Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          className: \"text-right d-flex flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n              fetchData({\n                period: dateRange,\n                generator: ev.target.value\n              });\n            },\n            custom: true,\n            name: \"generator\",\n            id: \"generator\",\n            children: generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 35\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['cm', 'cy', '12w', '12m', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n              fetchData({\n                generator: generator,\n                period: value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-center\",\n              style: {\n                width: '100%'\n              },\n              children: \"Power (KWh)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Line, {\n              data: graphData,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              style: {\n                width: '100%'\n              },\n              children: \"Wind speed (m/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"pb-2 mb-4 border-bottom text-left\",\n              children: \"Performance Index by Wind Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-left mb-3\",\n              style: {\n                width: '100%'\n              },\n              children: \"Performance Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Line, {\n              data: graphData3,\n              options: options3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-1\",\n              style: {\n                width: '100%'\n              },\n              children: \"Wind speed (m/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"pb-2 mb-4 border-bottom\",\n              children: \"Operational data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-center\",\n              style: {\n                width: '100%'\n              },\n              children: \"Time (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CChartBar, {\n              datasets: graphData2.datasets,\n              labels: graphData2.labels,\n              options: options2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              style: {\n                width: '100%'\n              },\n              children: \"Wind speed (m/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          children: [\"% data above Reference Power Curve: \", round(performance['Percentage data above manufacturer power curve']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 121\n          }, _this), \"% data below Reference Power Curve: \", round(performance['Percentage data below manufacturer power curve']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 121\n          }, _this), \"Performance index \", round(performance['Performance index']), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 73\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 79\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Data Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData1,\n              fields: tableFields1,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 27\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 23\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Reasons for Filtered Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: tableData2,\n              fields: tableFields2,\n              striped: true,\n              itemsPerPage: 5,\n              pagination: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 27\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 21\n            }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"2DUQWaLJuKyeD8U68ST9caJuUBE=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/power-curve/summary.js"],"names":["React","useState","useEffect","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CDataTable","CBadge","CSelect","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","CSpinner","CCard","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","Line","DataAPI","DateFilter","formatDate","round","getDateLabel","formatNumber","ChartLoading","Charts","tableData1","setTableData1","tableFields1","setTableFields1","tableData2","setTableData2","tableFields2","setTableFields2","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","data","setData","curves","setCurves","dateRange","setDateRange","labels","setLabels","generator","setGenerator","generators","setGenerators","performance","setPerformance","performanceItems","setPerformanceItems","graphOptions","setGraphOptions","datasets","graphData","setGraphData","graphData2","setGraphData2","graphData3","setGraphData3","loadGenerators","fetchData","options","period","body","split","length","from","to","then","response","error","message","alert","generatorData","hasOwnProperty","refreshChart","processTableData1","dataUse","processTableData2","dataFilteredDueTo","id","tableData","forEach","item","appendSymbol","info","usedData","Math","toString","replace","filteredData","total","push","missingData","curtailment","other","dataset","title","label","backgroundColor","dataset2","dataset3","x","y","max","ceil","windSpeeds","Array","fill","map","_","idx","percentages","aux","qty","percentage","qtyTotal","process","windSpeed","filter","toFixed","datasetPerformance","wS","v_max","mean","getBadge","status","animation","duration","responsive","scales","display","text","color","font","family","size","weight","lineHeight","padding","top","left","right","bottom","style","fields","plugins","tooltip","callbacks","tooltipItem","raw","options2","legend","tooltips","value","options3","ticks","callback","index","minWidth","ev","target","oGenerator","code","marginBottom","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CSpinner\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CCard,\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {DateFilter, formatDate, round, getDateLabel, formatNumber} from '../../../helpers/utils.js'\r\n\r\nimport ChartLoading from '../../others/ChartLoading.js'\r\n\r\nconst Charts = () => {\r\n\r\n  const [tableData1, setTableData1] = useState([]);\r\n  const [tableFields1, setTableFields1] = useState([]);\r\n  const [tableData2, setTableData2] = useState([]);\r\n  const [tableFields2, setTableFields2] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [curves, setCurves] = useState([]);\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [labels, setLabels] = useState([]);\r\n  const [generator, setGenerator] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [performance, setPerformance] = useState({});\r\n  const [performanceItems, setPerformanceItems] = useState([]);\r\n\r\n  const [graphOptions, setGraphOptions] = useState({});\r\n\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [graphData2, setGraphData2] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n  const [graphData3, setGraphData3] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const fetchData = (options = {}) => {\r\n\r\n    const {period, generator} = options\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n\r\n    if (generator) body.generators = [generator];\r\n\r\n    // console.log('.....', period, period.split('-').length)\r\n\r\n    if (period && period.split('--').length==2) {\r\n      body.from = period.split('--')[0]\r\n      body.to = period.split('--')[1]\r\n    } else {\r\n      body.period = period\r\n    }\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/powerCurve',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n          // if (!response.generator) return(alert('No generator datasets'));\r\n\r\n\r\n          const generatorData = response.generator && response.generator[0].data;\r\n\r\n          setDataLoaded(true);\r\n          setData(response);\r\n          \r\n\r\n          if(generatorData && generatorData.hasOwnProperty('curves')){\r\n            setCurves(generatorData.curves);\r\n            refreshChart(generatorData);\r\n          } else {\r\n            setCurves([]);\r\n          }\r\n\r\n          if (generatorData){\r\n            if(generatorData.hasOwnProperty('dataUse')) processTableData1(generatorData.dataUse);\r\n            if(generatorData.hasOwnProperty('dataFilteredDueTo')) processTableData2(generatorData.dataFilteredDueTo);\r\n            if(generatorData.hasOwnProperty('performance')) setPerformance(generatorData.performance);\r\n          }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n\r\n          setGenerator(response.generators[0].id);\r\n          setGenerators(response.generators);\r\n\r\n          fetchData({period: dateRange,  generator: response.generators[0].id});\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n    const processTableData1 = (dataUse) => {\r\n\r\n      const tableData = [];\r\n\r\n      dataUse.forEach(\r\n        item => {\r\n\r\n          const appendSymbol = (item.info=='As percentage of time' || item.info=='As percentage of MWh')?'%':'';\r\n\r\n          if (item.info == 'As MWh generated') {\r\n\r\n            var usedData = (Math.round(item.usedData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            var filteredData = (Math.round(item.filteredData)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            var total = (Math.round(item.total)+appendSymbol).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n\r\n          } else {\r\n\r\n            var usedData = (round(item.usedData)+appendSymbol).replace('.',',');\r\n            var filteredData = (round(item.filteredData)+appendSymbol).replace('.',',');\r\n            var total = (round(item.total)+appendSymbol).replace('.',',');\r\n\r\n          }\r\n\r\n          \r\n\r\n          tableData.push({\r\n            '': item.info,\r\n            'Used Data': usedData,\r\n            'Filtered Data': filteredData,\r\n            'Total': total\r\n          })\r\n\r\n        }\r\n      );\r\n\r\n      setTableData1(tableData);\r\n      setTableFields1(['', 'Used Data', 'Filtered Data', 'Total']);\r\n\r\n    }\r\n\r\n\r\n    const processTableData2 = (dataFilteredDueTo) => {\r\n\r\n      const tableData = [];\r\n\r\n      tableData.push({\r\n            '': dataFilteredDueTo.info,\r\n            'Missing Data': round(dataFilteredDueTo.missingData)+'%',\r\n            'Curtailment': round(dataFilteredDueTo.curtailment)+'%',\r\n            'Alarms, Outliers, Frozen Sensors': round(dataFilteredDueTo.other)+'%',\r\n            'Total': round(dataFilteredDueTo.total)+'%'\r\n          })\r\n\r\n      setTableData2(tableData);\r\n      setTableFields2(['', 'Missing Data', 'Curtailment', 'Alarms, Outliers, Frozen Sensors', 'Total']);\r\n      \r\n    }\r\n\r\n    const refreshChart = (generatorData) => {\r\n\r\n          // if (curves.length==0) return;\r\n\r\n        const curves = generatorData.curves;\r\n        const performance = generatorData.performance;\r\n  \r\n            const dataset = {\r\n              title: '',\r\n              labels: [],\r\n              label: \"Manufacturer Curve\",\r\n              backgroundColor: '#003f5c',\r\n              data: []\r\n            };\r\n \r\n            const dataset2 = {\r\n              labels: [],\r\n              label: \"Turbine Power Curve\",\r\n              backgroundColor: '#bc5090',\r\n              data: []\r\n            };\r\n\r\n            const dataset3 = {\r\n              labels: [],\r\n              label: \"Time percentage\",\r\n              backgroundColor: '#7a5195',\r\n              data: []\r\n            };\r\n\r\n            const labels = [];\r\n\r\n            const graphData = {\r\n              labels: [],\r\n              datasets: [],\r\n            };\r\n            const graphData2 = {\r\n              labels: [],\r\n              datasets: [],\r\n            }\r\n            const graphData3 = {\r\n              labels: [],\r\n              datasets: [],\r\n            }\r\n\r\n\r\n            curves[0].x.forEach(\r\n              x => {\r\n                labels.push(round(x))\r\n              }\r\n            );\r\n\r\n            graphData.labels = labels;\r\n\r\n            dataset.data = curves[0].y;\r\n            dataset2.data = curves[1].y;\r\n\r\n            const max = Math.ceil(Math.max(...curves[2].x));\r\n            const windSpeeds = Array(max - 1 + 1).fill().map((_, idx) => 1 + idx)\r\n            const percentages = [];\r\n            let aux;\r\n            let qty;\r\n            let percentage;\r\n            const qtyTotal = curves[2].x.length;\r\n            windSpeeds.forEach(\r\n              function process(windSpeed) { \r\n                aux = curves[2].x.filter(x => x < windSpeed && x > windSpeed-1);\r\n                qty = aux.length;\r\n                percentage = (Math.round((qty*100/qtyTotal) * 100) / 100).toFixed(2);\r\n                percentages.push(percentage);\r\n                graphData2.labels.push(windSpeed-1 + \" - \" + windSpeed);\r\n              }\r\n            );\r\n\r\n            dataset3.data = percentages;\r\n\r\n\r\n            const datasetPerformance = {\r\n              labels: [],\r\n              label: \"\",\r\n              backgroundColor: '#ef5675',\r\n              data: []\r\n            };\r\n            performance.curves.forEach(wS => {\r\n              // graphData3.labels.push(wS.v_min+\"-\"+wS.v_max);\r\n              graphData3.labels.push(wS.v_max);\r\n              datasetPerformance.data.push(wS.mean);\r\n            });\r\n\r\n            \r\n            graphData.datasets.push(dataset);\r\n            graphData.datasets.push(dataset2);\r\n            graphData2.datasets.push(dataset3);\r\n            graphData3.datasets.push(datasetPerformance);\r\n\r\n            setGraphData(graphData);\r\n            setGraphData2(graphData2);\r\n            setGraphData3(graphData3);\r\n\r\n\r\n    }\r\n\r\n\r\n    const getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n\r\n\r\n  setGraphOptions({\r\n                animation: {\r\n        duration: 0\r\n    },\r\n                responsive: true,\r\n                scales: {\r\n                  x: {\r\n                    display: true,\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Month',\r\n                      color: '#911',\r\n                      font: {\r\n                        family: 'Comic Sans MS',\r\n                        size: 20,\r\n                        weight: 'bold',\r\n                        lineHeight: 1.2,\r\n                      },\r\n                      padding: {top: 20, left: 0, right: 0, bottom: 0}\r\n                    }\r\n                  },\r\n                  y: {\r\n                    display: true,\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Value',\r\n                      color: '#191',\r\n                      font: {\r\n                        family: 'Times',\r\n                        size: 20,\r\n                        style: 'normal',\r\n                        lineHeight: 1.2\r\n                      },\r\n                      padding: {top: 30, left: 0, right: 0, bottom: 0}\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n}\r\n\r\nconst fields = [\r\n  '',\r\n  'Used Data',\r\n  'Filtered Data',\r\n  'Total'\r\n]\r\n\r\nconst options = {\r\n  animation: {\r\n    duration: loading ? 0 : 1000\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title: function(tooltipItem, data){\r\n          return tooltipItem[0].label + ' m/s';\r\n        },\r\n        label: function(tooltipItem, data) {\r\n          return formatNumber(round(tooltipItem.raw,1)) + ' kWh';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst options2 = {\r\n  animation: {\r\n    duration: loading ? 0 : 1000\r\n  },\r\n  legend: {\r\n    display: false\r\n  },\r\n  tooltips: {\r\n    callbacks: {\r\n      title: function(tooltipItem, data){\r\n        return tooltipItem[0].label + ' m/s';\r\n      },\r\n      label: function(tooltipItem, data) {\r\n        return round(tooltipItem.value,1) + ' %';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst options3 = {\r\n  animation: {\r\n    duration: loading ? 0 : 1000\r\n  },\r\n  scales: {\r\n    x: {\r\n      ticks: {\r\n          callback: function(value, index, ticks) {\r\n              return '$' + value.split('-');\r\n          }\r\n      }\r\n    }\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      display: false\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title: function(tooltipItem, data){\r\n          return tooltipItem[0].label + ' m/s';\r\n        },\r\n        label: function(tooltipItem, data) {\r\n          return round(tooltipItem.raw,1) + ' %';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n  return (\r\n    <CCard>\r\n\r\n    <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Power Curve - Summary\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"text-right d-flex flex-center\">\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Generator</h6>\r\n              <CSelect disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); fetchData({period: dateRange, generator: ev.target.value});}} custom name=\"generator\" id=\"generator\">\r\n\r\n              {generators.map((oGenerator) => (\r\n                                  <option value={oGenerator.id}>\r\n                                    {oGenerator.code}\r\n                                  </option>\r\n                                ))}</CSelect>\r\n              <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['cm','cy','12w','12m','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); fetchData({generator: generator, period: value});}} />\r\n\r\n            </CCol>\r\n           </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n      \r\n      <CCardBody>\r\n\r\n        \r\n        <CRow>\r\n          <CCol sm=\"7\">\r\n            <div style={{marginBottom:'50px'}}>\r\n              <div className=\"left-center\" style={{width: '100%'}}>Power (KWh)</div>\r\n              <Line data={graphData} options={options} />\r\n              <div className=\"text-center\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n            </div>\r\n\r\n            <div style={{marginBottom:'50px'}}>\r\n              <h4 className=\"pb-2 mb-4 border-bottom text-left\" >Performance Index by Wind Speed</h4>\r\n              <div className=\"text-left mb-3\" style={{width: '100%'}}>Performance Index</div>\r\n              <Line data={graphData3} options={options3} />\r\n              <div className=\"text-center mt-1\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n            </div>\r\n\r\n            <div style={{marginBottom:'50px'}}>\r\n              <h4 className=\"pb-2 mb-4 border-bottom\" >Operational data</h4>\r\n              <div className=\"left-center\" style={{width: '100%'}}>Time (%)</div>\r\n              <CChartBar\r\n                datasets={graphData2.datasets}\r\n                labels={graphData2.labels}\r\n                options={options2}\r\n              />\r\n              <div className=\"text-center\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n            </div>\r\n\r\n          </CCol>\r\n          <CCol sm=\"5\">\r\n\r\n\r\n            % data above Reference Power Curve: {round(performance['Percentage data above manufacturer power curve']) }%<br />\r\n            % data below Reference Power Curve: {round(performance['Percentage data below manufacturer power curve']) }%<br />\r\n            Performance index {round(performance['Performance index'])}%<br /><br />\r\n\r\n\r\n\r\n              <h4>Data Use</h4>\r\n\r\n              <div style={{textAlign:'right'}}>\r\n                  {dataLoaded || dataLoadError\r\n                    ? <CDataTable\r\n                    items={tableData1}\r\n                    fields={tableFields1}\r\n                    striped\r\n                    itemsPerPage={5}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                      'status':\r\n                        (item)=>(\r\n                          <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                              {item.status}\r\n                            </CBadge>\r\n                          </td>\r\n                        )\r\n  \r\n                    }}\r\n                  />\r\n                    : \r\n                    <ChartLoading/>\r\n                \r\n              }\r\n              </div>\r\n\r\n              <h4>Reasons for Filtered Data</h4>\r\n              <div style={{textAlign:'right'}}>\r\n\r\n              {dataLoaded || dataLoadError\r\n                    ? \r\n                    <CDataTable\r\n                    items={tableData2}\r\n                    fields={tableFields2}\r\n                    striped\r\n                    itemsPerPage={5}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                      'status':\r\n                        (item)=>(\r\n                          <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                              {item.status}\r\n                            </CBadge>\r\n                          </td>\r\n                        )\r\n\r\n                    }}\r\n                  />\r\n                  : \r\n                  <ChartLoading/>\r\n              } \r\n              </div>\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n      </CCardBody>\r\n\r\n\r\n\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}