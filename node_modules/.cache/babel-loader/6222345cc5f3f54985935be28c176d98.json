{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\reports\\\\generate.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CAlert, CLabel, CButton, CDataTable, CInputCheckbox } from '@coreui/react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Reports = function Reports() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      sending = _useState2[0],\n      setSending = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sent = _useState4[0],\n      setSent = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  useEffect(function () {\n    loadOptions();\n  }, []);\n\n  var loadOptions = function loadOptions() {\n    DataAPI({\n      'endpoint': 'report/configure',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (response.loaded) {\n        setReports(response.reports);\n        var locations = [];\n        var rows = [];\n        response.locations.forEach(function (location, index) {\n          locations[location.id] = location.name;\n          rows[location.id] = [];\n        });\n        setLocations(locations);\n        response.settings.forEach(function (setting, index) {\n          rows[setting.locId][setting.repId] = setting.selected;\n        });\n        var data = [];\n        var tableData = [];\n        rows.map(function (row, locId) {\n          var rowData = [];\n          row.map(function (setting, repId) {\n            rowData[repId] = setting;\n          });\n          rowData['windFarm'] = locations[locId];\n          tableData.push(rowData);\n          data[locId] = rowData;\n        });\n        setConfigData(data);\n        var sSlots = {};\n        var reports = [];\n        response.reports.forEach(function (report, index) {\n          reports[report.id] = report.title;\n\n          sSlots[report.id] = function (item, x) {\n            if (item[report.id]) {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CInputCheckbox, {\n                  name: \"check-\" + response.locations[x].id + \"-\" + report.id,\n                  className: 'mx-0',\n                  defaultChecked: true,\n                  onChange: function onChange(ev) {\n                    return updateData(ev);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, _this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CInputCheckbox, {\n                  name: \"check-\" + response.locations[x].id + \"-\" + report.id,\n                  className: 'mx-0',\n                  onChange: function onChange(ev) {\n                    return updateData(ev);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, _this);\n            }\n          };\n        });\n        setScopedSlots(sSlots);\n        var tableFields = reports.map(function (title, id) {\n          return {\n            key: id,\n            label: title\n          };\n        });\n        tableFields.unshift({\n          key: 'windFarm',\n          label: 'Wind Farm'\n        });\n        setTableData(tableData);\n        setTableFields(tableFields);\n        setLoaded(true);\n      }\n    });\n  };\n\n  var requestReport = function requestReport() {\n    setSending(true); // const body = {}\n    // let settings = [];\n    // configDataRef.current.map((row,locId) => (\n    //   row.map((setting,repId) => {\n    //     settings.push(\n    //     {\n    //       \"locId\": locId,\n    //       \"repId\": repId,\n    //       \"selected\": setting\n    //     })}\n    //   )\n    // ))\n    // body.settings = settings;\n\n    DataAPI({\n      'endpoint': 'report/generate',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setSaving(false);\n      setChangesMade(false);\n\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (response.saved) {\n        setSaved(true);\n        setMessage('Your report has been sent');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-medium-emphasis\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      className: 'px-md-5 pb-md-5 pt-md-4',\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [sended && /*#__PURE__*/_jsxDEV(CAlert, {\n            color: \"success\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n            className: 'mb-4',\n            children: \"Generate and Download Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CButton, {\n                onClick: requestReport,\n                color: \"primary\",\n                disabled: sending,\n                className: \"px-4 mr-3\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Reports, \"1qKwXCPHYZBaBiKWay7PAEujEzQ=\");\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/reports/generate.js"],"names":["React","useState","useEffect","useRef","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CAlert","CLabel","CButton","CDataTable","CInputCheckbox","DataAPI","Reports","sending","setSending","sent","setSent","message","setMessage","loadOptions","then","response","error","alert","loaded","setReports","reports","locations","rows","forEach","location","index","id","name","setLocations","settings","setting","locId","repId","selected","data","tableData","map","row","rowData","push","setConfigData","sSlots","report","title","item","x","ev","updateData","setScopedSlots","tableFields","key","label","unshift","setTableData","setTableFields","setLoaded","requestReport","body","setSaving","setChangesMade","saved","setSaved","sended"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CAlert,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CInputCheckbox\r\n} from '@coreui/react'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nconst Reports = () => {\r\n\r\n  const [sending, setSending] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    loadOptions();\r\n  }, []);\r\n\r\n  const loadOptions = () => {\r\n    \r\n    DataAPI({\r\n      'endpoint': 'report/configure',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        if (response.loaded) {\r\n          \r\n          setReports(response.reports)\r\n\r\n          let locations = [];\r\n          let rows = [];\r\n          response.locations.forEach((location,index) => {\r\n              locations[location.id] = location.name;\r\n              rows[location.id] = [];\r\n          });\r\n          setLocations(locations)\r\n\r\n          response.settings.forEach((setting,index) => {\r\n            rows[setting.locId][setting.repId] = setting.selected;\r\n\r\n          });\r\n\r\n          let data = []\r\n\r\n\r\n          let tableData = [];\r\n          rows.map((row, locId) => {\r\n            let rowData = [];\r\n            row.map((setting, repId) => {\r\n              rowData[repId] = setting;\r\n            });\r\n            rowData['windFarm'] = locations[locId];\r\n            tableData.push(rowData);\r\n            data[locId] = rowData;\r\n          });\r\n\r\n\r\n          setConfigData(data);\r\n          \r\n\r\n          let sSlots = {};\r\n          let reports = [];\r\n          response.reports.forEach((report,index) => {\r\n            reports[report.id] = report.title;\r\n            sSlots[report.id] = (item,x) => {\r\n              if (item[report.id]) {\r\n                return (\r\n                <td>\r\n                  <CInputCheckbox  name={\"check-\"+response.locations[x].id+\"-\"+report.id} className={'mx-0'} defaultChecked onChange={(ev)=>updateData(ev)}/>\r\n                </td>)\r\n              } else {\r\n                return (\r\n                <td>\r\n                  <CInputCheckbox  name={\"check-\"+response.locations[x].id+\"-\"+report.id} className={'mx-0'} onChange={(ev)=>updateData(ev)}/>\r\n                </td>)\r\n              }\r\n            }\r\n          });\r\n          setScopedSlots(sSlots);\r\n\r\n          const tableFields = reports.map((title, id) => ({\r\n              key: id,\r\n              label: title\r\n            }\r\n          ));\r\n          tableFields.unshift({\r\n            key: 'windFarm',\r\n            label: 'Wind Farm'\r\n          });\r\n\r\n          setTableData(tableData);\r\n          setTableFields(tableFields);\r\n\r\n          setLoaded(true);\r\n\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  const requestReport = () => {\r\n\r\n    setSending(true);\r\n  \r\n    // const body = {}\r\n  \r\n    // let settings = [];\r\n  \r\n    // configDataRef.current.map((row,locId) => (\r\n    //   row.map((setting,repId) => {\r\n    //     settings.push(\r\n    //     {\r\n    //       \"locId\": locId,\r\n    //       \"repId\": repId,\r\n    //       \"selected\": setting\r\n    //     })}\r\n    //   )\r\n    // ))\r\n  \r\n    // body.settings = settings;\r\n    \r\n      \r\n    DataAPI({\r\n      'endpoint': 'report/generate',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n  \r\n        setSaving(false)\r\n        setChangesMade(false)\r\n  \r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n  \r\n        if (response.saved) {\r\n          setSaved(true);\r\n          setMessage('Your report has been sent')\r\n        }\r\n      })\r\n        \r\n  \r\n  }\r\n  \r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"6\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Reports\r\n            </h3>\r\n            <div className=\"text-medium-emphasis\">Generate</div>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody className={'px-md-5 pb-md-5 pt-md-4'}>\r\n        <CRow>\r\n          <CCol sm=\"6\">\r\n            { sended &&\r\n              <CAlert color=\"success\" >{message}</CAlert>\r\n            }\r\n            <CLabel className={'mb-4'} >Generate and Download Report</CLabel>\r\n            \r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CButton onClick={requestReport} color=\"primary\" disabled={sending} className=\"px-4 mr-3\">Submit</CButton>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"]},"metadata":{},"sourceType":"module"}