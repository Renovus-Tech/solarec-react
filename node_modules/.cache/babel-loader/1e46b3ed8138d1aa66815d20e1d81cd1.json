{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\dashboard\\\\Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardHeader, CDataTable, CRow, CCol, CSpinner, CBadge } from '@coreui/react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { freeSet } from '@coreui/icons';\nimport DataAPI from '../../helpers/DataAPI.js';\nimport { formatDate2, round, formatNumber } from '../../helpers/utils.js';\nimport CIcon from '@coreui/icons-react';\nimport { setCookie, getCookie } from '../../helpers/sessionCookie.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  // const [dateRange, setDateRange] = useState('cm');\n  // const [groupBy, setGroupBy] = useState('day');\n  // const [generators, setGenerators] = useState([]);\n  // const [generator, setGenerator] = useState(null);\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastUpdated = _useState2[0],\n      setLastUpdated = _useState2[1]; // const [dataLoaded, setDataLoaded] = useState(false);\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataLoadError = _useState6[0],\n      setDataLoadError = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      windGeneratorsTableData = _useState8[0],\n      setwindGeneratorsTableData = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tableDataCurrentStatus = _useState10[0],\n      setTableDataCurrentStatus = _useState10[1];\n\n  var fetchData = function fetchData() {\n    // const body = {}\n    // body.location = getCookie('location');\n    setLoading(true);\n    DataAPI({\n      'method': 'GET',\n      'endpoint': 'wind/dashboard',\n      'body': body\n    }).then(function (responseData) {\n      setLoading(false);\n\n      if (responseData.error) {\n        setDataLoadError(true);\n\n        if (responseData.error.message) {\n          return alert(responseData.error.message);\n        } else {\n          return alert(responseData.error);\n        }\n      }\n\n      if (responseData.dateData != undefined) setLastUpdated(formatDate2(responseData.dateData));\n      if (getCookie('parkType') == '') setCookie('parkType', responseData.locations[0].type);\n      var tableDataWindCurrentStatus = {\n        items: [{\n          item: \"Production:\",\n          now: formatNumber(round(responseData.dataNow.production, 1)) + \" MWh\",\n          today: formatNumber(round(responseData.dataToday.production, 1)) + \" MWh\"\n        }, {\n          item: \"Turbine average wind speed:\",\n          now: round(responseData.dataNow.windSpeed, 1) + \" m/s\",\n          today: round(responseData.dataToday.windSpeed, 1) + \" m/s\"\n        }, {\n          item: \"Turbines in operation:\",\n          now: responseData.amountGeneratorsOk + \"/\" + responseData.amountGenerators,\n          today: \"\"\n        }],\n        fields: [{\n          key: 'item',\n          label: ''\n        }, 'now', 'today']\n      };\n      setTableDataWindCurrentStatus(tableDataWindCurrentStatus);\n      var windGeneratorsTableData = [];\n      responseData.locations.forEach(function (rL, index) {\n        if (rL.generators.length > 0) {\n          var park = rL.name;\n          var turbinesStatus = rL.generators.map(function (d) {\n            var line = {};\n            line.turbine = d.code;\n            line.indicator = d.dataNow.indicator;\n            line.production = d.dataNow.production != undefined ? formatNumber(round(d.dataNow.production, 3)) : \"\";\n            line.windSpeed = d.dataNow.windSpeed != undefined ? formatNumber(round(d.dataNow.windSpeed, 1)) : \"\";\n            line.status = d.dataNow.status;\n            return line;\n          });\n          var total = {\n            turbine: \"Total\",\n            indicator: \"\",\n            production: formatNumber(round(rL.dataNow.production, 3)),\n            windSpeed: formatNumber(round(rL.dataNow.windSpeed, 1)),\n            status: \"\"\n          };\n          var tableData = {\n            park: park,\n            items: [total].concat(turbinesStatus),\n            fields: ['turbine', {\n              key: 'indicator',\n              label: ''\n            }, {\n              key: 'production',\n              label: 'Production (MWh)'\n            }, {\n              key: 'windSpeed',\n              label: 'Wind Speed (m/s)'\n            }, 'status']\n          };\n          windGenerators.push(tableData);\n        }\n      });\n      setWindGeneratorsTablesData(windGeneratorsTableData);\n    });\n    DataAPI({\n      'method': 'GET',\n      'endpoint': 'solar/dashboard',\n      'body': body\n    }).then(function (responseData) {\n      setLoading(false);\n\n      if (responseData.error) {\n        setDataLoadError(true);\n\n        if (responseData.error.message) {\n          return alert(responseData.error.message);\n        } else {\n          return alert(responseData.error);\n        }\n      }\n\n      if (responseData.dateData != undefined) setLastUpdated(formatDate2(responseData.dateData));\n      if (getCookie('parkType') == '') setCookie('parkType', responseData.locations[0].type);\n      var tableDataSolarCurrentStatus = {\n        items: [{\n          item: \"Production:\",\n          now: formatNumber(round(responseData.dataNow.production, 1)) + \" MWh\",\n          today: formatNumber(round(responseData.dataToday.production, 1)) + \" MWh\"\n        }],\n        fields: [{\n          key: 'item',\n          label: ''\n        }, 'now', 'today']\n      };\n      setTableDataSolarCurrentStatus(tableDataSolarCurrentStatus);\n      var windGeneratorsTableData = [];\n      responseData.locations.forEach(function (rL, index) {\n        if (rL.generators.length > 0) {\n          var park = rL.name;\n          var turbinesStatus = rL.generators.map(function (d) {\n            var line = {};\n            line.turbine = d.code;\n            line.indicator = d.dataNow.indicator;\n            line.production = d.dataNow.production != undefined ? formatNumber(round(d.dataNow.production, 3)) : \"\";\n            line.windSpeed = d.dataNow.windSpeed != undefined ? formatNumber(round(d.dataNow.windSpeed, 1)) : \"\";\n            line.status = d.dataNow.status;\n            return line;\n          });\n          var total = {\n            turbine: \"Total\",\n            indicator: \"\",\n            production: formatNumber(round(rL.dataNow.production, 3)),\n            windSpeed: formatNumber(round(rL.dataNow.windSpeed, 1)),\n            status: \"\"\n          };\n          var tableData = {\n            park: park,\n            items: [total].concat(turbinesStatus),\n            fields: ['turbine', {\n              key: 'indicator',\n              label: ''\n            }, {\n              key: 'production',\n              label: 'Production (MWh)'\n            }, {\n              key: 'windSpeed',\n              label: 'Wind Speed (m/s)'\n            }, 'status']\n          };\n          windGeneratorsTableData.push(tableData);\n        }\n      });\n      setwindGeneratorsTableData(windGeneratorsTableData);\n    });\n  };\n\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response && response.error) {\n        setCookie('lastTimeStamp', '');\n        setCookie('name', '');\n        window.location.reload();\n      } else if (response && !response.error) {\n        // setGenerators(response.generators);\n        fetchData();\n      }\n    });\n  };\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'green':\n        return 'success';\n\n      case 'red':\n        return 'danger';\n\n      default:\n        return '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Current Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-medium-emphasis\",\n            children: [\"Last updated on: \", lastUpdated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"2\",\n          className: \"text-right d-flex flex-center flex-justify-end\",\n          children: /*#__PURE__*/_jsxDEV(CIcon, {\n            content: freeSet.cilReload,\n            className: \"cursor-pointer animate-rotate\",\n            size: 'lg',\n            title: 'Refresh',\n            onClick: function onClick() {\n              return fetchData();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, _this), !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          children: tableDataCurrentStatus && /*#__PURE__*/_jsxDEV(CCol, {\n            xl: \"6\",\n            className: \"px-sm-4 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(CDataTable, {\n              addTableClasses: \"current-status-table\",\n              striped: true,\n              items: tableDataCurrentStatus.items,\n              fields: tableDataCurrentStatus.fields\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          children: windGeneratorsTableData.length > 0 && windGeneratorsTableData.map(function (park) {\n            return /*#__PURE__*/_jsxDEV(CCol, {\n              xl: \"6\",\n              className: \"px-sm-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: park.park\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(CDataTable, {\n                addTableClasses: \"monitor-park-table table-header-center\",\n                striped: true,\n                items: park.items,\n                fields: park.fields // itemsPerPage={15}\n                // pagination\n                ,\n                sorter: true,\n                scopedSlots: {\n                  'indicator': function indicator(item) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(CBadge, {\n                        color: getBadge(item.indicator)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 33\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 31\n                    }, _this);\n                  },\n                  'production': function production(item) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-right\",\n                      children: item.production\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 31\n                    }, _this);\n                  },\n                  'windSpeed': function windSpeed(item) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-right\",\n                      children: item.windSpeed\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 31\n                    }, _this);\n                  }\n                }\n              }, park.park, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, _this)]\n            }, 'col-' + park.park, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }, _this) : /*#__PURE__*/_jsxDEV(CCardBody, {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CSpinner, {\n        className: \"loading-spinner\",\n        color: \"#321fdb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Dashboard, \"eKqOHe3Y1lLq/JOQeApQxxU+uHI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/dashboard/Dashboard.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardHeader","CDataTable","CRow","CCol","CSpinner","CBadge","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","freeSet","DataAPI","formatDate2","round","formatNumber","CIcon","setCookie","getCookie","register","Dashboard","lastUpdated","setLastUpdated","loading","setLoading","dataLoadError","setDataLoadError","windGeneratorsTableData","setwindGeneratorsTableData","tableDataCurrentStatus","setTableDataCurrentStatus","fetchData","body","then","responseData","error","message","alert","dateData","undefined","locations","type","tableDataWindCurrentStatus","items","item","now","dataNow","production","today","dataToday","windSpeed","amountGeneratorsOk","amountGenerators","fields","key","label","setTableDataWindCurrentStatus","forEach","rL","index","generators","length","park","name","turbinesStatus","map","d","line","turbine","code","indicator","status","total","tableData","concat","windGenerators","push","setWindGeneratorsTablesData","tableDataSolarCurrentStatus","setTableDataSolarCurrentStatus","loadGenerators","response","window","location","reload","getBadge","cilReload","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CDataTable,\r\n  CRow,\r\n  CCol,\r\n  CSpinner,\r\n  CBadge\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nimport { freeSet } from '@coreui/icons'\r\nimport DataAPI from '../../helpers/DataAPI.js'\r\nimport { formatDate2, round, formatNumber } from '../../helpers/utils.js'\r\nimport CIcon from '@coreui/icons-react';\r\nimport {setCookie,getCookie} from '../../helpers/sessionCookie.js'\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n\r\n  // const [dateRange, setDateRange] = useState('cm');\r\n  // const [groupBy, setGroupBy] = useState('day');\r\n  // const [generators, setGenerators] = useState([]);\r\n  // const [generator, setGenerator] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  // const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n\r\n  const [windGeneratorsTableData, setwindGeneratorsTableData] = useState([]);\r\n  const [tableDataCurrentStatus, setTableDataCurrentStatus] = useState(false);\r\n\r\n  const fetchData = () => {\r\n\r\n    // const body = {}\r\n    // body.location = getCookie('location');\r\n    setLoading(true);\r\n\r\n    DataAPI(\r\n      {\r\n      'method': 'GET',\r\n      'endpoint': 'wind/dashboard',\r\n      'body': body\r\n    }).then(function (responseData) {\r\n\r\n      setLoading(false);\r\n      if (responseData.error) {\r\n        setDataLoadError(true);\r\n          if (responseData.error.message) {\r\n          return(alert(responseData.error.message))\r\n          } else {\r\n          return(alert(responseData.error)) \r\n          }\r\n      }\r\n\r\n      if (responseData.dateData != undefined)\r\n        setLastUpdated(formatDate2(responseData.dateData));\r\n\r\n      if( getCookie('parkType') == '')\r\n        setCookie('parkType', responseData.locations[0].type);\r\n\r\n      const tableDataWindCurrentStatus = {\r\n        items: [{\r\n                  item:\"Production:\",\r\n                  now:formatNumber(round(responseData.dataNow.production,1))+\" MWh\",\r\n                  today:formatNumber(round(responseData.dataToday.production,1))+\" MWh\"\r\n                },\r\n                {\r\n                  item:\"Turbine average wind speed:\",\r\n                  now:round(responseData.dataNow.windSpeed,1)+\" m/s\",\r\n                  today:round(responseData.dataToday.windSpeed,1)+\" m/s\"\r\n                },\r\n                {\r\n                  item:\"Turbines in operation:\",\r\n                  now:responseData.amountGeneratorsOk+\"/\"+responseData.amountGenerators,\r\n                  today:\"\"\r\n                },\r\n              ],\r\n        fields:  [\r\n          { key: 'item', label: '' },\r\n          'now',\r\n          'today'\r\n        ]\r\n      }\r\n      setTableDataWindCurrentStatus(tableDataWindCurrentStatus)\r\n\r\n      const windGeneratorsTableData = [];\r\n      responseData.locations.forEach((rL,index) => {\r\n        if(rL.generators.length > 0) {\r\n          const park = rL.name;\r\n          const turbinesStatus = rL.generators.map((d) => {\r\n            let line = {}\r\n            line.turbine = d.code;\r\n            line.indicator = d.dataNow.indicator;\r\n            line.production = (d.dataNow.production!=undefined?formatNumber(round(d.dataNow.production,3)):\"\");\r\n            line.windSpeed = (d.dataNow.windSpeed!=undefined?formatNumber(round(d.dataNow.windSpeed,1)):\"\");\r\n            line.status = d.dataNow.status;\r\n            return line;\r\n          });\r\n\r\n          const total =  {\r\n            turbine: \"Total\",\r\n            indicator: \"\",\r\n            production: formatNumber(round(rL.dataNow.production,3)),\r\n            windSpeed: formatNumber(round(rL.dataNow.windSpeed,1)),\r\n            status: \"\"\r\n          };\r\n      \r\n          const tableData = {\r\n            park: park,\r\n            items: [total].concat(turbinesStatus),\r\n            fields:  [\r\n              'turbine',\r\n              { key: 'indicator', label: '' },\r\n              { key: 'production', label: 'Production (MWh)'},\r\n              { key: 'windSpeed', label: 'Wind Speed (m/s)' },\r\n              'status'\r\n            ]\r\n          }\r\n    \r\n          windGenerators.push(tableData);\r\n        }\r\n        \r\n      });\r\n\r\n      setWindGeneratorsTablesData(windGeneratorsTableData);\r\n\r\n    })\r\n\r\n\r\n    DataAPI(\r\n      {\r\n      'method': 'GET',\r\n      'endpoint': 'solar/dashboard',\r\n      'body': body\r\n    }).then(function (responseData) {\r\n\r\n      setLoading(false);\r\n      if (responseData.error) {\r\n        setDataLoadError(true);\r\n          if (responseData.error.message) {\r\n          return(alert(responseData.error.message))\r\n          } else {\r\n          return(alert(responseData.error)) \r\n          }\r\n      }\r\n\r\n      if (responseData.dateData != undefined)\r\n        setLastUpdated(formatDate2(responseData.dateData));\r\n\r\n      if( getCookie('parkType') == '')\r\n        setCookie('parkType', responseData.locations[0].type);\r\n\r\n      const tableDataSolarCurrentStatus = {\r\n        items: [{\r\n                  item:\"Production:\",\r\n                  now:formatNumber(round(responseData.dataNow.production,1))+\" MWh\",\r\n                  today:formatNumber(round(responseData.dataToday.production,1))+\" MWh\"\r\n                },\r\n              ],\r\n        fields:  [\r\n          { key: 'item', label: '' },\r\n          'now',\r\n          'today'\r\n        ]\r\n      }\r\n      setTableDataSolarCurrentStatus(tableDataSolarCurrentStatus)\r\n\r\n      const windGeneratorsTableData = [];\r\n      responseData.locations.forEach((rL,index) => {\r\n        if(rL.generators.length > 0) {\r\n          const park = rL.name;\r\n          const turbinesStatus = rL.generators.map((d) => {\r\n            let line = {}\r\n            line.turbine = d.code;\r\n            line.indicator = d.dataNow.indicator;\r\n            line.production = (d.dataNow.production!=undefined?formatNumber(round(d.dataNow.production,3)):\"\");\r\n            line.windSpeed = (d.dataNow.windSpeed!=undefined?formatNumber(round(d.dataNow.windSpeed,1)):\"\");\r\n            line.status = d.dataNow.status;\r\n            return line;\r\n          });\r\n\r\n          const total =  {\r\n            turbine: \"Total\",\r\n            indicator: \"\",\r\n            production: formatNumber(round(rL.dataNow.production,3)),\r\n            windSpeed: formatNumber(round(rL.dataNow.windSpeed,1)),\r\n            status: \"\"\r\n          };\r\n      \r\n          const tableData = {\r\n            park: park,\r\n            items: [total].concat(turbinesStatus),\r\n            fields:  [\r\n              'turbine',\r\n              { key: 'indicator', label: '' },\r\n              { key: 'production', label: 'Production (MWh)'},\r\n              { key: 'windSpeed', label: 'Wind Speed (m/s)' },\r\n              'status'\r\n            ]\r\n          }\r\n    \r\n          windGeneratorsTableData.push(tableData);\r\n        }\r\n        \r\n      });\r\n\r\n      setwindGeneratorsTableData(windGeneratorsTableData);\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const loadGenerators = () => {\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        if (response && response.error) {\r\n          setCookie('lastTimeStamp', '');\r\n          setCookie('name', '');\r\n          window.location.reload();\r\n        }\r\n        else if (response  && !response.error) {\r\n          // setGenerators(response.generators);\r\n          fetchData();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  const getBadge = status => {\r\n    switch (status) {\r\n      case 'green': return 'success'\r\n      case 'red': return 'danger'\r\n      default: return ''\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol xs=\"10\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Current Status\r\n              </h3>\r\n              <div className=\"text-medium-emphasis\">Last updated on: {lastUpdated}</div>\r\n            </CCol>\r\n            <CCol xs=\"2\" className=\"text-right d-flex flex-center flex-justify-end\">\r\n              <CIcon content={freeSet.cilReload} className={\"cursor-pointer animate-rotate\"} size={'lg'} title={'Refresh'}\r\n                onClick={() => fetchData()}/>\r\n            </CCol>\r\n            \r\n          </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n        {!loading || dataLoadError\r\n                    ? \r\n          <CCardBody>\r\n\r\n\r\n            <div style={{marginBottom:'30px'}}>\r\n              <CRow>\r\n              \r\n                { tableDataCurrentStatus &&\r\n                  <CCol xl=\"6\" className=\"px-sm-4 mb-4\">\r\n                    {/* <h5>Current Status</h5> */}\r\n                    <CDataTable\r\n                        addTableClasses=\"current-status-table\"\r\n                        striped\r\n                        items={tableDataCurrentStatus.items}\r\n                        fields={tableDataCurrentStatus.fields}\r\n                      />\r\n                  </CCol>\r\n                }\r\n\r\n              </CRow>\r\n            </div>\r\n            \r\n            <div style={{marginBottom:'50px'}}>\r\n              <CRow>\r\n              \r\n                { windGeneratorsTableData.length > 0 &&\r\n                  windGeneratorsTableData.map(park => (  \r\n                  <CCol xl=\"6\" className=\"px-sm-4 mb-4\" key={'col-'+park.park}>\r\n                    <h5>{park.park}</h5>\r\n                    <CDataTable\r\n                        key={park.park}\r\n                        addTableClasses=\"monitor-park-table table-header-center\"\r\n                        striped\r\n                        items={park.items}\r\n                        fields={park.fields}\r\n                        // itemsPerPage={15}\r\n                        // pagination\r\n                        sorter\r\n                        scopedSlots = {{\r\n                          'indicator':\r\n                            (item)=>(\r\n                              <td>\r\n                                <CBadge color={getBadge(item.indicator)}>\r\n                                </CBadge>\r\n                              </td>\r\n                            ),\r\n                            'production':\r\n                            (item)=>(\r\n                              <td className=\"text-right\">\r\n                                {item.production}\r\n                              </td>\r\n                            ),\r\n                            'windSpeed':\r\n                            (item)=>(\r\n                              <td className=\"text-right\">\r\n                                {item.windSpeed}\r\n                              </td>\r\n                            )\r\n                        }}\r\n                      />\r\n                  </CCol>\r\n                  ))\r\n                }\r\n\r\n              </CRow>\r\n            </div>\r\n\r\n          </CCardBody>\r\n          :\r\n          <CCardBody style={{textAlign:'center'}}>\r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          </CCardBody>\r\n        }\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}