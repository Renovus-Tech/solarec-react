{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\reports\\\\generate.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CAlert, CLabel, CButton, CDataTable, CSelect, CInputCheckbox } from '@coreui/react';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Reports = function Reports() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reports = _useState6[0],\n      setReports = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startDate = _useState10[0],\n      setStartDate = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      endDate = _useState12[0],\n      setEndDate = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sending = _useState14[0],\n      setSending = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sent = _useState16[0],\n      setSent = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      message = _useState18[0],\n      setMessage = _useState18[1];\n\n  useEffect(function () {\n    loadOptions();\n  }, []);\n\n  var loadOptions = function loadOptions() {\n    DataAPI({\n      'endpoint': 'report/generate',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setReports(response.reports);\n      setLoaded(true);\n    });\n  };\n\n  var requestReport = function requestReport() {\n    setSending(true);\n    var body = {}; // let settings = [];\n    // configDataRef.current.map((row,locId) => (\n    //   row.map((setting,repId) => {\n    //     settings.push(\n    //     {\n    //       \"locId\": locId,\n    //       \"repId\": repId,\n    //       \"selected\": setting\n    //     })}\n    //   )\n    // ))\n    // body.settings = settings;\n\n    DataAPI({\n      'endpoint': 'report/generate',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setSending(false);\n\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (response.saved) {\n        setSent(true);\n        setMessage('Your report has been sent');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-medium-emphasis\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      className: 'px-md-5 pb-md-5 pt-md-4',\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [sent && /*#__PURE__*/_jsxDEV(CAlert, {\n            color: \"success\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CLabel, {\n            className: 'mb-4',\n            children: \"Generate and Download Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              className: \"text-right d-flex flex-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"col-6 mr-2 ml-4 mb-0\",\n                style: {\n                  lineHeight: 2.4,\n                  minWidth: '64px'\n                },\n                children: \"Select report type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'col-6',\n                children: /*#__PURE__*/_jsxDEV(CSelect, {\n                  disabled: loading,\n                  onChange: function onChange(ev) {\n                    setType(ev.target.value);\n                  },\n                  custom: true,\n                  name: \"type\",\n                  id: \"type\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: \"-- Select --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, _this), reports.map(function (report) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: report.id,\n                      \"data-requires\": report.requires,\n                      children: report.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, _this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"col-6 mr-2 ml-4 mb-0\",\n                style: {\n                  lineHeight: 2.4,\n                  minWidth: '64px'\n                },\n                children: \"Select report period\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: 'col-6',\n                dateFormat: \"yyyy-MM-dd\",\n                selectsRange: type != 1,\n                startDate: startDate,\n                endDate: endDate,\n                maxDate: new Date(),\n                onChange: function onChange(dates) {\n                  var _dates = _slicedToArray(dates, 2),\n                      start = _dates[0],\n                      end = _dates[1];\n\n                  setStartDate(start);\n                  setEndDate(end);\n                } // inline\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CButton, {\n                onClick: requestReport,\n                color: \"primary\",\n                disabled: sending,\n                className: \"px-4 mr-3\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Reports, \"JyRGK6zrTh++cwdnGjxPfApPXD8=\");\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/reports/generate.js"],"names":["React","useState","useEffect","useRef","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CAlert","CLabel","CButton","CDataTable","CSelect","CInputCheckbox","DataAPI","DatePicker","Reports","loaded","setLoaded","loading","setLoading","reports","setReports","type","setType","startDate","setStartDate","endDate","setEndDate","sending","setSending","sent","setSent","message","setMessage","loadOptions","then","response","error","alert","requestReport","body","saved","lineHeight","minWidth","ev","target","value","map","report","id","requires","title","Date","dates","start","end"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CAlert,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CSelect,\r\n  CInputCheckbox\r\n} from '@coreui/react'\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n\r\nconst Reports = () => {\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const [type, setType] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const [sending, setSending] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    loadOptions();\r\n  }, []);\r\n\r\n  const loadOptions = () => {\r\n    \r\n    DataAPI({\r\n      'endpoint': 'report/generate',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n          setReports(response.reports)\r\n\r\n          \r\n\r\n          setLoaded(true);\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  const requestReport = () => {\r\n\r\n    setSending(true);\r\n  \r\n    const body = {}\r\n  \r\n    // let settings = [];\r\n  \r\n    // configDataRef.current.map((row,locId) => (\r\n    //   row.map((setting,repId) => {\r\n    //     settings.push(\r\n    //     {\r\n    //       \"locId\": locId,\r\n    //       \"repId\": repId,\r\n    //       \"selected\": setting\r\n    //     })}\r\n    //   )\r\n    // ))\r\n  \r\n    // body.settings = settings;\r\n    \r\n      \r\n    DataAPI({\r\n      'endpoint': 'report/generate',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n  \r\n        setSending(false)\r\n  \r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n  \r\n        if (response.saved) {\r\n          setSent(true);\r\n          setMessage('Your report has been sent')\r\n        }\r\n      })\r\n        \r\n  \r\n  }\r\n  \r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"6\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Reports\r\n            </h3>\r\n            <div className=\"text-medium-emphasis\">Generate</div>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody className={'px-md-5 pb-md-5 pt-md-4'}>\r\n        <CRow>\r\n          <CCol sm=\"6\">\r\n            { sent &&\r\n              <CAlert color=\"success\" >{message}</CAlert>\r\n            }\r\n            <CLabel className={'mb-4'} >Generate and Download Report</CLabel>\r\n            <CRow>\r\n              <CCol xs=\"12\" className=\"text-right d-flex flex-center\">\r\n                <h6 className=\"col-6 mr-2 ml-4 mb-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Select report type</h6>\r\n                <div className={'col-6'}>\r\n                  <CSelect disabled={loading} onChange={(ev) => {setType(ev.target.value); }} custom name=\"type\" id=\"type\">\r\n                    <option value=\"\" disabled>-- Select --</option>\r\n                    {reports.map((report) => (\r\n                      <option value={report.id} data-requires={report.requires}>\r\n                        {report.title}\r\n                      </option>\r\n                    ))}</CSelect>\r\n                </div>\r\n\r\n                <h6 className=\"col-6 mr-2 ml-4 mb-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Select report period</h6>\r\n                <DatePicker\r\n                  className={'col-6'}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  selectsRange={type!=1}\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  maxDate={new Date()}\r\n                  onChange={(dates) => {\r\n                    const [start, end] = dates;\r\n                    setStartDate(start)\r\n                    setEndDate(end)\r\n                  }}\r\n                  // inline\r\n                  \r\n                />     \r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CButton onClick={requestReport} color=\"primary\" disabled={sending} className=\"px-4 mr-3\">Submit</CButton>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </CCol>\r\n        </CRow>\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"]},"metadata":{},"sourceType":"module"}