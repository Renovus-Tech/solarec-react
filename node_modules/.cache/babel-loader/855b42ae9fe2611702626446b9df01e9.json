{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\wind\\\\maintenance\\\\maintenance.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CSelect, CInput, CDataTable, CLink, CTextarea } from '@coreui/react';\nimport { Bar, Chart, Line, Scatter } from 'react-chartjs-2';\nimport DataAPI from '../../../../helpers/DataAPI.js';\nimport { formatDate, round, getDateLabel, DateFilter } from '../../../../helpers/utils.js';\nimport ChartLoading from '../../../others/ChartLoading.js';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      term = _useState4[0],\n      setTerm = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generator = _useState6[0],\n      setGenerator = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      generators = _useState8[0],\n      setGenerators = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      generatorsLoaded = _useState10[0],\n      setGeneratorsLoaded = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      park = _useState12[0],\n      setPark = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      date = _useState14[0],\n      setDate = _useState14[1];\n\n  var _useState15 = useState('null'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      status = _useState16[0],\n      setStatus = _useState16[1];\n\n  var _useState17 = useState('cm'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dateRange = _useState18[0],\n      setDateRange = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      data = _useState20[0],\n      setData = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      loading = _useState22[0],\n      setLoading = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      dataLoaded = _useState24[0],\n      setDataLoaded = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      dataLoadError = _useState26[0],\n      setDataLoadError = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      comments = _useState28[0],\n      setComments = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      commentChanged = _useState30[0],\n      setCommentChanged = _useState30[1]; // const [statuses, setStatuses] = useState([]);\n\n\n  var _useState31 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      graphData = _useState32[0],\n      setGraphData = _useState32[1];\n\n  useEffect(function () {\n    fetchGenerators();\n    fetchData();\n    refreshChart([]);\n    setCommentChanged([]);\n  }, []); // const refreshChart = () => {\n  //   fetchData();\n  // }\n\n  var fetchGenerators = function fetchGenerators() {\n    DataAPI({\n      'endpoint': 'admin/generators/current/location',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!generatorsLoaded) {\n        setGenerators(response);\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    setDataLoaded(false);\n    var endpoint;\n    var isOpen = 'true';\n    if (status != 'null') isOpen = status == 'open' ? true : false;\n\n    if (generator && generator !== '0') {\n      endpoint = \"admin/documents/generator/\".concat(generator, \"?term=\").concat(term, \"&period=\").concat(dateRange, \"&size=-1&isOpen=\").concat(isOpen);\n    } else {\n      endpoint = \"admin/documents?term=\".concat(term, \"&period=\").concat(dateRange, \"&size=-1&isOpen=\").concat(isOpen);\n    }\n\n    DataAPI({\n      endpoint: endpoint,\n      method: 'GET'\n    }).then(function (responseData) {\n      setLoading(false);\n      setDataLoaded(true);\n      if (!responseData) return;\n\n      if (responseData.error) {\n        setDataLoadError(true);\n\n        if (responseData.error.message) {\n          return alert(responseData.error.message);\n        } else {\n          return alert(responseData.error);\n        }\n      }\n\n      setData(responseData);\n      refreshChart(responseData);\n    }); // const APIPayload = {\n    //     'period' : dateRange,\n    //   }\n    // if (generator) APIPayload.generators = [generator]\n    // DataAPI({\n    //   endpoint: 'chart/performanceIndex',\n    //   method: 'POST',\n    //   body: APIPayload,\n    // })\n    //   .then(function (responseData) {\n    //     console.log('responseData PI >', responseData)\n    //     setLoading(false);\n    //     const tableData = [];\n    //     responseData.data.forEach(\n    //       generatorData => {\n    //         tableData.push({\n    //           turbineId: generatorData.name\n    //         });\n    //       }\n    //     );\n    //     // setTableData(tableData);\n    //     const data = {\n    //       labels: [],\n    //       datasets: [],\n    //       backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\n    //     }\n    //     const colors = [\n    //         '#003f5c',\n    //         '#374c80',\n    //         '#7a5195',\n    //         '#bc5090',\n    //         '#ef5675',\n    //         '#ff764a',\n    //         '#ffa600'\n    //       ];\n    //       const dataset100 = {\n    //         labels: [''],\n    //         label: '',\n    //         backgroundColor: colors.pop(),\n    //         data: []\n    //       };\n    //     responseData.data.forEach((rDs) => {\n    //       const dataset = {\n    //         labels: [],\n    //         label: rDs.name,\n    //         backgroundColor: colors.pop(),\n    //         data: [],\n    //         hidden: rDs.name!='Total'\n    //       };\n    //       rDs.data.graph.forEach((rD) => {\n    //         // const dsData = rD.dataSet.find((dS) => dS.id === rDs.id);\n    //         dataset.labels.push(`${formatDate(rD.from)} - ${formatDate(rD.to)}`);\n    //         dataset.data.push(rD.value)\n    //         dataset100.data.push(100)\n    //       });\n    //       dataset.labels.reverse();\n    //       dataset.data.reverse();\n    //       data.datasets.push(dataset);\n    //       // data.datasets.push(dataset100);\n    //     });\n    //     responseData.data[0].data.graph.forEach((rD) => {\n    //       const rDfrom = rD.from;\n    //       const rDto = rD.to;\n    //       data.labels.push(`${formatDate(rD.from, 'noyear')} - ${formatDate(rD.to, 'noyear')}`);\n    //     });\n    //     data.labels.reverse();\n    //     setGraphData(data)\n    //   })\n    //   .catch(\n    //     err => console.warn(`ERROR! ${err}`)\n    //     // err => alert(`ERROR! ${err}`)\n    //   );\n  };\n\n  var refreshChart = function refreshChart(responseData) {\n    setLoading(true);\n    var tableData = [];\n    var comments = [];\n    var commentChanged = [];\n    responseData.forEach(function (row, index) {\n      var allGenerators;\n\n      if (row.generators) {\n        allGenerators = row.generators.map(function (generator) {\n          return generator.code;\n        }).join(', ');\n      } else {\n        allGenerators = '-';\n      }\n\n      var serviceOrder = row.name.split('_').pop();\n      var startDateEndDate = [];\n      if (row.from) startDateEndDate.push(formatDate(row.from));\n      if (row.to) startDateEndDate.push(formatDate(row.to));\n      tableData.push({\n        serviceOrder: '#' + serviceOrder,\n        turbineId: allGenerators,\n        startDateEndDate: startDateEndDate.join('-'),\n        issue: row.name,\n        status: row.isOpen ? 'open' : 'closed',\n        comment: row.observations,\n        download: process.env.REACT_APP_API_URL + row.downloadLink.replace('api/rest/', '')\n      });\n      comments[index] = row.observations;\n      commentChanged[index] = false;\n    });\n    setTableData(tableData);\n    setCommentChanged(commentChanged);\n    setComments(comments);\n    setLoading(false);\n  };\n\n  var toggleStatus = function toggleStatus(status, index) {\n    // let newStatuses = statuses\n    // newStatuses[index] = 'Open'\n    // setStatuses(newStatuses)\n    var body = {};\n    body.id = data[index].id;\n    body.observations = \"con comentarios\";\n    body.isOpen = status == 'open';\n    DataAPI({\n      'endpoint': 'admin/documents',\n      'method': 'PUT',\n      'body': body\n    }).then(function (responseData) {\n      if (responseData.error && responseData.error.message) {\n        setDataLoadError(true);\n        alert(responseData.error.message);\n      }\n\n      var new_data = data;\n      new_data[index].isOpen = status == 'open';\n      setData(new_data);\n      refreshChart(new_data);\n    });\n  };\n\n  var changeComment = function changeComment(comment, index) {\n    // let new_comments = comments\n    // new_comments[index] = comment\n    // setComments(new_comments)\n    var new_data = data;\n    new_data[index].observations = comment;\n    setData(new_data);\n  };\n\n  var enableCommentChanged = function enableCommentChanged(index) {\n    var new_comment_changed = commentChanged;\n    new_comment_changed[index] = true;\n    setCommentChanged(new_comment_changed);\n    document.getElementById(\"save-comment-\" + index).hidden = false;\n  };\n\n  var saveComment = function saveComment(status, index) {\n    // let newStatuses = statuses\n    // newStatuses[index] = 'Open'\n    // setStatuses(newStatuses)\n    var body = {};\n    body.id = data[index].id;\n    body.observations = data[index].observations;\n    body.isOpen = observations;\n    DataAPI({\n      'endpoint': 'admin/documents',\n      'method': 'PUT',\n      'body': body\n    }).then(function (responseData) {\n      if (responseData.error && responseData.error.message) {\n        setDataLoadError(true);\n        alert(responseData.error.message);\n      } // let new_data = data\n      // new_data[index].isOpen = status=='open'\n      // setData(new_data)\n      // refreshChart(new_data)\n\n    });\n  };\n\n  var fields = ['turbineId', 'serviceOrder', 'startDateEndDate', 'issue', 'status', 'comment', {\n    label: 'Open Report',\n    key: 'download'\n  }];\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Maintenance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"8\",\n          className: \"text-right d-flex flex-center flex-justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-2 ml-xl-3 mb-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '64px'\n            },\n            children: \"Turbine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            className: 'input-md',\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n            },\n            custom: true,\n            name: \"generator\",\n            id: \"generator\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"All turbines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, _this), generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 35\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-2 ml-xl-3 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            className: 'input-sm',\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setStatus(ev.target.value);\n            },\n            custom: true,\n            name: \"status\",\n            id: \"status\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"null\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"open\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"closed\",\n              children: \"Closed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-2 ml-xl-3 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['y', 'cm', 'cy', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-2 ml-xl-3 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '75px'\n            },\n            children: \"Search term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CInput, {\n            type: \"text\",\n            placeholder: \"\",\n            autoComplete: \"username\",\n            style: {\n              minWidth: '100px'\n            },\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setTerm(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            disabled: loading,\n            className: \"mr-2 ml-3\",\n            onClick: function onClick() {\n              fetchData();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: dataLoaded || dataLoadError ? /*#__PURE__*/_jsxDEV(CDataTable, {\n        items: tableData,\n        fields: fields,\n        striped: true,\n        itemsPerPage: 50,\n        pagination: true,\n        scopedSlots: {\n          'download': function download(item, index) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: item.download,\n                children: \"DOWNLOAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 23\n            }, _this);\n          },\n          'status': function status(item, index) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1\",\n              children: /*#__PURE__*/_jsxDEV(CSelect, {\n                color: \"primary\",\n                size: \"md\",\n                className: \"select-status input-sm \" + item.status,\n                value: item.status,\n                onChange: function onChange(ev) {\n                  toggleStatus(ev.target.value, index);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"open\",\n                  children: \"Open\"\n                }, 'status-' + index + '-open', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 27\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"closed\",\n                  children: \"Closed\"\n                }, 'status-' + index + '-closed', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 27\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 23\n            }, _this);\n          },\n          'comment': function comment(item, index) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1\",\n              children: [/*#__PURE__*/_jsxDEV(CInput, {\n                color: \"primary\",\n                size: \"md\",\n                className: \"input-md\",\n                defaultValue: item.comment,\n                onChange: function onChange(ev) {\n                  changeComment(ev.target.value, index);\n                  enableCommentChanged(index);\n                  setLoading(true);\n                  setLoading(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                hidden: !commentChanged[index],\n                size: \"sm\",\n                color: \"primary\",\n                className: \"btn-comment\",\n                id: 'save-comment-' + index,\n                onClick: function onClick(ev) {\n                  saveComment(item.status, index);\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 23\n            }, _this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(ChartLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"kg41v72y+QMI8Meyfm8acaH/hz0=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/wind/maintenance/maintenance.js"],"names":["React","useState","useEffect","useRef","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CSelect","CInput","CDataTable","CLink","CTextarea","Bar","Chart","Line","Scatter","DataAPI","formatDate","round","getDateLabel","DateFilter","ChartLoading","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","Charts","tableData","setTableData","term","setTerm","generator","setGenerator","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","park","setPark","date","setDate","status","setStatus","dateRange","setDateRange","data","setData","loading","setLoading","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","comments","setComments","commentChanged","setCommentChanged","labels","datasets","graphData","setGraphData","fetchGenerators","fetchData","refreshChart","then","response","endpoint","isOpen","method","responseData","error","message","alert","forEach","row","index","allGenerators","map","code","join","serviceOrder","name","split","pop","startDateEndDate","from","push","to","turbineId","issue","comment","observations","download","process","env","REACT_APP_API_URL","downloadLink","replace","toggleStatus","body","id","new_data","changeComment","enableCommentChanged","new_comment_changed","document","getElementById","hidden","saveComment","fields","label","key","lineHeight","minWidth","ev","target","value","oGenerator","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CSelect,\r\n  CInput,\r\n  CDataTable,\r\n  CLink,\r\n  CTextarea\r\n} from '@coreui/react'\r\n\r\nimport { Bar, Chart, Line, Scatter } from 'react-chartjs-2';\r\n\r\nimport DataAPI from '../../../../helpers/DataAPI.js'\r\n\r\nimport {formatDate, round, getDateLabel, DateFilter} from '../../../../helpers/utils.js'\r\nimport ChartLoading from '../../../others/ChartLoading.js'\r\n\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst Charts = () => {\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [term, setTerm] = useState([]);\r\n  const [generator, setGenerator] = useState();\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [park, setPark] = useState();\r\n  const [date, setDate] = useState();\r\n  const [status, setStatus] = useState('null');\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [commentChanged, setCommentChanged] = useState([]);\r\n\r\n  // const [statuses, setStatuses] = useState([]);\r\n  \r\n\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n   useEffect(() => {\r\n      fetchGenerators();\r\n      fetchData();\r\n      refreshChart([]);\r\n      setCommentChanged([]);\r\n  }, []);\r\n\r\n\r\n  // const refreshChart = () => {\r\n  //   fetchData();\r\n  // }\r\n\r\n  const fetchGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/generators/current/location',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!generatorsLoaded) {\r\n          setGenerators(response);\r\n          setGeneratorsLoaded(true);\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true)\r\n    setDataLoaded(false)\r\n\r\n    let endpoint;\r\n\r\n    let isOpen = 'true'\r\n    if (status != 'null')\r\n      isOpen = status=='open' ? true : false\r\n\r\n    if (generator && generator !== '0') {\r\n      endpoint = `admin/documents/generator/${generator}?term=${term}&period=${dateRange}&size=-1&isOpen=${isOpen}`\r\n    } else {\r\n      endpoint = `admin/documents?term=${term}&period=${dateRange}&size=-1&isOpen=${isOpen}`\r\n    }\r\n\r\n    DataAPI({\r\n      endpoint: endpoint,\r\n      method: 'GET',\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        setLoading(false)\r\n        setDataLoaded(true)\r\n\r\n        if (!responseData) return;\r\n        if (responseData.error) {\r\n          setDataLoadError(true);\r\n          if (responseData.error.message) {\r\n            return(alert(responseData.error.message))\r\n          } else {\r\n            return(alert(responseData.error)) \r\n          }\r\n        }\r\n\r\n        setData(responseData)\r\n        refreshChart(responseData)\r\n\r\n  })\r\n\r\n\r\n\r\n    // const APIPayload = {\r\n    //     'period' : dateRange,\r\n    //   }\r\n\r\n    // if (generator) APIPayload.generators = [generator]\r\n\r\n    // DataAPI({\r\n    //   endpoint: 'chart/performanceIndex',\r\n    //   method: 'POST',\r\n    //   body: APIPayload,\r\n    // })\r\n    //   .then(function (responseData) {\r\n\r\n    //     console.log('responseData PI >', responseData)\r\n\r\n    //     setLoading(false);\r\n\r\n    //     const tableData = [];\r\n\r\n    //     responseData.data.forEach(\r\n    //       generatorData => {\r\n\r\n    //         tableData.push({\r\n    //           turbineId: generatorData.name\r\n    //         });\r\n\r\n    //       }\r\n    //     );\r\n\r\n    //     // setTableData(tableData);\r\n\r\n    //     const data = {\r\n    //       labels: [],\r\n    //       datasets: [],\r\n    //       backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\r\n\r\n    //     }\r\n\r\n    //     const colors = [\r\n    //         '#003f5c',\r\n    //         '#374c80',\r\n    //         '#7a5195',\r\n    //         '#bc5090',\r\n    //         '#ef5675',\r\n    //         '#ff764a',\r\n    //         '#ffa600'\r\n    //       ];\r\n\r\n\r\n    //       const dataset100 = {\r\n    //         labels: [''],\r\n    //         label: '',\r\n    //         backgroundColor: colors.pop(),\r\n    //         data: []\r\n    //       };\r\n\r\n    //     responseData.data.forEach((rDs) => {\r\n\r\n    //       const dataset = {\r\n    //         labels: [],\r\n    //         label: rDs.name,\r\n    //         backgroundColor: colors.pop(),\r\n    //         data: [],\r\n    //         hidden: rDs.name!='Total'\r\n    //       };\r\n\r\n    //       rDs.data.graph.forEach((rD) => {\r\n    //         // const dsData = rD.dataSet.find((dS) => dS.id === rDs.id);\r\n    //         dataset.labels.push(`${formatDate(rD.from)} - ${formatDate(rD.to)}`);\r\n    //         dataset.data.push(rD.value)\r\n\r\n    //         dataset100.data.push(100)\r\n\r\n    //       });\r\n\r\n    //       dataset.labels.reverse();\r\n    //       dataset.data.reverse();\r\n\r\n    //       data.datasets.push(dataset);\r\n    //       // data.datasets.push(dataset100);\r\n\r\n    //     });\r\n\r\n    //     responseData.data[0].data.graph.forEach((rD) => {\r\n    //       const rDfrom = rD.from;\r\n    //       const rDto = rD.to;\r\n    //       data.labels.push(`${formatDate(rD.from, 'noyear')} - ${formatDate(rD.to, 'noyear')}`);\r\n\r\n    //     });\r\n\r\n    //     data.labels.reverse();\r\n\r\n    //     setGraphData(data)\r\n\r\n    //   })\r\n    //   .catch(\r\n    //     err => console.warn(`ERROR! ${err}`)\r\n    //     // err => alert(`ERROR! ${err}`)\r\n    //   );\r\n\r\n  }\r\n\r\n  const refreshChart = (responseData) => {\r\n\r\n    setLoading(true)\r\n    const tableData = []\r\n    const comments = []\r\n    const commentChanged = []\r\n\r\n    responseData.forEach(\r\n      (row,index) => {\r\n\r\n        let allGenerators;\r\n\r\n        if (row.generators) {\r\n          allGenerators = row.generators.map(generator => generator.code).join(', ');\r\n        } else {\r\n          allGenerators = '-';\r\n        }\r\n\r\n        const serviceOrder =  row.name.split('_').pop();\r\n\r\n        const startDateEndDate = [];\r\n\r\n        if (row.from) startDateEndDate.push(formatDate(row.from));\r\n        if (row.to) startDateEndDate.push(formatDate(row.to));\r\n        \r\n\r\n        tableData.push({\r\n          serviceOrder: '#'+serviceOrder,\r\n          turbineId: allGenerators,\r\n          startDateEndDate: startDateEndDate.join('-'),\r\n          issue: row.name,\r\n          status: row.isOpen ? 'open' : 'closed',\r\n          comment: row.observations,\r\n          download: process.env.REACT_APP_API_URL+row.downloadLink.replace('api/rest/', ''),\r\n        })\r\n\r\n        comments[index] = row.observations\r\n        commentChanged[index] = false\r\n\r\n      }\r\n    )\r\n\r\n    setTableData(tableData)\r\n    setCommentChanged(commentChanged)\r\n    setComments(comments)\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  const toggleStatus = (status, index) => {\r\n    // let newStatuses = statuses\r\n    // newStatuses[index] = 'Open'\r\n    // setStatuses(newStatuses)\r\n    const body = {}\r\n    body.id = data[index].id;\r\n    body.observations = \"con comentarios\";\r\n    body.isOpen = status == 'open';\r\n    \r\n    DataAPI(\r\n      {\r\n      'endpoint': 'admin/documents',\r\n      'method': 'PUT',\r\n      'body': body\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        if (responseData.error && responseData.error.message) {\r\n          setDataLoadError(true)\r\n          alert(responseData.error.message)\r\n        } \r\n\r\n        let new_data = data\r\n        new_data[index].isOpen = status=='open'\r\n        setData(new_data)\r\n        refreshChart(new_data)\r\n\r\n      })\r\n  }\r\n\r\n  const changeComment = (comment, index) => {\r\n    // let new_comments = comments\r\n    // new_comments[index] = comment\r\n    // setComments(new_comments)\r\n\r\n    let new_data = data\r\n    new_data[index].observations = comment\r\n    setData(new_data)\r\n  }\r\n\r\n  const enableCommentChanged = (index) => {\r\n    let new_comment_changed = commentChanged\r\n    new_comment_changed[index] = true\r\n    setCommentChanged(new_comment_changed)\r\n    document.getElementById(\"save-comment-\"+index).hidden = false;\r\n  }\r\n\r\n  const saveComment = (status, index) => {\r\n    // let newStatuses = statuses\r\n    // newStatuses[index] = 'Open'\r\n    // setStatuses(newStatuses)\r\n    const body = {}\r\n    body.id = data[index].id;\r\n    body.observations = data[index].observations;\r\n    body.isOpen = observations;\r\n    \r\n    DataAPI(\r\n      {\r\n      'endpoint': 'admin/documents',\r\n      'method': 'PUT',\r\n      'body': body\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        if (responseData.error && responseData.error.message) {\r\n          setDataLoadError(true)\r\n          alert(responseData.error.message)\r\n        } \r\n\r\n        // let new_data = data\r\n        // new_data[index].isOpen = status=='open'\r\n        // setData(new_data)\r\n        // refreshChart(new_data)\r\n\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const fields = [\r\n    'turbineId',\r\n    'serviceOrder',\r\n    'startDateEndDate',\r\n    'issue',\r\n    'status',\r\n    'comment',\r\n    { label: 'Open Report', key: 'download' },\r\n\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n          {/* <CRow>\r\n            <CCol sm=\"4\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Maintenance\r\n              </h3>\r\n              <br />\r\n              </CCol>\r\n\r\n              </CRow>\r\n              <CRow>\r\n\r\n              <CCol sm=\"3\" class=\"text-right\">\r\n\r\n            <DateFilter options={'y,cm,cy,12w,12m,x,xx'.split(',')} value={dateRange} onChange={(value) => { setDateRange(value);}} />\r\n\r\n                            </CCol>\r\n\r\n              <CCol sm=\"3\" class=\"text-right\">\r\n            <CSelect className={'input-md'} onChange={(ev) => {setGenerator(ev.target.value); }} custom name=\"generator\" id=\"generator\">\r\n\r\n            <option value=\"0\">All generators</option>\r\n\r\n            {generators.map((oGenerator) => (\r\n                                <option value={oGenerator.id}>\r\n                                  {oGenerator.code}\r\n                                </option>\r\n                              ))}</CSelect>\r\n            </CCol>\r\n\r\n               \r\n\r\n            \r\n            <CCol sm=\"3\" class=\"text-right\">\r\n              <CInput type=\"text\" placeholder=\"Search term\" autoComplete=\"username\" onChange={(ev) => { setTerm(ev.target.value);}} />\r\n            </CCol>\r\n\r\n            <CCol sm=\"3\" class=\"text-right\">\r\n              <CButton disabled={loading}  onClick={ () => { refreshChart(); } } color=\"primary\" className=\"px-4\">Submit</CButton>\r\n            </CCol>\r\n          </CRow> */}\r\n\r\n\r\n\r\n\r\n          <CRow>\r\n            <CCol sm=\"4\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Maintenance\r\n              </h3>\r\n              {/* <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div> */}\r\n            </CCol>\r\n            \r\n            <CCol sm=\"8\" className=\"text-right d-flex flex-center flex-justify-end\">\r\n              <h6 className=\"mr-2 ml-2 ml-xl-3 mb-0\" style={{lineHeight:2.4,minWidth:'64px'}}>Turbine</h6>\r\n              <CSelect className={'input-md'} disabled={loading} onChange={(ev) => {setGenerator(ev.target.value); }} custom name=\"generator\" id=\"generator\">\r\n                <option value=\"0\">All turbines</option>\r\n              {generators.map((oGenerator) => (\r\n                                  <option value={oGenerator.id}>\r\n                                    {oGenerator.code}\r\n                                  </option>\r\n                                ))}</CSelect>\r\n              <h6 className=\"mr-2 ml-2 ml-xl-3 m-0\" style={{lineHeight:2.4}}>Status</h6>\r\n              <CSelect className={'input-sm'} disabled={loading} onChange={(ev) => {setStatus(ev.target.value); }} custom name=\"status\" id=\"status\">\r\n                <option value=\"null\">All</option>\r\n                <option value=\"open\">Open</option>\r\n                <option value=\"closed\">Closed</option>\r\n              </CSelect>\r\n              <h6 className=\"mr-2 ml-2 ml-xl-3 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n              <DateFilter value={dateRange} options={['y','cm','cy','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value);}} />\r\n              <h6 className=\"mr-2 ml-2 ml-xl-3 m-0\" style={{lineHeight:2.4,minWidth:'75px'}} >Search term</h6>\r\n              <CInput type=\"text\" placeholder=\"\" autoComplete=\"username\" style={{minWidth:'100px'}} disabled={loading} onChange={(ev) => { setTerm(ev.target.value);}} />\r\n              <CButton color=\"primary\" disabled={loading} className=\"mr-2 ml-3\" onClick={() => { fetchData();}} >Submit</CButton>\r\n            </CCol>\r\n          </CRow>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </CCardHeader>\r\n      <CCardBody>\r\n        {dataLoaded || dataLoadError ? \r\n          <CDataTable\r\n              items={tableData}\r\n              fields={fields}\r\n              striped\r\n              itemsPerPage={50}\r\n              pagination\r\n              scopedSlots = {{\r\n                'download':\r\n                  (item, index)=>{\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <a href={item.download}>DOWNLOAD</a>\r\n                      </td>\r\n                      )\r\n                  },\r\n                'status':\r\n                (item, index)=>{\r\n                  return (\r\n                      <td className=\"py-1\">\r\n                        <CSelect\r\n                          color=\"primary\"\r\n                          size=\"md\"\r\n                          className={\"select-status input-sm \"+item.status}\r\n                          value={item.status}\r\n                          onChange={(ev)=>{toggleStatus(ev.target.value, index)}}\r\n                        >\r\n                          <option key={'status-'+index+'-open'} value='open'>Open</option>\r\n                          <option key={'status-'+index+'-closed'} value='closed'>Closed</option>\r\n                        </CSelect>\r\n                      </td>\r\n                      )\r\n                  },\r\n                'comment':\r\n                (item, index)=>{\r\n                  return (\r\n                      <td className=\"py-1\">\r\n                        <CInput\r\n                          color=\"primary\"\r\n                          size=\"md\"\r\n                          className={\"input-md\"}\r\n                          defaultValue={item.comment}\r\n                          onChange={(ev)=>{changeComment(ev.target.value, index); enableCommentChanged(index); setLoading(true); setLoading(false) }}\r\n                        >\r\n                        </CInput>\r\n                        <CButton \r\n                          hidden={!commentChanged[index]}\r\n                          size=\"sm\"\r\n                          color=\"primary\" \r\n                          className=\"btn-comment\"\r\n                          id={'save-comment-'+index}\r\n                          onClick={(ev)=>{saveComment(item.status, index)}}\r\n                        >\r\n                          Save\r\n                        </CButton>\r\n                      </td>\r\n                      )\r\n                  },\r\n              }}\r\n            />\r\n        : \r\n          <ChartLoading/>\r\n        }\r\n\r\n        {/* <Line data={graphData} /> */}\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}