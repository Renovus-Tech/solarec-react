{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\maintenance-history\\\\maintenance-history.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CSelect, CInput, CDataTable, CLink } from '@coreui/react';\nimport { Bar, Chart, Line, Scatter } from 'react-chartjs-2';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { formatDate, round, getDateLabel, DateFilter } from '../../../helpers/utils.js';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      term = _useState4[0],\n      setTerm = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generator = _useState6[0],\n      setGenerator = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      generators = _useState8[0],\n      setGenerators = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      generatorsLoaded = _useState10[0],\n      setGeneratorsLoaded = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      park = _useState12[0],\n      setPark = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      date = _useState14[0],\n      setDate = _useState14[1];\n\n  var _useState15 = useState('cm'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dateRange = _useState16[0],\n      setDateRange = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      data = _useState18[0],\n      setData = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loading = _useState20[0],\n      setLoading = _useState20[1];\n\n  var _useState21 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState22 = _slicedToArray(_useState21, 2),\n      graphData = _useState22[0],\n      setGraphData = _useState22[1];\n\n  useEffect(function () {\n    fetchGenerators();\n    refreshChart();\n  }, []);\n\n  var refreshChart = function refreshChart() {\n    fetchData();\n  };\n\n  var fetchGenerators = function fetchGenerators() {\n    DataAPI({\n      'endpoint': 'admin/generators/current/location',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!generatorsLoaded) {\n        setGenerators(response);\n        setGeneratorsLoaded(true);\n      }\n    });\n  };\n\n  var fetchData = function fetchData() {\n    setLoading(true);\n    var endpoint;\n\n    if (generator && generator !== '0') {\n      endpoint = \"admin/documents/generator/\".concat(generator, \"?term=\").concat(term, \"&period=\").concat(dateRange, \"&size=-1\");\n    } else {\n      endpoint = \"admin/documents?term=\".concat(term, \"&period=\").concat(dateRange, \"&size=-1\");\n    }\n\n    DataAPI({\n      endpoint: endpoint,\n      method: 'GET'\n    }).then(function (responseData) {\n      var tableData = [];\n      if (!responseData) return;\n      if (responseData.error) return alert(\"Error! \".concat(responseData.error));\n      responseData.forEach(function (row) {\n        var allGenerators;\n\n        if (row.generators) {\n          allGenerators = row.generators.map(function (generator) {\n            return generator.code;\n          }).join(', ');\n        } else {\n          allGenerators = '-';\n        }\n\n        var serviceOrder = row.name.split('_').pop();\n        var startDateEndDate = [];\n        if (row.from) startDateEndDate.push(formatDate(row.from));\n        if (row.to) startDateEndDate.push(formatDate(row.to));\n        tableData.push({\n          serviceOrder: '#' + serviceOrder,\n          turbineId: allGenerators,\n          startDateEndDate: startDateEndDate.join('-'),\n          issue: row.name,\n          download: process.env.REACT_APP_API_URL + row.downloadLink.replace('api/rest/', '')\n        });\n      });\n      setTableData(tableData);\n    });\n    var APIPayload = {\n      'period': dateRange\n    };\n    if (generator) APIPayload.generators = [generator];\n    DataAPI({\n      endpoint: 'chart/performanceIndex',\n      method: 'POST',\n      body: APIPayload\n    }).then(function (responseData) {\n      console.log('responseData PI >', responseData);\n      setLoading(false);\n      var tableData = [];\n      responseData.data.forEach(function (generatorData) {\n        tableData.push({\n          turbineId: generatorData.name\n        });\n      }); // setTableData(tableData);\n\n      var data = {\n        labels: [],\n        datasets: [],\n        backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\n      };\n      var colors = ['#003f5c', '#374c80', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600'];\n      var dataset100 = {\n        labels: [''],\n        label: '',\n        backgroundColor: colors.pop(),\n        data: []\n      };\n      responseData.data.forEach(function (rDs) {\n        var dataset = {\n          labels: [],\n          label: rDs.name,\n          backgroundColor: colors.pop(),\n          data: [],\n          hidden: rDs.name != 'Total'\n        };\n        rDs.data.graph.forEach(function (rD) {\n          // const dsData = rD.dataSet.find((dS) => dS.id === rDs.id);\n          dataset.labels.push(\"\".concat(formatDate(rD.from), \" - \").concat(formatDate(rD.to)));\n          dataset.data.push(rD.value);\n          dataset100.data.push(100);\n        });\n        dataset.labels.reverse();\n        dataset.data.reverse();\n        data.datasets.push(dataset); // data.datasets.push(dataset100);\n      });\n      responseData.data[0].data.graph.forEach(function (rD) {\n        var rDfrom = rD.from;\n        var rDto = rD.to;\n        data.labels.push(\"\".concat(formatDate(rD.from, 'noyear'), \" - \").concat(formatDate(rD.to, 'noyear')));\n      });\n      data.labels.reverse();\n      setGraphData(data);\n    }).catch(function (err) {\n      return console.warn(\"ERROR! \".concat(err));\n    } // err => alert(`ERROR! ${err}`)\n    );\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var fields = ['turbineId', 'serviceOrder', 'startDateEndDate', 'issue', {\n    label: 'Open Report',\n    key: 'download'\n  }];\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Maintenance History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(DateFilter, {\n            options: 'y,cm,cy,12w,12m,x,xx'.split(','),\n            value: dateRange,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CSelect, {\n            onChange: function onChange(ev) {\n              setGenerator(ev.target.value);\n            },\n            custom: true,\n            name: \"generator\",\n            id: \"ccmonth\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"All generators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 13\n            }, _this), generators.map(function (oGenerator) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: oGenerator.id,\n                children: oGenerator.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CInput, {\n            type: \"text\",\n            placeholder: \"Search term\",\n            autoComplete: \"username\",\n            onChange: function onChange(ev) {\n              setTerm(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          class: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            disabled: loading,\n            onClick: function onClick() {\n              refreshChart();\n            },\n            color: \"primary\",\n            className: \"px-4\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CDataTable, {\n        items: tableData,\n        fields: fields,\n        striped: true,\n        itemsPerPage: 50,\n        pagination: true,\n        scopedSlots: {\n          'download': function download(item, index) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: item.download,\n                children: \"DOWNLOAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 23\n            }, _this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Line, {\n        data: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"8pQdQqVTcp8JymTXrYbm/aKQLVw=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/maintenance-history/maintenance-history.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CSelect","CInput","CDataTable","CLink","Bar","Chart","Line","Scatter","DataAPI","formatDate","round","getDateLabel","DateFilter","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","Charts","tableData","setTableData","term","setTerm","generator","setGenerator","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","park","setPark","date","setDate","dateRange","setDateRange","data","setData","loading","setLoading","labels","datasets","graphData","setGraphData","fetchGenerators","refreshChart","fetchData","then","response","endpoint","method","responseData","error","alert","forEach","row","allGenerators","map","code","join","serviceOrder","name","split","pop","startDateEndDate","from","push","to","turbineId","issue","download","process","env","REACT_APP_API_URL","downloadLink","replace","APIPayload","body","console","log","generatorData","backgroundColor","colors","dataset100","label","rDs","dataset","hidden","graph","rD","value","reverse","rDfrom","rDto","catch","err","warn","fields","key","ev","target","oGenerator","id","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CSelect,\r\n  CInput,\r\n  CDataTable,\r\n  CLink\r\n} from '@coreui/react'\r\n\r\nimport { Bar, Chart, Line, Scatter } from 'react-chartjs-2';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {formatDate, round, getDateLabel, DateFilter} from '../../../helpers/utils.js'\r\n\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\n\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst Charts = () => {\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [term, setTerm] = useState([]);\r\n  const [generator, setGenerator] = useState();\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [park, setPark] = useState();\r\n  const [date, setDate] = useState();\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n\r\n   useEffect(() => {\r\n\r\n      fetchGenerators();\r\n      \r\n      refreshChart();\r\n\r\n  }, []);\r\n\r\n\r\n  const refreshChart = () => {\r\n    fetchData();\r\n  }\r\n\r\n  const fetchGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/generators/current/location',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!generatorsLoaded) {\r\n          setGenerators(response);\r\n          setGeneratorsLoaded(true);\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const fetchData = () => {\r\n\r\n    setLoading(true);\r\n\r\n    let endpoint;\r\n\r\n    if (generator && generator !== '0') {\r\n      endpoint = `admin/documents/generator/${generator}?term=${term}&period=${dateRange}&size=-1`;\r\n    } else {\r\n      endpoint = `admin/documents?term=${term}&period=${dateRange}&size=-1`;\r\n    }\r\n\r\n    DataAPI({\r\n      endpoint: endpoint,\r\n      method: 'GET'\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        const tableData = [];\r\n\r\n        if (!responseData) return;\r\n        if (responseData.error) return(alert(`Error! ${responseData.error}`));\r\n\r\n\r\n\r\n        responseData.forEach(\r\n          row => {\r\n\r\n            let allGenerators;\r\n\r\n            if (row.generators) {\r\n              allGenerators = row.generators.map(generator => generator.code).join(', ');\r\n            } else {\r\n              allGenerators = '-';\r\n            }\r\n\r\n            const serviceOrder =  row.name.split('_').pop();\r\n\r\n            const startDateEndDate = [];\r\n\r\n            if (row.from) startDateEndDate.push(formatDate(row.from));\r\n            if (row.to) startDateEndDate.push(formatDate(row.to));\r\n\r\n            tableData.push({\r\n              serviceOrder: '#'+serviceOrder,\r\n              turbineId: allGenerators,\r\n              startDateEndDate: startDateEndDate.join('-'),\r\n              issue: row.name,\r\n              download: process.env.REACT_APP_API_URL+row.downloadLink.replace('api/rest/', ''),\r\n            });\r\n\r\n          }\r\n        );\r\n\r\n        setTableData(tableData);\r\n\r\n  })\r\n\r\n\r\n    const APIPayload = {\r\n        'period' : dateRange,\r\n      }\r\n\r\n    if (generator) APIPayload.generators = [generator]\r\n\r\n    DataAPI({\r\n      endpoint: 'chart/performanceIndex',\r\n      method: 'POST',\r\n      body: APIPayload,\r\n    })\r\n      .then(function (responseData) {\r\n\r\n        console.log('responseData PI >', responseData)\r\n\r\n        setLoading(false);\r\n\r\n        const tableData = [];\r\n\r\n        responseData.data.forEach(\r\n          generatorData => {\r\n\r\n            tableData.push({\r\n              turbineId: generatorData.name\r\n            });\r\n\r\n          }\r\n        );\r\n\r\n        // setTableData(tableData);\r\n\r\n        const data = {\r\n          labels: [],\r\n          datasets: [],\r\n          backgroundColor: [\"red\", \"blue\", \"green\", \"blue\", \"red\", \"blue\"]\r\n\r\n        }\r\n\r\n        const colors = [\r\n            '#003f5c',\r\n            '#374c80',\r\n            '#7a5195',\r\n            '#bc5090',\r\n            '#ef5675',\r\n            '#ff764a',\r\n            '#ffa600'\r\n          ];\r\n\r\n\r\n          const dataset100 = {\r\n            labels: [''],\r\n            label: '',\r\n            backgroundColor: colors.pop(),\r\n            data: []\r\n          };\r\n\r\n        responseData.data.forEach((rDs) => {\r\n\r\n          const dataset = {\r\n            labels: [],\r\n            label: rDs.name,\r\n            backgroundColor: colors.pop(),\r\n            data: [],\r\n            hidden: rDs.name!='Total'\r\n          };\r\n\r\n          rDs.data.graph.forEach((rD) => {\r\n            // const dsData = rD.dataSet.find((dS) => dS.id === rDs.id);\r\n            dataset.labels.push(`${formatDate(rD.from)} - ${formatDate(rD.to)}`);\r\n            dataset.data.push(rD.value)\r\n\r\n            dataset100.data.push(100)\r\n\r\n          });\r\n\r\n          dataset.labels.reverse();\r\n          dataset.data.reverse();\r\n\r\n          data.datasets.push(dataset);\r\n          // data.datasets.push(dataset100);\r\n\r\n        });\r\n\r\n        responseData.data[0].data.graph.forEach((rD) => {\r\n          const rDfrom = rD.from;\r\n          const rDto = rD.to;\r\n          data.labels.push(`${formatDate(rD.from, 'noyear')} - ${formatDate(rD.to, 'noyear')}`);\r\n\r\n        });\r\n\r\n        data.labels.reverse();\r\n\r\n        setGraphData(data)\r\n\r\n      })\r\n      .catch(\r\n        err => console.warn(`ERROR! ${err}`)\r\n        // err => alert(`ERROR! ${err}`)\r\n      );\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    fetchData();\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const fields = [\r\n    'turbineId',\r\n    'serviceOrder',\r\n    'startDateEndDate',\r\n    'issue',\r\n    { label: 'Open Report', key: 'download' },\r\n\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"4\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Maintenance History\r\n              </h4>\r\n              <br />\r\n              </CCol>\r\n\r\n              </CRow>\r\n              <CRow>\r\n\r\n              <CCol sm=\"3\" class=\"text-right\">\r\n\r\n            <DateFilter options={'y,cm,cy,12w,12m,x,xx'.split(',')} value={dateRange} onChange={(value) => { setDateRange(value);}} />\r\n\r\n                            </CCol>\r\n\r\n              <CCol sm=\"3\" class=\"text-right\">\r\n            <CSelect onChange={(ev) => {setGenerator(ev.target.value); }} custom name=\"generator\" id=\"ccmonth\">\r\n\r\n            <option value=\"0\">All generators</option>\r\n\r\n            {generators.map((oGenerator) => (\r\n                                <option value={oGenerator.id}>\r\n                                  {oGenerator.code}\r\n                                </option>\r\n                              ))}</CSelect>\r\n            </CCol>\r\n\r\n               \r\n\r\n            \r\n            <CCol sm=\"3\" class=\"text-right\">\r\n              <CInput type=\"text\" placeholder=\"Search term\" autoComplete=\"username\" onChange={(ev) => { setTerm(ev.target.value);}} />\r\n            </CCol>\r\n\r\n            <CCol sm=\"3\" class=\"text-right\">\r\n              <CButton disabled={loading}  onClick={ () => { refreshChart(); } } color=\"primary\" className=\"px-4\">Search</CButton>\r\n            </CCol>\r\n                            </CRow>\r\n\r\n\r\n        </CCardHeader>\r\n      <CCardBody>\r\n        <CDataTable\r\n              items={tableData}\r\n              fields={fields}\r\n              striped\r\n              itemsPerPage={50}\r\n              pagination\r\n              scopedSlots = {{\r\n                'download':\r\n                  (item, index)=>{\r\n\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <a href={item.download}>DOWNLOAD</a>\r\n                      </td>\r\n                      )\r\n                  }\r\n              }}\r\n            />\r\n\r\n        <Line data={graphData} />\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}