{"ast":null,"code":"import _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\reports\\\\settings.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CAlert, CLabel } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea } from '@coreui/react-chartjs';\nimport { DocsLink } from 'src/reusable';\nimport Tables from 'src/views/base/tables/Tables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Reports = function Reports() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      parksRows = _useState2[0],\n      setParksRows = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  useEffect(function () {\n    loadConfiguration();\n  }, []);\n\n  var loadConfiguration = function loadConfiguration() {\n    setLoading(true);\n    DataAPI({\n      'endpoint': 'report/configure',\n      'method': 'GET'\n    }).then(function (response) {\n      if (response.error) {\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      if (response.loaded) {\n        setLoaded(true);\n        curves[0].x.map(function (x, i) {\n          return {\n            x: x,\n            y: curves[0].y[i]\n          };\n        });\n        var tableData = [];\n        var tablefields = response.reports.map(function (x, i) {\n          return x.title;\n        });\n        tablefields;\n        tableData.push({\n          'Wind Farm': dataUse.info,\n          'Used Data': round(dataUse.usedData) + '%',\n          'Filtered Data': round(dataUse.filteredData) + '%',\n          'Total': round(dataUse.total) + '%'\n        });\n        setTableData(tableData);\n        setTableFields(['Wind Farm', 'Used Data', 'Filtered Data', 'Total']);\n      }\n    });\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(CRow, {\n    children: /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"traffic\",\n        className: \"card-title mb-0\",\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small text-medium-emphasis\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n        children: \"Please select reports you wish to receive by e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this), parksRows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Reports, \"6Av7XVP6uRtv6rN4q7uop0aSv4w=\");\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/reports/settings.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CAlert","CLabel","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","DocsLink","Tables","Reports","parksRows","setParksRows","loaded","setLoaded","loadConfiguration","setLoading","DataAPI","then","response","error","message","alert","curves","x","map","i","y","tableData","tablefields","reports","title","push","dataUse","info","round","usedData","filteredData","total","setTableData","setTableFields"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CAlert,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\nimport { DocsLink } from 'src/reusable'\r\nimport Tables from 'src/views/base/tables/Tables'\r\n\r\n\r\nconst Reports = () => {\r\n\r\n  const [parksRows, setParksRows] = useState('');\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    loadConfiguration();\r\n  }, []);\r\n\r\n\r\n  const loadConfiguration = () => {\r\n\r\n    setLoading(true);\r\n    \r\n    DataAPI({\r\n      'endpoint': 'report/configure',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n\r\n        if (response.error) {\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n\r\n        if (response.loaded) {\r\n          setLoaded(true);\r\n\r\n          curves[0].x.map((x, i) => ({ x, y: curves[0].y[i] }))\r\n\r\n\r\n          const tableData = [];\r\n          const tablefields = response.reports.map((x, i) => { \r\n            return x.title\r\n          });\r\n          tablefields\r\n\r\n          tableData.push({\r\n            'Wind Farm': dataUse.info,\r\n            'Used Data': round(dataUse.usedData)+'%',\r\n            'Filtered Data': round(dataUse.filteredData)+'%',\r\n            'Total': round(dataUse.total)+'%'\r\n          })\r\n\r\n          setTableData(tableData);\r\n          setTableFields(['Wind Farm', 'Used Data', 'Filtered Data', 'Total']);\r\n\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  <CRow>\r\n          <CCol sm=\"6\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Reports\r\n            </h3>\r\n            <div className=\"small text-medium-emphasis\">Settings</div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"6\">\r\n            <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n              Reports\r\n            </h3>\r\n            <div className=\"small text-medium-emphasis\">Settings</div>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CLabel>Please select reports you wish to receive by e-mail</CLabel>\r\n\r\n        {parksRows}\r\n\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"]},"metadata":{},"sourceType":"module"}