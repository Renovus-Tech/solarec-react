{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicob\\\\Desktop\\\\Renovus\\\\renovus\\\\falconer_ui_web\\\\src\\\\views\\\\pages\\\\power-curve\\\\benchmark.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCardGroup, CCardHeader, CRow, CCol, CButton, CButtonGroup, CProgress, CCardFooter, CFormSelect, CDataTable, CBadge, CSelect, CModal, CModalHeader, CModalFooter, CModalBody, CModalTitle, CSpinner, CContainer } from '@coreui/react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport Multiselect from 'multiselect-react-dropdown';\nimport { Line } from 'react-chartjs-2';\nimport DataAPI from '../../../helpers/DataAPI.js';\nimport { DateFilter, formatDate, round, getDateLabel } from '../../../helpers/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Charts = function Charts() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataLoadError = _useState4[0],\n      setDataLoadError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      curves = _useState10[0],\n      setCurves = _useState10[1];\n\n  var _useState11 = useState('cm'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dateRange = _useState12[0],\n      setDateRange = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      windSector = _useState14[0],\n      setWindSector = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      generators = _useState16[0],\n      setGenerators = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      generatorsLoaded = _useState18[0],\n      setGeneratorsLoaded = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedGenerators = _useState20[0],\n      setSelectedGenerators = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      generatorColors = _useState22[0],\n      setGeneratorColors = _useState22[1];\n\n  var _useState23 = useState({}),\n      _useState24 = _slicedToArray(_useState23, 2),\n      performance = _useState24[0],\n      setPerformance = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      generatorsSelected = _useState26[0],\n      setGeneratorsSelected = _useState26[1];\n\n  var _useState27 = useState({\n    labels: [],\n    datasets: []\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      graphData = _useState28[0],\n      setGraphData = _useState28[1];\n\n  var colors = ['#003f5c', '#374c80', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600'];\n  useEffect(function () {\n    loadGenerators();\n  }, []);\n\n  var fetchData = function fetchData() {\n    var period = options.period,\n        windSector = options.windSector;\n    setLoading(true);\n    var body = {};\n    if (selectedGenerators) body.generators = selectedGenerators;\n\n    if (windSector) {\n      body.angleFrom = windSector.split('-')[0];\n      body.angleTo = windSector.split('-')[1];\n    }\n\n    if (dateRange && dateRange.split('--').length == 2) {\n      body.from = dateRange.split('--')[0];\n      body.to = dateRange.split('--')[1];\n    } else {\n      body.period = dateRange;\n    }\n\n    DataAPI({\n      'endpoint': 'chart/powerCurve',\n      'method': 'POST',\n      'body': body\n    }).then(function (response) {\n      setLoading(false);\n\n      if (response.error) {\n        setDataLoadError(true);\n\n        if (response.error.message) {\n          return alert(response.error.message);\n        } else {\n          return alert(response.error);\n        }\n      }\n\n      setDataLoaded(true);\n      setData(response);\n      refreshChart(response);\n    });\n  };\n\n  var loadGenerators = function loadGenerators() {\n    DataAPI({\n      'endpoint': 'admin/locations/current',\n      'method': 'GET'\n    }).then(function (response) {\n      if (!dataLoaded && response && !response.error) {\n        // setGenerator(response.generators[0].id);\n        setGenerators(response.generators);\n        setSelectedGenerators(response.generators.map(function (gen) {\n          return gen.id;\n        }));\n        var colorIndex = 0;\n        response.generators.forEach(function (gen) {\n          generatorColors[gen.code] = colors[colorIndex % colors.length]; //colors.pop();\n\n          setGeneratorColors(generatorColors);\n          colorIndex++;\n        });\n      }\n    });\n  };\n\n  var refreshChart = function refreshChart(generatorData) {\n    var generators = generatorData.generator;\n    if (generators.length == 0) return;\n    var graphData = {\n      labels: [],\n      datasets: [],\n      backgroundColor: colors\n    };\n    var productionTotal = 0;\n    var windSpeedTotal = 0;\n    generators.forEach(function (generator, index) {\n      var dataset = {\n        label: generator.name,\n        borderColor: generatorColors[generator.id],\n        //[index%7],\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        data: generator.data.curves[1].x.map(function (x, i) {\n          productionTotal += generator.data.curves[1].y[i];\n          windSpeedTotal += x;\n          return {\n            x: x,\n            y: generator.data.curves[1].y[i]\n          };\n        })\n      };\n      graphData.datasets.push(dataset);\n      var datasetAvarage = {\n        label: \"Avarage\",\n        borderColor: \"#040404\",\n        pointBackgroundColor: 'transparent',\n        pointBorderColor: 'transparent',\n        backgroundColor: 'transparent',\n        data: {\n          x: round(productionTotal),\n          y: round(windSpeedTotal / generators.length)\n        }\n      };\n      graphData.datasets.push(datasetAvarage);\n    });\n    var labels = [];\n    generators[0].data.curves[0].x.forEach(function (x) {\n      labels.push(round(x));\n    });\n    graphData.labels = labels;\n    setGraphData(graphData);\n  };\n\n  var selectGenerator = function selectGenerator(id) {\n    var newSelected = selectedGenerators;\n    newSelected = newSelected.includes(id) ? newSelected.filter(function (i) {\n      return i !== id;\n    }) // remove item\n    : [].concat(_toConsumableArray(newSelected), [id]); // add item\n\n    setSelectedGenerators(newSelected);\n  };\n\n  var filterGenerators = function filterGenerators() {\n    setDataLoaded(false);\n    setGeneratorsSelected(true);\n    fetchData({\n      period: dateRange,\n      windSector: windSector\n    });\n  };\n\n  var options = {\n    animation: {\n      duration: loading ? 0 : 1000\n    },\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n      callbacks: {\n        labelColor: function labelColor(tooltipItem, chart) {\n          var datasetIndex = tooltipItem.datasetIndex;\n          var borderColor = chart.legend.legendItems[datasetIndex].strokeStyle;\n          var backgroundColor = chart.legend.legendItems[datasetIndex].strokeStyle;\n          return {\n            borderColor: borderColor,\n            backgroundColor: backgroundColor\n          };\n        },\n        title: function title() {},\n        label: function label(tooltipItem, data) {\n          return ['Avarage Power: ' + round(tooltipItem.value, 1) + ' kW', 'Wind Speed: ' + tooltipItem.label + \" m/s\"];\n        }\n      }\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"7\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"traffic\",\n            className: \"card-title mb-0\",\n            children: \"Power Curve - Benchmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small text-medium-emphasis\",\n            children: getDateLabel(dateRange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"5\",\n          className: \"text-right d-flex flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4\n            },\n            children: \"Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(DateFilter, {\n            value: dateRange,\n            options: ['cm', '30d', 'cy', '12w', '12m', 'x', 'xx'],\n            disabled: loading,\n            onChange: function onChange(value) {\n              setDateRange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mr-2 ml-4 m-0\",\n            style: {\n              lineHeight: 2.4,\n              minWidth: '60px'\n            },\n            children: \"Wind sector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CSelect, {\n            value: windSector,\n            style: {\n              maxWidth: '150px'\n            },\n            disabled: loading,\n            onChange: function onChange(ev) {\n              setWindSector(ev.target.value);\n            },\n            custom: true,\n            name: \"period\",\n            id: \"period\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0-45\",\n              children: \"0-45\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"45-90\",\n              children: \"45-90\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"90-135\",\n              children: \"90-135\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"135-180\",\n              children: \"135-180\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"180-225\",\n              children: \"180-225\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"225-270\",\n              children: \"225-270\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"270-315\",\n              children: \"270-315\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"315-360\",\n              children: \"315-360\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        className: \"py-3 mb-4 mx-2 bg-light\",\n        style: {\n          borderRadius: \"3px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"9\",\n          children: generatorsLoaded && generators.map(function (gen, index) {\n            return /*#__PURE__*/_jsxDEV(CButton, {\n              style: {\n                backgroundColor: generatorColors[gen.code],\n                color: 'white'\n              },\n              className: (selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \"btn-generator mx-2\",\n              onClick: function onClick() {\n                return selectGenerator(gen.id);\n              },\n              id: gen.id,\n              children: gen.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"3\",\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            className: \"mx-2\",\n            onClick: function onClick() {\n              return filterGenerators();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, _this), generatorsSelected && /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          className: \"text-center\",\n          children: !loading || dataLoadError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '50px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-left\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Avarage Power (KW)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(CChartLine, {\n                datasets: graphData.datasets,\n                labels: graphData.labels,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-1\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Wind speed (m/s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, _this) : /*#__PURE__*/_jsxDEV(CSpinner, {\n            className: \"loading-spinner\",\n            color: \"#321fdb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Charts, \"wTTD5QWIkXmiJOXL1mG3DgTMOT0=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/nicob/Desktop/Renovus/renovus/falconer_ui_web/src/views/pages/power-curve/benchmark.js"],"names":["React","useState","useEffect","CCard","CCardBody","CCardGroup","CCardHeader","CRow","CCol","CButton","CButtonGroup","CProgress","CCardFooter","CFormSelect","CDataTable","CBadge","CSelect","CModal","CModalHeader","CModalFooter","CModalBody","CModalTitle","CSpinner","CContainer","CChartLine","Multiselect","Line","DataAPI","DateFilter","formatDate","round","getDateLabel","Charts","dataLoaded","setDataLoaded","dataLoadError","setDataLoadError","loading","setLoading","data","setData","curves","setCurves","dateRange","setDateRange","windSector","setWindSector","generators","setGenerators","generatorsLoaded","setGeneratorsLoaded","selectedGenerators","setSelectedGenerators","generatorColors","setGeneratorColors","performance","setPerformance","generatorsSelected","setGeneratorsSelected","labels","datasets","graphData","setGraphData","colors","loadGenerators","fetchData","period","options","body","angleFrom","split","angleTo","length","from","to","then","response","error","message","alert","refreshChart","map","gen","id","colorIndex","forEach","code","generatorData","generator","backgroundColor","productionTotal","windSpeedTotal","index","dataset","label","name","borderColor","pointBackgroundColor","pointBorderColor","x","i","y","push","datasetAvarage","selectGenerator","newSelected","includes","filter","filterGenerators","animation","duration","tooltips","mode","intersect","callbacks","labelColor","tooltipItem","chart","datasetIndex","legend","legendItems","strokeStyle","title","value","interaction","lineHeight","minWidth","maxWidth","ev","target","borderRadius","color","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CButtonGroup,\r\n  CProgress,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CDataTable,\r\n  CBadge,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CSpinner,\r\n  CContainer\r\n} from '@coreui/react'\r\n\r\nimport {\r\n  CChartLine\r\n} from '@coreui/react-chartjs'\r\n\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport DataAPI from '../../../helpers/DataAPI.js'\r\n\r\nimport {DateFilter, formatDate, round, getDateLabel} from '../../../helpers/utils.js'\r\n\r\n\r\nconst Charts = () => {\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataLoadError, setDataLoadError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [curves, setCurves] = useState([]);\r\n  const [dateRange, setDateRange] = useState('cm');\r\n  const [windSector, setWindSector] = useState('');\r\n  const [generators, setGenerators] = useState([]);\r\n  const [generatorsLoaded, setGeneratorsLoaded] = useState(false);\r\n  const [selectedGenerators, setSelectedGenerators] = useState([]);\r\n  const [generatorColors, setGeneratorColors] = useState([]);\r\n  const [performance, setPerformance] = useState({});\r\n  const [generatorsSelected, setGeneratorsSelected] = useState(false);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: []\r\n  });\r\n\r\n  const colors =  ['#003f5c','#374c80', '#7a5195', '#bc5090', '#ef5675', '#ff764a', '#ffa600']\r\n\r\n\r\n  useEffect(() => {\r\n    loadGenerators();\r\n  }, []);\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    const {period, windSector} = options\r\n\r\n    setLoading(true);\r\n\r\n    const body = {}\r\n\r\n    if (selectedGenerators) body.generators = selectedGenerators;\r\n    if (windSector) {\r\n      body.angleFrom = windSector.split('-')[0]\r\n      body.angleTo = windSector.split('-')[1]\r\n    }\r\n    if (dateRange && dateRange.split('--').length==2) {\r\n      body.from = dateRange.split('--')[0]\r\n      body.to = dateRange.split('--')[1]\r\n    } else {\r\n      body.period = dateRange\r\n    }\r\n\r\n\r\n    DataAPI({\r\n      'endpoint': 'chart/powerCurve',\r\n      'method': 'POST',\r\n      'body': body\r\n    }).then(\r\n      response => {\r\n\r\n        setLoading(false);\r\n\r\n        if (response.error) {\r\n          setDataLoadError(true);\r\n          if (response.error.message) {\r\n            return(alert(response.error.message))\r\n          } else {\r\n            return(alert(response.error)) \r\n          }\r\n        }\r\n          setDataLoaded(true);\r\n          setData(response);\r\n          refreshChart(response);\r\n          \r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  const loadGenerators = () => {\r\n\r\n    DataAPI({\r\n      'endpoint': 'admin/locations/current',\r\n      'method': 'GET'\r\n    }).then(\r\n      response => {\r\n        \r\n        if (!dataLoaded && response  && !response.error) {\r\n\r\n          // setGenerator(response.generators[0].id);\r\n          setGenerators(response.generators);\r\n          setSelectedGenerators(response.generators.map((gen) => (gen.id)));\r\n\r\n          let colorIndex = 0\r\n          response.generators.forEach((gen) => {\r\n            generatorColors[gen.code] = colors[colorIndex%colors.length];//colors.pop();\r\n            setGeneratorColors(generatorColors);\r\n            colorIndex++\r\n          });\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const refreshChart = (generatorData) => {\r\n\r\n    const generators = generatorData.generator;\r\n\r\n    if (generators.length==0) return;\r\n\r\n      const graphData = {\r\n        labels: [],\r\n        datasets: [],\r\n        backgroundColor: colors\r\n      };\r\n\r\n      let productionTotal = 0;\r\n      let windSpeedTotal = 0;\r\n      generators.forEach(\r\n        (generator,index) => {\r\n          const dataset = {\r\n            label: generator.name,\r\n            borderColor: generatorColors[generator.id],//[index%7],\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            data: generator.data.curves[1].x.map((x, i) => { \r\n                  productionTotal += generator.data.curves[1].y[i];\r\n                  windSpeedTotal += x;\r\n                  return {x, y: generator.data.curves[1].y[i] };\r\n                }\r\n              )\r\n          };\r\n          graphData.datasets.push(dataset);\r\n          const datasetAvarage = {\r\n            label: \"Avarage\",\r\n            borderColor: \"#040404\",\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            data: {x:round(productionTotal), y:round(windSpeedTotal / generators.length)}\r\n          };\r\n          graphData.datasets.push(datasetAvarage);\r\n        }\r\n      );\r\n\r\n      const labels = [];\r\n      generators[0].data.curves[0].x.forEach(\r\n        x => {\r\n          labels.push(round(x))\r\n        }\r\n      );\r\n      graphData.labels = labels;\r\n\r\n      setGraphData(graphData);\r\n\r\n  }\r\n\r\n  const selectGenerator = (id) => {\r\n\r\n    let newSelected = selectedGenerators;\r\n    newSelected = newSelected.includes(id)\r\n                          ? newSelected.filter(i => i !== id) // remove item\r\n                          : [ ...newSelected, id ]; // add item\r\n    setSelectedGenerators(newSelected);\r\n  }\r\n\r\n  const filterGenerators = () => {\r\n\r\n    setDataLoaded(false);\r\n    setGeneratorsSelected(true);\r\n    fetchData({period: dateRange, windSector: windSector});\r\n\r\n  }\r\n\r\n  const options = {\r\n    animation: {\r\n      duration: loading ? 0 : 1000\r\n    },\r\n    tooltips:\r\n    {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks:\r\n        {\r\n            labelColor: function(tooltipItem, chart)\r\n            {\r\n                var datasetIndex = tooltipItem.datasetIndex;\r\n                var borderColor = chart.legend.legendItems[datasetIndex].strokeStyle;\r\n                var backgroundColor = chart.legend.legendItems[datasetIndex].strokeStyle;\r\n                return {\r\n                    borderColor: borderColor,\r\n                    backgroundColor: backgroundColor\r\n                };\r\n            },\r\n            title: function() {},\r\n            label: function(tooltipItem, data) {\r\n              return [ 'Avarage Power: ' + round(tooltipItem.value,1) + ' kW', 'Wind Speed: ' + tooltipItem.label + \" m/s\" ] ;\r\n            }\r\n        }\r\n    },\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n  };\r\n\r\n\r\n  return (\r\n    <CCard>\r\n\r\n    <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"7\">\r\n              <h3 id=\"traffic\" className=\"card-title mb-0\">\r\n                Power Curve - Benchmark\r\n              </h3>\r\n              <div className=\"small text-medium-emphasis\">{getDateLabel(dateRange)}</div>\r\n            </CCol>\r\n\r\n            <CCol sm=\"5\" className=\"text-right d-flex flex-center\">\r\n                \r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4}}>Period</h6>\r\n                <DateFilter value={dateRange} options={['cm','30d','cy','12w','12m','x','xx']} disabled={loading} onChange={(value) => { setDateRange(value); }} />\r\n\r\n                <h6 className=\"mr-2 ml-4 m-0\" style={{lineHeight:2.4,minWidth:'60px'}}>Wind sector</h6>\r\n                <CSelect value={windSector} style={{maxWidth:'150px'}} disabled={loading} onChange={(ev) => { setWindSector(ev.target.value);}} custom name=\"period\" id=\"period\">\r\n                  <option value=\"\" selected></option>\r\n                  <option value=\"0-45\">0-45</option>\r\n                  <option value=\"45-90\">45-90</option>\r\n                  <option value=\"90-135\">90-135</option>\r\n                  <option value=\"135-180\">135-180</option>\r\n                  <option value=\"180-225\">180-225</option>\r\n                  <option value=\"225-270\">225-270</option>\r\n                  <option value=\"270-315\">270-315</option>\r\n                  <option value=\"315-360\">315-360</option>\r\n                </CSelect>\r\n\r\n              </CCol>\r\n           </CRow>\r\n\r\n\r\n\r\n\r\n\r\n        </CCardHeader>\r\n      \r\n      <CCardBody>\r\n\r\n      <CRow className={\"py-3 mb-4 mx-2 bg-light\"} style={{borderRadius:\"3px\"}}>\r\n              <CCol sm=\"9\">\r\n              {generatorsLoaded && \r\n                generators.map((gen, index) => (  \r\n                    <CButton \r\n                      style={{backgroundColor:generatorColors[gen.code],color: 'white'}} \r\n                      className={(selectedGenerators.includes(gen.id) ? \"selected\" : \"\") + \"btn-generator mx-2\"}\r\n                      onClick={() => selectGenerator(gen.id)} \r\n                      id={gen.id}\r\n                      >\r\n                        {gen.name}\r\n                    </CButton>\r\n                ))\r\n              }\r\n              </CCol>\r\n              <CCol sm=\"3\" className=\"text-right\">\r\n                <CButton color=\"primary\" className=\"mx-2\" onClick={() => filterGenerators()} >Submit</CButton>\r\n              </CCol>\r\n            </CRow>\r\n\r\n\r\n          {/* <CRow> */}\r\n            {/* <CCol xl=\"6\" md=\"12\" className=\"d-flex px-md-1 py-2 px-4\">\r\n                <h6 className=\"mr-2 ml-md-4 m-0 col-xl-2 col-md-3 text-right col-3 py-2 px-0 px-sm-1\" style={{minWidth:'64px'}}>Generators</h6>\r\n                <div class=\"multiselect-container mr-2\">\r\n                  <Multiselect \r\n                    disabled={loading}\r\n                    options={generators.map((oGenerator) => {\r\n                        return {id:oGenerator.id,name:oGenerator.code}\r\n                      })} // Options to display in the dropdown\r\n                    selectedValues={generators.map((oGenerator) => {\r\n                      return {id:oGenerator.id,name:oGenerator.code}\r\n                    })} // Preselected value to persist in dropdown\r\n                    onSelect={(selectedList) => {setSelectedGenerators(selectedList.map((gen) => { return gen.id } ))}} // Function will trigger on select event\r\n                    onRemove={(selectedList) => {setSelectedGenerators(selectedList.map((gen) => { return gen.id } ))}} // Function will trigger on remove event\r\n                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n            </CCol> */}\r\n            {/* <CCol xl=\"3\" md=\"6\" className=\"d-flex flex-center px-md-1 py-2 px-4\">\r\n                  <h6 className=\"mr-2 ml-md-4 m-0 px-0 px-sm-1 col-xl-3 col-md-5 col-3 text-right\">Period</h6>\r\n                  <div class=\"col-xl-8 col-md-7 px-0 mr-2\">\r\n                    <DateFilter disabled={loading} value={dateRange} options={['cm','30d','cy','12w','12m','x','xx']} onChange={(value) => {setDateRange(value);}}/>\r\n                  </div>\r\n            </CCol>\r\n\r\n            <CCol xl=\"3\" md=\"6\" className=\"d-flex flex-center px-md-1 py-2 px-4\">\r\n              <h6 className=\"mr-2 ml-md-4 m-0 px-0 px-sm-1 col-xl-3 col-md-5 col-3 text-right\">Wind sector</h6>\r\n              <CSelect disabled={loading} custom name=\"windSector\" id=\"windSector\" className=\"col-xl-8 col-md-7 mr-2\" onChange={(ev) => {setWindSector(ev.target.value);}}>\r\n                <option value=\"\" selected></option>\r\n                <option value=\"0-45\">0-45</option>\r\n                <option value=\"45-90\">45-90</option>\r\n                <option value=\"90-135\">90-135</option>\r\n                <option value=\"135-180\">135-180</option>\r\n                <option value=\"180-225\">180-225</option>\r\n                <option value=\"225-270\">225-270</option>\r\n                <option value=\"270-315\">270-315</option>\r\n                <option value=\"315-360\">315-360</option>\r\n              </CSelect>\r\n            </CCol> */}\r\n\r\n            {/* </CRow> */}\r\n\r\n        {/* //   </CCol>\r\n        //   <CCol md=\"3\" className=\"text-right d-flex flex-center flex-justify-end px-4 py-2\">\r\n        //     <CButton color=\"primary\" className=\"mx-2\" onClick={() => filterSubmit()} >Submit</CButton>\r\n        //   </CCol>\r\n        // </CRow>\r\n         */}\r\n\r\n\r\n        { generatorsSelected && \r\n\r\n        <CRow>\r\n          <CCol className=\"text-center\">\r\n\r\n          {!loading || dataLoadError ? \r\n\r\n            <div>\r\n              <div style={{marginBottom:'50px'}}>\r\n                <div className=\"text-left\" style={{width: '100%'}}>Avarage Power (KW)</div>\r\n                <CChartLine \r\n                  datasets={graphData.datasets}\r\n                  labels={graphData.labels}\r\n                  options={options} />\r\n                <div className=\"text-center mt-1\" style={{width: '100%'}}>Wind speed (m/s)</div>\r\n              </div>\r\n            </div>\r\n\r\n          : \r\n            <CSpinner \r\n              className=\"loading-spinner\"\r\n              color='#321fdb'\r\n            />\r\n          }\r\n            \r\n          </CCol>\r\n        </CRow>\r\n\r\n\r\n        }\r\n\r\n      </CCardBody>\r\n\r\n\r\n\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}